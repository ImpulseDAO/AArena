{"version":3,"file":"static/js/687.cfc46af6.chunk.js","mappings":"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","sources":["app/api/characters.ts","components/SchoolOfMagic/ShoolOfMagic.tsx","webpack://dapp/./src/components/StrategyInput/StrategyInput.module.css?7c0f","components/StrategyInput/StrategyInput.tsx","hooks/useShouldUseVoucher/useShouldUseVoucher.ts"],"sourcesContent":["import { useAccount } from \"@gear-js/react-hooks\";\nimport { graphql } from \"gql/gql\";\nimport {\n  getGraphQLPrimaryKey,\n  useGraphQL,\n} from \"app/providers/ReactQuery/useGraphQL\";\nimport { UseQueryResult } from \"@tanstack/react-query\";\nimport { queryClient } from \"app/providers/ReactQuery\";\n\nconst allCharactersQueryDocument = graphql(/* GraphQL */ `\n  query AllCharacters {\n    characters {\n      id\n      level\n      name\n      owner\n      experience\n      attributes\n    }\n  }\n`);\n\nexport const useAllCharacters = () => useGraphQL(allCharactersQueryDocument);\n\nconst charactersByOwnerQueryDocument = graphql(/* GraphQL */ `\n  query CharactersByOwner($owner_eq: String!) {\n    characters(where: { owner_eq: $owner_eq }) {\n      id\n      level\n      name\n      owner\n      experience\n      attributes\n    }\n  }\n`);\n\nexport const resetUseMyCharacrersQuery = () => {\n  const primaryKey = getGraphQLPrimaryKey(charactersByOwnerQueryDocument);\n\n  queryClient.invalidateQueries({ queryKey: [primaryKey] });\n};\n\nexport const useMyCharacters = ({ owner_eq }: { owner_eq: string }) => {\n  return useGraphQL(charactersByOwnerQueryDocument, {\n    owner_eq,\n  });\n};\n\nexport const useMyCharacter = () => {\n  const { account } = useAccount();\n  const queryResult = useMyCharacters({\n    owner_eq: account?.decodedAddress ?? \"\",\n  });\n\n  const myCharacters = queryResult.data;\n\n  return {\n    ...queryResult,\n    data: myCharacters?.characters[\n      myCharacters?.characters.length - 1\n    ] as Character,\n  };\n};\n\nconst characterByIdQueryDocument = graphql(/* GraphQL */ `\n  query CharacterById($character_id: String!) {\n    characterById(id: $character_id) {\n      attributes\n      experience\n      id\n      level\n      name\n      owner\n    }\n  }\n`);\n\nexport const useCharacterById = ({ id }: { id: string }) => {\n  return useGraphQL(characterByIdQueryDocument, {\n    character_id: id,\n  }) as UseQueryResult<Character>;\n};\n","import { Flex, Image, Text } from \"@mantine/core\";\n\nimport ElementFire from \"assets/images/element-fire.png\";\nimport ElementWater from \"assets/images/element-water.png\";\nimport ElementEarth from \"assets/images/element-earth.png\";\n\nconst magicShoolsMap = {\n  fire: {\n    imageSrc: ElementFire,\n    label: 'Fire',\n  },\n  water: {\n    imageSrc: ElementWater,\n    label: 'Water',\n  },\n  earth: {\n    imageSrc: ElementEarth,\n    label: 'Earth',\n  },\n};\n\nexport const SchoolOfMagic = ({\n  type,\n  disabled,\n  size = 60,\n  className,\n}: {\n  size?: number;\n  type?: MagicElement;\n  disabled?: boolean;\n  className?: string;\n}) => {\n  const dimmedStyle = disabled ? { filter: 'grayscale(20%) brightness(0.4)' } : {};\n\n\n  return (\n    <Flex\n      className={className}\n      gap=\"md\"\n      align=\"center\"\n      style={{ position: 'relative', ...disabled ? dimmedStyle : {} }}\n    >\n      {\n        !type ? (\n          <Text fw=\"600\" c=\"white\" >{\"Not defined\"}</Text>\n        ) : (\n          <>\n            <Image height={size} width={size} src={magicShoolsMap[type].imageSrc} />\n            <Text fw=\"600\" c=\"white\" >{magicShoolsMap[type].label}</Text>\n          </>\n        )\n      }\n\n    </Flex>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"StrategyInput_input__kyDv8\",\"options\":\"StrategyInput_options__Re18C\",\"option\":\"StrategyInput_option__oPkTR\",\"dropdown\":\"StrategyInput_dropdown__nTKGG\"};","import {\n  useUploadCode,\n} from \"hooks/useUploadCode\";\nimport { Select } from \"@mantine/core\";\nimport React from \"react\";\nimport { STRATEGY_CODE_ID_HARDCODED } from \"consts\";\nimport { useAlert } from \"@gear-js/react-hooks\";\nimport { getCodeIdsFromLocalStorage } from \"hooks/useUploadCode/useUploadCode\";\nimport styles from \"./StrategyInput.module.css\";\n\nexport const StrategyInput = ({\n  codeId,\n  setCodeId,\n  onUploadCodeChange,\n}: {\n  codeId: string;\n  setCodeId: (codeId: string | null) => void;\n  onUploadCodeChange: (codeId: string) => void;\n}) => {\n  const alert = useAlert();\n  const uploadCode = useUploadCode();\n\n  const [strategyCodeIds, setStrategyCodeIds] = React.useState<string[]>(getCodeIdsFromLocalStorage());\n\n  const selectData = React.useMemo(() => {\n    return strategyCodeIds.map((codeId, index) => {\n      const firstPart =\n        codeId === STRATEGY_CODE_ID_HARDCODED\n          ? \"Default Strategy\"\n          : `Strategy ${index + 1}`;\n\n      return {\n        value: codeId,\n        label: `${firstPart}: ${codeId.substring(0, 8)}...`,\n      };\n    });\n  }, [strategyCodeIds]);\n\n\n  /**\n   * \n   */\n\n  const inputFileRef = React.useRef<HTMLInputElement>(null);\n\n  const uploadFile = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const fileReader = new FileReader();\n    if (!event.target.files?.[0]) {\n      alert.error(\"No file selected\");\n      return;\n    }\n\n    fileReader.readAsArrayBuffer(event.target.files[0]);\n\n    fileReader.onload = async (e) => {\n      const fileContent = fileReader.result as ArrayBuffer;\n\n      if (fileContent) {\n        const buffer = Buffer.from(fileContent);\n        await uploadCode({\n          optBuffer: buffer,\n          name: \"test\",\n          metaHex: undefined,\n          resolve: (codeId) => {\n            console.log(\"upload code resolved for codeId \", codeId);\n\n            setCodeId(codeId);\n            onUploadCodeChange(codeId);\n            setStrategyCodeIds(getCodeIdsFromLocalStorage());\n          },\n        });\n      }\n    };\n  };\n\n  const handleClickAndUpload = () => {\n    if (inputFileRef.current) {\n      inputFileRef.current.click();\n    }\n  };\n\n  return (\n    <>\n      <Select\n        data={[\n          ...selectData,\n          {\n            value: \"upload\",\n            label: \"+ Upload code\",\n          },\n        ]}\n        value={codeId}\n        onChange={(value) => {\n          if (value === \"upload\") {\n            handleClickAndUpload();\n            return;\n          }\n          setCodeId(value);\n        }}\n        placeholder=\"Select items\"\n        nothingFoundMessage=\"Nothing found\"\n        classNames={{\n          input: styles.input,\n          options: styles.options,\n          option: styles.option,\n          dropdown: styles.dropdown,\n        }}\n\n      />\n\n      <input\n        type=\"file\"\n        onChange={uploadFile}\n        className={\"input_file\"}\n        ref={inputFileRef}\n        style={{\n          display: \"none\",\n        }}\n      />\n    </>\n  );\n};\n","import { useBalanceFormat, useVoucher } from \"@gear-js/react-hooks\";\nimport { MINT_PROGRAM_ID } from \"consts\";\n\nexport const useShouldUseVoucher = () => {\n  /**\n   * Voucher\n   */\n\n  const { getFormattedBalanceValue } = useBalanceFormat();\n  const { isVoucherExists, voucherBalance, isVoucherReady } =\n    useVoucher(MINT_PROGRAM_ID);\n  const formattedBalance =\n    voucherBalance &&\n    getFormattedBalanceValue(voucherBalance.toString()).toFixed();\n\n  const shouldUseVoucher =\n    isVoucherReady && isVoucherExists && formattedBalance > 10;\n\n  return shouldUseVoucher;\n};\n"],"names":["graphql","charactersByOwnerQueryDocument","resetUseMyCharacrersQuery","primaryKey","getGraphQLPrimaryKey","queryClient","invalidateQueries","queryKey","useMyCharacters","_ref","owner_eq","useGraphQL","useMyCharacter","_account$decodedAddre","account","useAccount","queryResult","decodedAddress","myCharacters","data","characters","length","magicShoolsMap","fire","imageSrc","label","water","earth","SchoolOfMagic","type","disabled","size","className","dimmedStyle","filter","_jsx","Flex","gap","align","style","position","children","_jsxs","_Fragment","Image","height","width","src","Text","fw","c","StrategyInput","codeId","setCodeId","onUploadCodeChange","alert","useAlert","uploadCode","useUploadCode","strategyCodeIds","setStrategyCodeIds","React","getCodeIdsFromLocalStorage","selectData","map","index","value","STRATEGY_CODE_ID_HARDCODED","substring","inputFileRef","Select","onChange","current","click","placeholder","nothingFoundMessage","classNames","input","styles","options","option","dropdown","async","_event$target$files","fileReader","FileReader","event","target","files","readAsArrayBuffer","onload","fileContent","result","buffer","Buffer","from","optBuffer","name","metaHex","undefined","resolve","console","log","error","ref","display","useShouldUseVoucher","getFormattedBalanceValue","useBalanceFormat","isVoucherExists","voucherBalance","isVoucherReady","useVoucher","MINT_PROGRAM_ID","formattedBalance","toString","toFixed"],"sourceRoot":""}