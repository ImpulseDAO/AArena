{"version":3,"file":"static/js/486.b79c2dfb.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Input/Input.tsx","assets/svg/upload_icon.svg","pages/UploadStrategy/UploadStrategy.tsx","../node_modules/@mantine/core/src/components/Table/Table.context.ts","../node_modules/@mantine/core/src/components/Table/Table.components.tsx","../node_modules/@mantine/core/src/components/Table/TableDataRenderer.tsx","../node_modules/@mantine/core/src/components/Table/TableScrollContainer.tsx","../node_modules/@mantine/core/src/components/Table/Table.tsx","../node_modules/@mantine/core/src/core/DirectionProvider/DirectionProvider.tsx","../node_modules/@mantine/hooks/src/use-merged-ref/use-merged-ref.ts"],"sourcesContent":["import React, {\n  ButtonHTMLAttributes,\n  DetailedHTMLProps,\n  FC,\n  ReactNode,\n} from \"react\";\nimport \"./styles.scss\";\nimport clsx from \"clsx\";\n\nexport type ButtonProps = {\n  onClick?: VoidFunction;\n  children: ReactNode;\n  disabled?: boolean;\n  value?: string;\n  buttonProps?: DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >;\n  className?: string;\n};\n\nexport const Button: FC<ButtonProps> = ({\n  onClick,\n  children,\n  disabled,\n  buttonProps,\n  className,\n}) => {\n  const classes = clsx(\"button\", className, { disabled });\n  return (\n    <button\n      {...buttonProps}\n      className={classes}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n","import { ChangeEventHandler, FC, InputHTMLAttributes, memo } from \"react\";\nimport \"./styles.scss\";\n\nexport type InputProps = {\n  inputProps?: InputHTMLAttributes<HTMLInputElement>;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n  value: string;\n  placeholder?: string;\n  className?: string;\n  name?: string;\n};\n\nexport const Input: FC<InputProps> = memo(\n  ({ inputProps, onChange, value, placeholder, name }) => (\n    <div className=\"input_container\">\n      <input\n        {...inputProps}\n        className=\"input\"\n        onChange={onChange}\n        value={value}\n        placeholder={placeholder}\n        name={name}\n      />\n    </div>\n  )\n);\n","var _rect, _g, _rect2, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgUploadIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 46,\n    height: 46,\n    viewBox: \"0 0 46 46\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 3,\n    y: 3,\n    width: 40,\n    height: 40,\n    rx: 20,\n    fill: \"#F2F4F7\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1269_19244)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.3333 26.3332L23 22.9999M23 22.9999L19.6666 26.3332M23 22.9999V30.4999M29.9916 28.3249C30.8044 27.8818 31.4465 27.1806 31.8165 26.3321C32.1866 25.4835 32.2635 24.5359 32.0351 23.6388C31.8068 22.7417 31.2862 21.9462 30.5555 21.3778C29.8248 20.8094 28.9257 20.5005 28 20.4999H26.95C26.6977 19.5243 26.2276 18.6185 25.5749 17.8507C24.9222 17.0829 24.104 16.4731 23.1817 16.0671C22.2594 15.661 21.2571 15.4694 20.2501 15.5065C19.243 15.5436 18.2575 15.8085 17.3676 16.2813C16.4777 16.7541 15.7066 17.4225 15.1122 18.2362C14.5177 19.05 14.1155 19.9879 13.9358 20.9794C13.756 21.9709 13.8034 22.9903 14.0743 23.961C14.3452 24.9316 14.8327 25.8281 15.5 26.5832\",\n    stroke: \"#475467\",\n    strokeWidth: 1.66667,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 3,\n    y: 3,\n    width: 40,\n    height: 40,\n    rx: 20,\n    stroke: \"#F9FAFB\",\n    strokeWidth: 6\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1269_19244\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 20,\n    height: 20,\n    fill: \"white\",\n    transform: \"translate(13 13)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgUploadIcon);\nexport default __webpack_public_path__ + \"static/media/upload_icon.8ab4b61f0f1776acb298ba937057eecf.svg\";\nexport { ForwardRef as ReactComponent };","import { useAccount, useApi } from \"@gear-js/react-hooks\";\nimport { ChangeEvent, useCallback, useEffect, useRef, useState } from \"react\";\nimport { Input } from \"../../components\";\nimport { Button } from \"../../components/Button\";\nimport UploadIcon from \"../../assets/svg/upload_icon.svg\";\n\nimport \"./styles.scss\";\nimport { web3FromSource } from \"@polkadot/extension-dapp\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Table } from \"@mantine/core\";\n\nexport const UploadStrategy = () => {\n  const [programName, setProgramName] = useState(\"\");\n  const inputFileRef = useRef<\n    HTMLInputElement | null\n  >(null);\n  const navigate = useNavigate();\n\n  const onChangeInputProgramName = useCallback(\n    ({ target }: ChangeEvent<HTMLInputElement>) => {\n      setProgramName(target.value);\n    },\n    []\n  );\n\n  const [fileContent, setFileContent] = useState<\n    undefined | ArrayBuffer | string | null\n  >(undefined);\n  const { api } = useApi();\n  const { account } = useAccount();\n\n  const uploadFile = async (event) => {\n    const fileReader = new FileReader();\n    fileReader.readAsText(event.target.files[0]);\n\n    fileReader.onload = async (e) => {\n      console.log(\"fileReader.result\", fileReader.result);\n      setFileContent(fileReader.result);\n    };\n  };\n\n  const handleOnUpload = () => {\n    if (inputFileRef) {\n      //@ts-ignore\n      inputFileRef.current.click();\n    }\n  };\n\n  useEffect(() => {\n    const foo = async () => {\n      if (fileContent) {\n        if (!account) {\n          throw new Error(\"No account\");\n        }\n\n        const [{ signer }] = await Promise.all([\n          web3FromSource(account.meta.source),\n        ]);\n\n        api?.code.signAndSend(account.address, { signer }, ({ events }) => {\n          navigate(\"/arena\");\n\n          events.forEach(({ event: { method, data } }) => {\n            if (method === \"ExtrinsicFailed\") {\n              console.log(\"data.toString()\", data.toHuman());\n\n              throw new Error(data.toString());\n            } else if (method === \"CodeChanged\") {\n              console.log(\"success:___\", data.toHuman());\n            }\n          });\n        });\n      }\n    };\n\n    foo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fileContent]);\n\n  return (\n    <div className=\"upload\">\n      <Table className={\"table_container\"}>\n        <div className={\"table_header\"}>Upload program (2/2)</div>\n        <div className={\"modal\"}>\n          <div className={\"top_wrapper\"}>\n            <div className={\"upload_text\"}>Upload your Arena strategy</div>\n            <div className={\"char_info\"}>Program name</div>\n            <Input\n              className={\"input_container\"}\n              onChange={onChangeInputProgramName}\n              value={programName}\n              placeholder=\"My strategy\"\n            />\n          </div>\n        </div>\n        <div className={\"input_file_container\"}>\n          <div className={\"input_file_content\"}>\n            <img src={UploadIcon} className={\"upload_icon\"} alt=\"upload icon\" />\n            <input\n              type=\"file\"\n              onChange={uploadFile}\n              className={\"input_file\"}\n              ref={inputFileRef}\n            />\n            <div className={\"text\"}> or drag and drop</div>\n            <div className={\"comment\"}> example.opt.wasm file</div>\n          </div>\n        </div>\n\n        <div className={\"buttonWrapper\"}>\n          <Button className={\"cancelButton\"} onClick={() => { }}>\n            Cancel\n          </Button>\n          <Button className={\"uploadButton\"} onClick={handleOnUpload}>\n            Upload program\n          </Button>\n        </div>\n      </Table>\n    </div>\n  );\n};\n","import { createSafeContext, GetStylesApi } from '../../core';\nimport type { TableFactory } from './Table';\n\nexport interface TableContextValue {\n  getStyles: GetStylesApi<TableFactory>;\n  stickyHeader: boolean | undefined;\n  striped: 'odd' | 'even' | undefined;\n  highlightOnHover: boolean | undefined;\n  withColumnBorders: boolean | undefined;\n  withRowBorders: boolean | undefined;\n  captionSide: 'top' | 'bottom';\n}\n\nexport const [TableProvider, useTableContext] = createSafeContext<TableContextValue>(\n  'Table component was not found in the tree'\n);\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  FactoryPayload,\n  useProps,\n} from '../../core';\nimport type { TableFactory } from './Table';\nimport { TableContextValue, useTableContext } from './Table.context';\nimport classes from './Table.module.css';\n\nexport interface TableElementProps<Selector extends string>\n  extends BoxProps,\n    CompoundStylesApiProps<Omit<TableFactory, 'stylesNames'> & { stylesNames: Selector }> {}\n\nexport interface TableThProps extends TableElementProps<'th'>, ElementProps<'th'> {}\nexport interface TableTdProps extends TableElementProps<'td'>, ElementProps<'td'> {}\nexport interface TableTrProps extends TableElementProps<'tr'>, ElementProps<'tr'> {}\nexport interface TableTheadProps extends TableElementProps<'thead'>, ElementProps<'thead'> {}\nexport interface TableTbodyProps extends TableElementProps<'tbody'>, ElementProps<'tbody'> {}\nexport interface TableTfootProps extends TableElementProps<'tfoot'>, ElementProps<'tfoot'> {}\nexport interface TableCaptionProps extends TableElementProps<'caption'>, ElementProps<'caption'> {}\n\nexport type TableThFactory = Factory<{\n  props: TableThProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'th';\n  compound: true;\n}>;\n\nexport type TableTdFactory = Factory<{\n  props: TableTdProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'td';\n  compound: true;\n}>;\n\nexport type TableTrFactory = Factory<{\n  props: TableTrProps;\n  ref: HTMLTableRowElement;\n  stylesNames: 'tr';\n  compound: true;\n}>;\n\nexport type TableTheadFactory = Factory<{\n  props: TableTheadProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'thead';\n  compound: true;\n}>;\n\nexport type TableTbodyFactory = Factory<{\n  props: TableTbodyProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tbody';\n  compound: true;\n}>;\n\nexport type TableTfootFactory = Factory<{\n  props: TableTfootProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tfoot';\n  compound: true;\n}>;\n\nexport type TableCaptionFactory = Factory<{\n  props: TableCaptionProps;\n  ref: HTMLTableCaptionElement;\n  stylesNames: 'caption';\n  compound: true;\n}>;\n\ninterface TableElementOptions {\n  columnBorder?: true;\n  rowBorder?: true;\n  striped?: true;\n  highlightOnHover?: true;\n  captionSide?: true;\n  stickyHeader?: true;\n}\n\nfunction getDataAttributes(ctx: TableContextValue, options?: TableElementOptions) {\n  if (!options) {\n    return undefined;\n  }\n\n  const data: Record<string, boolean | string> = {};\n\n  if (options.columnBorder && ctx.withColumnBorders) {\n    data['data-with-column-border'] = true;\n  }\n\n  if (options.rowBorder && ctx.withRowBorders) {\n    data['data-with-row-border'] = true;\n  }\n\n  if (options.striped && ctx.striped) {\n    data['data-striped'] = ctx.striped;\n  }\n\n  if (options.highlightOnHover && ctx.highlightOnHover) {\n    data['data-hover'] = true;\n  }\n\n  if (options.captionSide && ctx.captionSide) {\n    data['data-side'] = ctx.captionSide;\n  }\n\n  if (options.stickyHeader && ctx.stickyHeader) {\n    data['data-sticky'] = true;\n  }\n\n  return data;\n}\n\nexport function tableElement<Factory extends FactoryPayload>(\n  element: 'th' | 'td' | 'tr' | 'thead' | 'tbody' | 'tfoot' | 'caption',\n  options?: TableElementOptions\n) {\n  const name = `Table${element.charAt(0).toUpperCase()}${element.slice(1)}`;\n  const Component = factory<Factory>((_props, ref) => {\n    const props = useProps(name, {}, _props);\n    const { classNames, className, style, styles, ...others } = props;\n\n    const ctx = useTableContext();\n\n    return (\n      <Box\n        component={element}\n        ref={ref}\n        {...getDataAttributes(ctx, options)}\n        {...ctx.getStyles(element, { className, classNames, style, styles, props })}\n        {...others}\n      />\n    );\n  });\n\n  Component.displayName = `@mantine/core/${name}`;\n  Component.classes = classes;\n  return Component;\n}\n\nexport const TableTh = tableElement<TableThFactory>('th', { columnBorder: true });\nexport const TableTd = tableElement<TableTdFactory>('td', { columnBorder: true });\nexport const TableTr = tableElement<TableTrFactory>('tr', {\n  rowBorder: true,\n  striped: true,\n  highlightOnHover: true,\n});\nexport const TableThead = tableElement<TableTheadFactory>('thead', { stickyHeader: true });\nexport const TableTbody = tableElement<TableTbodyFactory>('tbody');\nexport const TableTfoot = tableElement<TableTfootFactory>('tfoot');\nexport const TableCaption = tableElement<TableCaptionFactory>('caption', { captionSide: true });\n","import React from 'react';\nimport type { TableData } from './Table';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\n\nexport interface TableDataRendererProps {\n  data: TableData;\n}\n\nexport function TableDataRenderer({ data }: TableDataRendererProps) {\n  return (\n    <>\n      {data.caption && <TableCaption>{data.caption}</TableCaption>}\n\n      {data.head && (\n        <TableThead>\n          <TableTr>\n            {data.head.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableThead>\n      )}\n\n      {data.body && (\n        <TableTbody>\n          {data.body.map((row, rowIndex) => (\n            <TableTr key={rowIndex}>\n              {row.map((item, index) => (\n                <TableTd key={index}>{item}</TableTd>\n              ))}\n            </TableTr>\n          ))}\n        </TableTbody>\n      )}\n\n      {data.foot && (\n        <TableTfoot>\n          <TableTr>\n            {data.foot.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableTfoot>\n      )}\n    </>\n  );\n}\n\nTableDataRenderer.displayName = '@mantine/core/TableDataRenderer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollArea } from '../ScrollArea';\nimport classes from './Table.module.css';\n\nexport type TableScrollContainerStylesNames = 'scrollContainer' | 'scrollContainerInner';\nexport type TableScrollContainerCssVariables = {\n  scrollContainer: '--table-min-width' | '--table-overflow';\n};\n\nexport interface TableScrollContainerProps\n  extends BoxProps,\n    StylesApiProps<TableScrollContainerFactory>,\n    ElementProps<'div'> {\n  /** `min-width` of the `Table` at which it should become scrollable */\n  minWidth: React.CSSProperties['minWidth'];\n\n  /** Type of the scroll container, `native` to use native scrollbars, `scrollarea` to use `ScrollArea` component, `scrollarea` by default */\n  type?: 'native' | 'scrollarea';\n}\n\nexport type TableScrollContainerFactory = Factory<{\n  props: TableScrollContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: TableScrollContainerStylesNames;\n  vars: TableScrollContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<TableScrollContainerProps> = {\n  type: 'scrollarea',\n};\n\nconst varsResolver = createVarsResolver<TableScrollContainerFactory>((_, { minWidth, type }) => ({\n  scrollContainer: {\n    '--table-min-width': rem(minWidth),\n    '--table-overflow': type === 'native' ? 'auto' : undefined,\n  },\n}));\n\nexport const TableScrollContainer = factory<TableScrollContainerFactory>((_props, ref) => {\n  const props = useProps('TableScrollContainer', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableScrollContainerFactory>({\n    name: 'TableScrollContainer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'scrollContainer',\n  });\n\n  return (\n    <Box<any>\n      component={type === 'scrollarea' ? ScrollArea : 'div'}\n      {...(type === 'scrollarea' ? { offsetScrollbars: 'x' } : {})}\n      ref={ref}\n      {...getStyles('scrollContainer')}\n      {...others}\n    >\n      <div {...getStyles('scrollContainerInner')}>{children}</div>\n    </Box>\n  );\n});\n\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = '@mantine/core/TableScrollContainer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\nimport { TableProvider } from './Table.context';\nimport { TableDataRenderer } from './TableDataRenderer';\nimport { TableScrollContainer } from './TableScrollContainer';\nimport classes from './Table.module.css';\n\nexport type TableStylesNames =\n  | 'table'\n  | 'thead'\n  | 'tbody'\n  | 'tfoot'\n  | 'tr'\n  | 'th'\n  | 'td'\n  | 'caption';\n\nexport type TableCssVariables = {\n  table:\n    | '--table-layout'\n    | '--table-border-color'\n    | '--table-caption-side'\n    | '--table-horizontal-spacing'\n    | '--table-vertical-spacing'\n    | '--table-striped-color'\n    | '--table-highlight-on-hover-color'\n    | '--table-sticky-header-offset';\n};\n\nexport interface TableData {\n  head?: React.ReactNode[];\n  body?: React.ReactNode[][];\n  foot?: React.ReactNode[];\n  caption?: string;\n}\n\nexport interface TableProps extends BoxProps, StylesApiProps<TableFactory>, ElementProps<'table'> {\n  /** Value of `table-layout` style, `auto` by default */\n  layout?: React.CSSProperties['tableLayout'];\n\n  /** Determines on which side `Table.Caption` is displayed, `bottom` by default */\n  captionSide?: 'top' | 'bottom';\n\n  /** Color of table borders, key of `theme.colors` or any valid CSS color */\n  borderColor?: MantineColor;\n\n  /** Determines whether the table should have outer border, `false` by default */\n  withTableBorder?: boolean;\n\n  /** Determines whether the table should have borders between columns, `false` by default */\n  withColumnBorders?: boolean;\n\n  /** Determines whether the table should have borders between rows, `true` by default */\n  withRowBorders?: boolean;\n\n  /** Horizontal cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  horizontalSpacing?: MantineSpacing;\n\n  /** Vertical cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  verticalSpacing?: MantineSpacing;\n\n  /** Determines whether every odd/even row background should be changed to `strippedColor`, if set to `true`, then `odd` value will be used, `false` by default  */\n  striped?: boolean | 'odd' | 'even';\n\n  /** Background color of striped rows, key of `theme.colors` or any valid CSS color */\n  stripedColor?: MantineColor;\n\n  /** Determines whether table rows background should change to `highlightOnHoverColor` when hovered, `false` by default */\n  highlightOnHover?: boolean;\n\n  /** Background color of table rows when hovered, key of `theme.colors` or any valid CSS color */\n  highlightOnHoverColor?: MantineColor;\n\n  /** Data that should be used to generate table, ignored if `children` prop is set */\n  data?: TableData;\n\n  /** Determines whether `Table.Thead` should be sticky, `false` by default */\n  stickyHeader?: boolean;\n\n  /** Offset from top at which `Table.Thead` should become sticky, `0` by default */\n  stickyHeaderOffset?: number | string;\n}\n\nexport type TableFactory = Factory<{\n  props: TableProps;\n  ref: HTMLTableElement;\n  stylesNames: TableStylesNames;\n  vars: TableCssVariables;\n  staticComponents: {\n    Thead: typeof TableThead;\n    Tbody: typeof TableTbody;\n    Tfoot: typeof TableTfoot;\n    Td: typeof TableTd;\n    Th: typeof TableTh;\n    Tr: typeof TableTr;\n    Caption: typeof TableCaption;\n    ScrollContainer: typeof TableScrollContainer;\n    DataRenderer: typeof TableDataRenderer;\n  };\n}>;\n\nconst defaultProps: Partial<TableProps> = {\n  withRowBorders: true,\n  verticalSpacing: 7,\n};\n\nconst varsResolver = createVarsResolver<TableFactory>(\n  (\n    theme,\n    {\n      layout,\n      captionSide,\n      horizontalSpacing,\n      verticalSpacing,\n      borderColor,\n      stripedColor,\n      highlightOnHoverColor,\n      striped,\n      highlightOnHover,\n      stickyHeaderOffset,\n      stickyHeader,\n    }\n  ) => ({\n    table: {\n      '--table-layout': layout,\n      '--table-caption-side': captionSide,\n      '--table-horizontal-spacing': getSpacing(horizontalSpacing),\n      '--table-vertical-spacing': getSpacing(verticalSpacing),\n      '--table-border-color': borderColor ? getThemeColor(borderColor, theme) : undefined,\n      '--table-striped-color':\n        striped && stripedColor ? getThemeColor(stripedColor, theme) : undefined,\n      '--table-highlight-on-hover-color':\n        highlightOnHover && highlightOnHoverColor\n          ? getThemeColor(highlightOnHoverColor, theme)\n          : undefined,\n      '--table-sticky-header-offset': stickyHeader ? rem(stickyHeaderOffset) : undefined,\n    },\n  })\n);\n\nexport const Table = factory<TableFactory>((_props, ref) => {\n  const props = useProps('Table', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableFactory>({\n    name: 'Table',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'table',\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TableProvider\n      value={{\n        getStyles,\n        stickyHeader,\n        striped: striped === true ? 'odd' : striped || undefined,\n        highlightOnHover,\n        withColumnBorders,\n        withRowBorders,\n        captionSide: captionSide || 'bottom',\n      }}\n    >\n      <Box\n        component=\"table\"\n        variant={variant}\n        ref={ref}\n        mod={{ 'data-with-table-border': withTableBorder }}\n        {...getStyles('table')}\n        {...others}\n      >\n        {children || (!!data && <TableDataRenderer data={data} />)}\n      </Box>\n    </TableProvider>\n  );\n});\n\nTable.classes = classes;\nTable.displayName = '@mantine/core/Table';\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\n","import React, { createContext, useContext, useState } from 'react';\nimport { useIsomorphicEffect } from '@mantine/hooks';\n\nexport type Direction = 'ltr' | 'rtl';\n\nexport interface DirectionContextValue {\n  dir: Direction;\n  toggleDirection: () => void;\n  setDirection: (dir: Direction) => void;\n}\n\nexport const DirectionContext = createContext<DirectionContextValue>({\n  dir: 'ltr',\n  toggleDirection: () => {},\n  setDirection: () => {},\n});\n\nexport function useDirection() {\n  return useContext(DirectionContext);\n}\n\nexport interface DirectionProviderProps {\n  /** Your application */\n  children: React.ReactNode;\n\n  /** Direction set as a default value, `ltr` by default */\n  initialDirection?: Direction;\n\n  /** Determines whether direction should be updated on mount based on `dir` attribute set on root element (usually html element), `true` by default  */\n  detectDirection?: boolean;\n}\n\nexport function DirectionProvider({\n  children,\n  initialDirection = 'ltr',\n  detectDirection = true,\n}: DirectionProviderProps) {\n  const [dir, setDir] = useState<Direction>(initialDirection);\n\n  const setDirection = (direction: Direction) => {\n    setDir(direction);\n    document.documentElement.setAttribute('dir', direction);\n  };\n\n  const toggleDirection = () => setDirection(dir === 'ltr' ? 'rtl' : 'ltr');\n\n  useIsomorphicEffect(() => {\n    if (detectDirection) {\n      const direction = document.documentElement.getAttribute('dir');\n      if (direction === 'rtl' || direction === 'ltr') {\n        setDirection(direction);\n      }\n    }\n  }, []);\n\n  return (\n    <DirectionContext.Provider value={{ dir, toggleDirection, setDirection }}>\n      {children}\n    </DirectionContext.Provider>\n  );\n}\n","import { Ref, useCallback } from 'react';\n\ntype PossibleRef<T> = Ref<T> | undefined;\n\nexport function assignRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (typeof ref === 'object' && ref !== null && 'current' in ref) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\nexport function mergeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T | null) => {\n    refs.forEach((ref) => assignRef(ref, node));\n  };\n}\n\nexport function useMergedRef<T>(...refs: PossibleRef<T>[]) {\n  return useCallback(mergeRefs(...refs), refs);\n}\n"],"names":["Button","_ref","onClick","children","disabled","buttonProps","className","classes","clsx","_jsx","Input","memo","inputProps","onChange","value","placeholder","name","UploadStrategy","programName","setProgramName","useState","inputFileRef","useRef","navigate","useNavigate","onChangeInputProgramName","useCallback","target","fileContent","setFileContent","undefined","api","useApi","account","useAccount","useEffect","async","Error","signer","Promise","all","web3FromSource","meta","source","code","signAndSend","address","_ref2","events","forEach","_ref3","event","method","data","console","log","toHuman","toString","foo","_jsxs","Table","src","UploadIcon","alt","type","fileReader","FileReader","readAsText","files","onload","result","ref","handleOnUpload","current","click","TableProvider","useTableContext","createSafeContext","getDataAttributes","ctx","options","columnBorder","withColumnBorders","rowBorder","withRowBorders","striped","highlightOnHover","captionSide","stickyHeader","tableElement","element","charAt","toUpperCase","slice","Component","factory","_props","props","useProps","classNames","style","styles","others","React","Box","component","getStyles","displayName","TableTh","TableTd","TableTr","TableThead","TableTbody","TableTfoot","TableCaption","TableDataRenderer","caption","head","map","item","index","key","body","row","rowIndex","foot","defaultProps","varsResolver","createVarsResolver","_","minWidth","scrollContainer","rem","TableScrollContainer","unstyled","vars","useStyles","rootSelector","ScrollArea","offsetScrollbars","verticalSpacing","theme","layout","horizontalSpacing","borderColor","stripedColor","highlightOnHoverColor","stickyHeaderOffset","table","getSpacing","getThemeColor","withTableBorder","variant","mod","Td","Th","Tr","Thead","Tbody","Tfoot","Caption","ScrollContainer","DataRenderer","DirectionContext","createContext","dir","toggleDirection","setDirection","useDirection","useContext","assignRef","useMergedRef","_len2","arguments","length","refs","Array","_key2","_len","_key","node","mergeRefs"],"sourceRoot":""}