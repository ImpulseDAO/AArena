{"version":3,"file":"static/js/739.532a7a0e.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/components/Anchor/Anchor.tsx","../node_modules/@mantine/core/src/components/Divider/Divider.tsx","../node_modules/@mantine/core/src/components/Paper/Paper.tsx","../node_modules/@mantine/core/src/components/Transition/get-transition-props/get-transition-props.ts","../node_modules/@mantine/core/src/core/Box/get-style-object/get-style-object.ts","../node_modules/@mantine/core/src/components/Tooltip/TooltipFloating/TooltipFloating.tsx","../node_modules/@mantine/core/src/components/Tooltip/TooltipFloating/use-floating-tooltip.ts","../node_modules/@mantine/core/src/components/Tooltip/TooltipGroup/TooltipGroup.context.ts","../node_modules/@mantine/core/src/components/Tooltip/TooltipGroup/TooltipGroup.tsx","../node_modules/@mantine/core/src/components/Tooltip/use-tooltip.ts","../node_modules/@mantine/core/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React from 'react';\nimport cx from 'clsx';\nimport { polymorphicFactory, PolymorphicFactory, useProps } from '../../core';\nimport { Text, TextCssVariables, TextProps, TextStylesNames, TextVariant } from '../Text';\nimport classes from './Anchor.module.css';\n\nexport type AnchorStylesNames = TextStylesNames;\nexport type AnchorVariant = TextVariant;\nexport type AnchorCssVariables = TextCssVariables;\n\nexport interface AnchorProps extends Omit<TextProps, 'span'> {\n  /** Determines in which cases link should have `text-decoration: underline` styles, `hover` by default */\n  underline?: 'always' | 'hover' | 'never';\n}\n\nexport type AnchorFactory = PolymorphicFactory<{\n  props: AnchorProps;\n  defaultComponent: 'a';\n  defaultRef: HTMLAnchorElement;\n  stylesNames: AnchorStylesNames;\n  vars: AnchorCssVariables;\n  variant: AnchorVariant;\n}>;\n\nconst defaultProps: Partial<AnchorProps> = {\n  underline: 'hover',\n};\n\nexport const Anchor = polymorphicFactory<AnchorFactory>((props, ref) => {\n  const { underline, className, unstyled, ...others } = useProps('Anchor', defaultProps, props);\n  return (\n    <Text\n      component=\"a\"\n      ref={ref}\n      className={cx({ [classes.root]: !unstyled }, className)}\n      {...others}\n      mod={{ underline }}\n      __staticSelector=\"Anchor\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nAnchor.classes = classes;\nAnchor.displayName = '@mantine/core/Anchor';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Divider.module.css';\n\nexport type DividerStylesNames = 'root' | 'label';\nexport type DividerVariant = 'solid' | 'dashed' | 'dotted';\nexport type DividerCssVariables = {\n  root: '--divider-color' | '--divider-border-style' | '--divider-size';\n};\n\nexport interface DividerProps\n  extends BoxProps,\n    StylesApiProps<DividerFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value, by default value depends on color scheme */\n  color?: MantineColor;\n\n  /** Controls width/height (depends on orientation), `'xs'` by default */\n  size?: MantineSize | number | (string & {});\n\n  /** Divider label, visible only when `orientation` is `horizontal` */\n  label?: React.ReactNode;\n\n  /** Controls label position, `'left'` by default */\n  labelPosition?: 'left' | 'center' | 'right';\n\n  /** Controls orientation, `'horizontal'` by default */\n  orientation?: 'horizontal' | 'vertical';\n}\n\nexport type DividerFactory = Factory<{\n  props: DividerProps;\n  ref: HTMLDivElement;\n  stylesNames: DividerStylesNames;\n  vars: DividerCssVariables;\n  variant: DividerVariant;\n}>;\n\nconst defaultProps: Partial<DividerProps> = {\n  orientation: 'horizontal',\n};\n\nconst varsResolver = createVarsResolver<DividerFactory>((theme, { color, variant, size }) => ({\n  root: {\n    '--divider-color': color ? getThemeColor(color, theme) : undefined,\n    '--divider-border-style': variant,\n    '--divider-size': getSize(size, 'divider-size'),\n  },\n}));\n\nexport const Divider = factory<DividerFactory>((_props, ref) => {\n  const props = useProps('Divider', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    orientation,\n    label,\n    labelPosition,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<DividerFactory>({\n    name: 'Divider',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={{ orientation, 'with-label': !!label }}\n      {...getStyles('root')}\n      {...others}\n      role=\"separator\"\n    >\n      {label && (\n        <Box component=\"span\" mod={{ position: labelPosition }} {...getStyles('label')}>\n          {label}\n        </Box>\n      )}\n    </Box>\n  );\n});\n\nDivider.classes = classes;\nDivider.displayName = '@mantine/core/Divider';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getShadow,\n  MantineRadius,\n  MantineShadow,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Paper.module.css';\n\nexport type PaperStylesNames = 'root';\nexport type PaperCssVariables = {\n  root: '--paper-radius' | '--paper-shadow';\n};\n\nexport interface PaperBaseProps {\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Determines whether the paper should have border, border color depends on color scheme, `false` by default */\n  withBorder?: boolean;\n}\n\nexport interface PaperProps extends BoxProps, PaperBaseProps, StylesApiProps<PaperFactory> {}\n\nexport type PaperFactory = PolymorphicFactory<{\n  props: PaperProps;\n  defaultComponent: 'div';\n  defaultRef: HTMLDivElement;\n  stylesNames: PaperStylesNames;\n  vars: PaperCssVariables;\n}>;\n\nconst defaultProps: Partial<PaperProps> = {};\n\nconst varsResolver = createVarsResolver<PaperFactory>((_, { radius, shadow }) => ({\n  root: {\n    '--paper-radius': radius === undefined ? undefined : getRadius(radius),\n    '--paper-shadow': getShadow(shadow),\n  },\n}));\n\nexport const Paper = polymorphicFactory<PaperFactory>((_props, ref) => {\n  const props = useProps('Paper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    withBorder,\n    vars,\n    radius,\n    shadow,\n    variant,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PaperFactory>({\n    name: 'Paper',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={{ 'data-with-border': withBorder }}\n      {...getStyles('root')}\n      variant={variant}\n      {...others}\n    />\n  );\n});\n\nPaper.classes = classes;\nPaper.displayName = '@mantine/core/Paper';\n","import type { SetRequired } from 'type-fest';\nimport type { TransitionOverride } from '../Transition';\n\ntype MinimalTransitionOverride = SetRequired<TransitionOverride, 'duration' | 'transition'>;\n\nconst defaultTransition: MinimalTransitionOverride = {\n  duration: 100,\n  transition: 'fade',\n};\n\nexport function getTransitionProps(\n  transitionProps: TransitionOverride | undefined,\n  componentTransition: TransitionOverride | undefined\n): MinimalTransitionOverride {\n  return { ...defaultTransition, ...componentTransition, ...transitionProps };\n}\n","import type { MantineTheme } from '../../MantineProvider';\nimport type { MantineStyleProp } from '../Box.types';\n\nexport function getStyleObject(\n  style: MantineStyleProp | undefined,\n  theme: MantineTheme\n): React.CSSProperties {\n  if (Array.isArray(style)) {\n    return [...style].reduce<Record<string, any>>(\n      (acc, item) => ({ ...acc, ...getStyleObject(item, theme) }),\n      {}\n    );\n  }\n\n  if (typeof style === 'function') {\n    return style(theme);\n  }\n\n  if (style == null) {\n    return {};\n  }\n\n  return style;\n}\n","import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getStyleObject,\n  getThemeColor,\n  isElement,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { OptionalPortal } from '../../Portal';\nimport { TooltipBaseProps, TooltipCssVariables, TooltipStylesNames } from '../Tooltip.types';\nimport { useFloatingTooltip } from './use-floating-tooltip';\nimport classes from '../Tooltip.module.css';\n\nexport interface TooltipFloatingProps extends TooltipBaseProps {\n  /** Offset from mouse in px, `10` by default */\n  offset?: number;\n}\n\nexport type TooltipFloatingFactory = Factory<{\n  props: TooltipFloatingProps;\n  ref: HTMLDivElement;\n  stylesNames: TooltipStylesNames;\n  vars: TooltipCssVariables;\n}>;\n\nconst defaultProps: Partial<TooltipFloatingProps> = {\n  refProp: 'ref',\n  withinPortal: true,\n  offset: 10,\n  position: 'right',\n  zIndex: getDefaultZIndex('popover'),\n};\n\nconst varsResolver = createVarsResolver<TooltipFloatingFactory>((theme, { radius, color }) => ({\n  tooltip: {\n    '--tooltip-radius': radius === undefined ? undefined : getRadius(radius),\n    '--tooltip-bg': color ? getThemeColor(color, theme) : undefined,\n    '--tooltip-color': color ? 'var(--mantine-color-white)' : undefined,\n  },\n}));\n\nexport const TooltipFloating = factory<TooltipFloatingFactory>((_props, ref) => {\n  const props = useProps('TooltipFloating', defaultProps, _props);\n  const {\n    children,\n    refProp,\n    withinPortal,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    radius,\n    color,\n    label,\n    offset,\n    position,\n    multiline,\n    zIndex,\n    disabled,\n    variant,\n    vars,\n    portalProps,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const getStyles = useStyles<TooltipFloatingFactory>({\n    name: 'TooltipFloating',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'tooltip',\n    vars,\n    varsResolver,\n  });\n\n  const { handleMouseMove, x, y, opened, boundaryRef, floating, setOpened } = useFloatingTooltip({\n    offset: offset!,\n    position: position!,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(\n      '[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const targetRef = useMergedRef(boundaryRef, (children as any).ref, ref);\n\n  const onMouseEnter = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    children.props.onMouseEnter?.(event);\n    handleMouseMove(event);\n    setOpened(true);\n  };\n\n  const onMouseLeave = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    children.props.onMouseLeave?.(event);\n    setOpened(false);\n  };\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Box\n          {...others}\n          {...getStyles('tooltip', {\n            style: {\n              ...getStyleObject(style, theme),\n              zIndex: zIndex as React.CSSProperties['zIndex'],\n              display: !disabled && opened ? 'block' : 'none',\n              top: (y && Math.round(y)) ?? '',\n              left: (x && Math.round(x)) ?? '',\n            },\n          })}\n          variant={variant}\n          ref={floating}\n        >\n          {label}\n        </Box>\n      </OptionalPortal>\n\n      {cloneElement(children, {\n        ...children.props,\n        [refProp!]: targetRef,\n        onMouseEnter,\n        onMouseLeave,\n      })}\n    </>\n  );\n});\n\nTooltipFloating.classes = classes;\nTooltipFloating.displayName = '@mantine/core/TooltipFloating';\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { getOverflowAncestors, shift, useFloating } from '@floating-ui/react';\nimport { FloatingPosition } from '../../Floating';\n\ninterface UseFloatingTooltip {\n  offset: number;\n  position: FloatingPosition;\n}\n\nexport function useFloatingTooltip<T extends HTMLElement = any>({\n  offset,\n  position,\n}: UseFloatingTooltip) {\n  const [opened, setOpened] = useState(false);\n  const boundaryRef = useRef<T>();\n  const { x, y, elements, refs, update, placement } = useFloating({\n    placement: position,\n    middleware: [\n      shift({\n        crossAxis: true,\n        padding: 5,\n        rootBoundary: 'document',\n      }),\n    ],\n  });\n\n  const horizontalOffset = placement.includes('right')\n    ? offset\n    : position.includes('left')\n      ? offset * -1\n      : 0;\n\n  const verticalOffset = placement.includes('bottom')\n    ? offset\n    : position.includes('top')\n      ? offset * -1\n      : 0;\n\n  const handleMouseMove = useCallback(\n    ({ clientX, clientY }: MouseEvent | React.MouseEvent<T, MouseEvent>) => {\n      refs.setPositionReference({\n        getBoundingClientRect() {\n          return {\n            width: 0,\n            height: 0,\n            x: clientX,\n            y: clientY,\n            left: clientX + horizontalOffset,\n            top: clientY + verticalOffset,\n            right: clientX,\n            bottom: clientY,\n          };\n        },\n      });\n    },\n    [elements.reference]\n  );\n\n  useEffect(() => {\n    if (refs.floating.current) {\n      const boundary = boundaryRef.current!;\n      boundary.addEventListener('mousemove', handleMouseMove);\n\n      const parents = getOverflowAncestors(refs.floating.current);\n      parents.forEach((parent) => {\n        parent.addEventListener('scroll', update);\n      });\n\n      return () => {\n        boundary.removeEventListener('mousemove', handleMouseMove);\n        parents.forEach((parent) => {\n          parent.removeEventListener('scroll', update);\n        });\n      };\n    }\n\n    return undefined;\n  }, [elements.reference, refs.floating.current, update, handleMouseMove, opened]);\n\n  return { handleMouseMove, x, y, opened, setOpened, boundaryRef, floating: refs.setFloating };\n}\n","import { createContext, useContext } from 'react';\n\nconst TooltipGroupContext = createContext(false);\n\nexport const TooltipGroupProvider = TooltipGroupContext.Provider;\nexport const useTooltipGroupContext = () => useContext(TooltipGroupContext);\n","import React from 'react';\nimport { FloatingDelayGroup } from '@floating-ui/react';\nimport { useProps } from '../../../core';\nimport { TooltipGroupProvider } from './TooltipGroup.context';\n\nexport interface TooltipGroupProps {\n  /** <Tooltip /> components */\n  children: React.ReactNode;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms */\n  closeDelay?: number;\n}\n\nconst defaultProps: Partial<TooltipGroupProps> = {\n  openDelay: 0,\n  closeDelay: 0,\n};\n\nexport function TooltipGroup(props: TooltipGroupProps) {\n  const { openDelay, closeDelay, children } = useProps('TooltipGroup', defaultProps, props);\n\n  return (\n    <TooltipGroupProvider value>\n      <FloatingDelayGroup delay={{ open: openDelay, close: closeDelay }}>\n        {children}\n      </FloatingDelayGroup>\n    </TooltipGroupProvider>\n  );\n}\n\nTooltipGroup.displayName = '@mantine/core/TooltipGroup';\n","import { useCallback, useState } from 'react';\nimport {\n  arrow,\n  flip,\n  inline,\n  offset,\n  shift,\n  useDelayGroup,\n  useDelayGroupContext,\n  useDismiss,\n  useFloating,\n  useFocus,\n  useHover,\n  useInteractions,\n  useRole,\n} from '@floating-ui/react';\nimport { useDidUpdate, useId } from '@mantine/hooks';\nimport { FloatingAxesOffsets, FloatingPosition, useFloatingAutoUpdate } from '../Floating';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context';\n\ninterface UseTooltip {\n  position: FloatingPosition;\n  closeDelay?: number;\n  openDelay?: number;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened?: boolean;\n  offset: number | FloatingAxesOffsets;\n  arrowRef?: React.RefObject<HTMLDivElement>;\n  arrowOffset?: number;\n  events?: { hover: boolean; focus: boolean; touch: boolean };\n  positionDependencies: any[];\n  inline?: boolean;\n}\n\nexport function useTooltip(settings: UseTooltip) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(false);\n  const controlled = typeof settings.opened === 'boolean';\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n\n  const { delay: groupDelay, currentId, setCurrentId } = useDelayGroupContext();\n\n  const onChange = useCallback(\n    (_opened: boolean) => {\n      setUncontrolledOpened(_opened);\n\n      if (_opened) {\n        setCurrentId(uid);\n      }\n    },\n    [setCurrentId, uid]\n  );\n\n  const {\n    x,\n    y,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: { arrow: { x: arrowX, y: arrowY } = {} },\n  } = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [\n      offset(settings.offset),\n      shift({ padding: 8 }),\n      flip(),\n      arrow({ element: settings.arrowRef!, padding: settings.arrowOffset }),\n      ...(settings.inline ? [inline()] : []),\n    ],\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: settings.events?.hover,\n      delay: withinGroup ? groupDelay : { open: settings.openDelay, close: settings.closeDelay },\n      mouseOnly: !settings.events?.touch,\n    }),\n    useFocus(context, { enabled: settings.events?.focus, keyboardOnly: true }),\n    useRole(context, { role: 'tooltip' }),\n    // cannot be used with controlled tooltip, page jumps\n    useDismiss(context, { enabled: typeof settings.opened === 'undefined' }),\n    useDelayGroup(context, { id: uid }),\n  ]);\n\n  useFloatingAutoUpdate({\n    opened,\n    position: settings.position,\n    positionDependencies: settings.positionDependencies,\n    floating: { refs, update },\n  });\n\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n\n  const isGroupPhase = opened && currentId && currentId !== uid;\n\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference: refs.setReference,\n    floating: refs.setFloating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement,\n  };\n}\n","import React, { cloneElement, useRef } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getThemeColor,\n  isElement,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  ArrowPosition,\n  FloatingArrow,\n  FloatingAxesOffsets,\n  FloatingPosition,\n  getFloatingPosition,\n} from '../Floating';\nimport { OptionalPortal } from '../Portal';\nimport { getTransitionProps, Transition, TransitionOverride } from '../Transition';\nimport { TooltipBaseProps, TooltipCssVariables, TooltipStylesNames } from './Tooltip.types';\nimport { TooltipFloating } from './TooltipFloating/TooltipFloating';\nimport { TooltipGroup } from './TooltipGroup/TooltipGroup';\nimport { useTooltip } from './use-tooltip';\nimport classes from './Tooltip.module.css';\n\nexport interface TooltipProps extends TooltipBaseProps {\n  /** Called when tooltip position changes */\n  onPositionChange?: (position: FloatingPosition) => void;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms, `0` by default */\n  closeDelay?: number;\n\n  /** Controlled opened state */\n  opened?: boolean;\n\n  /** Space between target element and tooltip in px, `5` by default */\n  offset?: number | FloatingAxesOffsets;\n\n  /** Determines whether the tooltip should have an arrow, `false` by default */\n  withArrow?: boolean;\n\n  /** Arrow size in px, `4` by default */\n  arrowSize?: number;\n\n  /** Arrow offset in px, `5` by default */\n  arrowOffset?: number;\n\n  /** Arrow `border-radius` in px, `0` by default */\n  arrowRadius?: number;\n\n  /** Arrow position relative to the tooltip, `side` by default */\n  arrowPosition?: ArrowPosition;\n\n  /** Props passed down to the `Transition` component that used to animate tooltip presence, use to configure duration and animation type, `{ duration: 100, transition: 'fade' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Determines which events will be used to show tooltip, `{ hover: true, focus: false, touch: false }` by default */\n  events?: { hover: boolean; focus: boolean; touch: boolean };\n\n  /** `useEffect` dependencies to force update tooltip position */\n  positionDependencies?: any[];\n\n  /** Must be set if the tooltip target is an inline element */\n  inline?: boolean;\n\n  /** If set, the tooltip will not be unmounted from the DOM when it is hidden, `display: none` styles will be applied instead */\n  keepMounted?: boolean;\n}\n\nexport type TooltipFactory = Factory<{\n  props: TooltipProps;\n  ref: HTMLDivElement;\n  stylesNames: TooltipStylesNames;\n  vars: TooltipCssVariables;\n  staticComponents: {\n    Floating: typeof TooltipFloating;\n    Group: typeof TooltipGroup;\n  };\n}>;\n\nconst defaultProps: Partial<TooltipProps> = {\n  position: 'top',\n  refProp: 'ref',\n  withinPortal: true,\n  inline: false,\n  arrowSize: 4,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: 'side',\n  offset: 5,\n  transitionProps: { duration: 100, transition: 'fade' },\n  events: { hover: true, focus: false, touch: false },\n  zIndex: getDefaultZIndex('popover'),\n  positionDependencies: [],\n};\n\nconst varsResolver = createVarsResolver<TooltipFactory>((theme, { radius, color }) => ({\n  tooltip: {\n    '--tooltip-radius': radius === undefined ? undefined : getRadius(radius),\n    '--tooltip-bg': color ? getThemeColor(color, theme) : undefined,\n    '--tooltip-color': color ? 'var(--mantine-color-white)' : undefined,\n  },\n}));\n\nexport const Tooltip = factory<TooltipFactory>((_props, ref) => {\n  const props = useProps('Tooltip', defaultProps, _props);\n  const {\n    children,\n    position,\n    refProp,\n    label,\n    openDelay,\n    closeDelay,\n    onPositionChange,\n    opened,\n    withinPortal,\n    radius,\n    color,\n    classNames,\n    styles,\n    unstyled,\n    style,\n    className,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    offset,\n    transitionProps,\n    multiline,\n    events,\n    zIndex,\n    disabled,\n    positionDependencies,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    inline,\n    variant,\n    keepMounted,\n    vars,\n    portalProps,\n    ...others\n  } = useProps('Tooltip', defaultProps, props);\n\n  const { dir } = useDirection();\n  const arrowRef = useRef<HTMLDivElement>(null);\n  const tooltip = useTooltip({\n    position: getFloatingPosition(dir, position!),\n    closeDelay,\n    openDelay,\n    onPositionChange,\n    opened,\n    events,\n    arrowRef,\n    arrowOffset,\n    offset: typeof offset === 'number' ? offset! + (withArrow ? arrowSize! / 2 : 0) : offset!,\n    positionDependencies: [...positionDependencies!, children],\n    inline,\n  });\n\n  const getStyles = useStyles<TooltipFactory>({\n    name: 'Tooltip',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'tooltip',\n    vars,\n    varsResolver,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(\n      '[@mantine/core] Tooltip component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const targetRef = useMergedRef(tooltip.reference, (children as any).ref, ref);\n  const transition = getTransitionProps(transitionProps, { duration: 100, transition: 'fade' });\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Transition\n          {...transition}\n          keepMounted={keepMounted}\n          mounted={!disabled && !!tooltip.opened}\n          duration={tooltip.isGroupPhase ? 10 : transition.duration}\n        >\n          {(transitionStyles) => (\n            <Box\n              {...others}\n              variant={variant}\n              mod={{ multiline }}\n              {...tooltip.getFloatingProps({\n                ref: tooltip.floating,\n                className: getStyles('tooltip').className,\n                style: {\n                  ...getStyles('tooltip').style,\n                  ...transitionStyles,\n                  zIndex: zIndex as React.CSSProperties['zIndex'],\n                  top: tooltip.y ?? 0,\n                  left: tooltip.x ?? 0,\n                },\n              })}\n            >\n              {label}\n\n              <FloatingArrow\n                ref={arrowRef}\n                arrowX={tooltip.arrowX!}\n                arrowY={tooltip.arrowY!}\n                visible={withArrow!}\n                position={tooltip.placement!}\n                arrowSize={arrowSize!}\n                arrowOffset={arrowOffset!}\n                arrowRadius={arrowRadius!}\n                arrowPosition={arrowPosition!}\n                {...getStyles('arrow')}\n              />\n            </Box>\n          )}\n        </Transition>\n      </OptionalPortal>\n\n      {cloneElement(\n        children,\n        tooltip.getReferenceProps({\n          onClick,\n          onMouseEnter,\n          onMouseLeave,\n          onMouseMove: props.onMouseMove,\n          onPointerDown: props.onPointerDown,\n          onPointerEnter: props.onPointerEnter,\n          [refProp!]: targetRef,\n          className: cx(className, children.props.className),\n          ...children.props,\n        })\n      )}\n    </>\n  );\n});\n\nTooltip.classes = classes;\nTooltip.displayName = '@mantine/core/Tooltip';\nTooltip.Floating = TooltipFloating;\nTooltip.Group = TooltipGroup;\n"],"names":["defaultProps","underline","Anchor","polymorphicFactory","props","ref","className","unstyled","others","useProps","React","Text","component","cx","classes","root","mod","__staticSelector","displayName","orientation","varsResolver","createVarsResolver","theme","_ref","color","variant","size","getThemeColor","getSize","Divider","factory","_props","classNames","style","styles","vars","label","labelPosition","getStyles","useStyles","name","Box","role","position","_","radius","shadow","getRadius","getShadow","Paper","withBorder","defaultTransition","duration","transition","getStyleObject","Array","isArray","reduce","acc","item","refProp","withinPortal","offset","zIndex","getDefaultZIndex","tooltip","TooltipFloating","_ref2","_ref3","children","multiline","disabled","portalProps","useMantineTheme","rootSelector","handleMouseMove","x","y","opened","boundaryRef","floating","setOpened","useState","useRef","elements","refs","update","placement","useFloating","middleware","shift","crossAxis","padding","rootBoundary","horizontalOffset","includes","verticalOffset","useCallback","clientX","clientY","setPositionReference","getBoundingClientRect","width","height","left","top","right","bottom","reference","useEffect","current","boundary","addEventListener","parents","getOverflowAncestors","forEach","parent","removeEventListener","setFloating","useFloatingTooltip","isElement","Error","targetRef","useMergedRef","OptionalPortal","display","Math","round","cloneElement","onMouseEnter","event","_children$props$onMou","_children$props","call","onMouseLeave","_children$props$onMou2","_children$props2","TooltipGroupContext","createContext","TooltipGroupProvider","Provider","openDelay","closeDelay","TooltipGroup","value","FloatingDelayGroup","delay","open","close","useTooltip","settings","_settings$events","_settings$events2","_settings$events3","uncontrolledOpened","setUncontrolledOpened","withinGroup","useContext","uid","useId","groupDelay","currentId","setCurrentId","useDelayGroupContext","onChange","_opened","context","middlewareData","arrow","arrowX","arrowY","onOpenChange","flip","element","arrowRef","arrowOffset","inline","getReferenceProps","getFloatingProps","useInteractions","useHover","enabled","events","hover","mouseOnly","touch","useFocus","focus","keyboardOnly","useRole","useDismiss","useDelayGroup","id","useFloatingAutoUpdate","positionDependencies","useDidUpdate","_settings$onPositionC","onPositionChange","isGroupPhase","setReference","arrowSize","arrowRadius","arrowPosition","transitionProps","Tooltip","withArrow","onClick","keepMounted","dir","useDirection","getFloatingPosition","componentTransition","getTransitionProps","Transition","mounted","transitionStyles","_tooltip$y","_tooltip$x","FloatingArrow","visible","onMouseMove","onPointerDown","onPointerEnter","Floating","Group"],"sourceRoot":""}