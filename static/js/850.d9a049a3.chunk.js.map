{"version":3,"file":"static/js/850.d9a049a3.chunk.js","mappings":"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","sources":["app/api/consts.ts","app/providers/ReactQuery/useGraphQL.ts","gql/graphql.ts","gql/gql.ts"],"sourcesContent":["export const GRAPHQL_API_URL =\n  \"https://squid.subsquid.io/arena-squid/v/v1/graphql/index\";\n","import request from \"graphql-request\";\nimport { type TypedDocumentNode } from \"@graphql-typed-document-node/core\";\nimport {\n  type DefaultError,\n  useQuery,\n  type UseQueryOptions,\n  type UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { GRAPHQL_API_URL } from \"app/api/consts\";\n\nexport const getGraphQLPrimaryKey = (document: TypedDocumentNode<any, any>) => {\n  return (document.definitions[0] as any).name?.value as string;\n};\n\nexport function useGraphQL<\n  TVariables,\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData\n>(\n  document: TypedDocumentNode<TQueryFnData, TVariables>, // never changes\n  variables?: TVariables extends Record<string, never> ? never : TVariables,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData>,\n    \"queryKey\" | \"queryFn\"\n  >\n): UseQueryResult<TData, TError> {\n  return useQuery({\n    // eslint-disable-next-line @tanstack/query/exhaustive-deps\n    queryKey: [getGraphQLPrimaryKey(document), variables],\n    queryFn: async ({ queryKey }) => {\n      const variables = queryKey[1] as TVariables;\n      return request(\n        GRAPHQL_API_URL,\n        document,\n        variables ? variables : undefined\n      );\n    },\n    ...options,\n  });\n}\n","/* eslint-disable */\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nexport type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };\nexport type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: { input: string; output: string; }\n  String: { input: string; output: string; }\n  Boolean: { input: boolean; output: boolean; }\n  Int: { input: number; output: number; }\n  Float: { input: number; output: number; }\n  /** A scalar that can represent any JSON value */\n  JSON: { input: any; output: any; }\n};\n\nexport type BattleLog = {\n  __typename?: 'BattleLog';\n  battleIndex: Scalars['Int']['output'];\n  character1: CharacterState;\n  character2: CharacterState;\n  id: Scalars['String']['output'];\n  lobby: Lobby;\n  turns: Array<BattleTurn>;\n};\n\nexport type BattleLogEdge = {\n  __typename?: 'BattleLogEdge';\n  cursor: Scalars['String']['output'];\n  node: BattleLog;\n};\n\nexport enum BattleLogOrderByInput {\n  BattleIndexAsc = 'battleIndex_ASC',\n  BattleIndexAscNullsFirst = 'battleIndex_ASC_NULLS_FIRST',\n  BattleIndexDesc = 'battleIndex_DESC',\n  BattleIndexDescNullsLast = 'battleIndex_DESC_NULLS_LAST',\n  Character1CharacterAsc = 'character1_character_ASC',\n  Character1CharacterAscNullsFirst = 'character1_character_ASC_NULLS_FIRST',\n  Character1CharacterDesc = 'character1_character_DESC',\n  Character1CharacterDescNullsLast = 'character1_character_DESC_NULLS_LAST',\n  Character1ExperienceAsc = 'character1_experience_ASC',\n  Character1ExperienceAscNullsFirst = 'character1_experience_ASC_NULLS_FIRST',\n  Character1ExperienceDesc = 'character1_experience_DESC',\n  Character1ExperienceDescNullsLast = 'character1_experience_DESC_NULLS_LAST',\n  Character1LevelAsc = 'character1_level_ASC',\n  Character1LevelAscNullsFirst = 'character1_level_ASC_NULLS_FIRST',\n  Character1LevelDesc = 'character1_level_DESC',\n  Character1LevelDescNullsLast = 'character1_level_DESC_NULLS_LAST',\n  Character1RatingAsc = 'character1_rating_ASC',\n  Character1RatingAscNullsFirst = 'character1_rating_ASC_NULLS_FIRST',\n  Character1RatingDesc = 'character1_rating_DESC',\n  Character1RatingDescNullsLast = 'character1_rating_DESC_NULLS_LAST',\n  Character1WinnerAsc = 'character1_winner_ASC',\n  Character1WinnerAscNullsFirst = 'character1_winner_ASC_NULLS_FIRST',\n  Character1WinnerDesc = 'character1_winner_DESC',\n  Character1WinnerDescNullsLast = 'character1_winner_DESC_NULLS_LAST',\n  Character2CharacterAsc = 'character2_character_ASC',\n  Character2CharacterAscNullsFirst = 'character2_character_ASC_NULLS_FIRST',\n  Character2CharacterDesc = 'character2_character_DESC',\n  Character2CharacterDescNullsLast = 'character2_character_DESC_NULLS_LAST',\n  Character2ExperienceAsc = 'character2_experience_ASC',\n  Character2ExperienceAscNullsFirst = 'character2_experience_ASC_NULLS_FIRST',\n  Character2ExperienceDesc = 'character2_experience_DESC',\n  Character2ExperienceDescNullsLast = 'character2_experience_DESC_NULLS_LAST',\n  Character2LevelAsc = 'character2_level_ASC',\n  Character2LevelAscNullsFirst = 'character2_level_ASC_NULLS_FIRST',\n  Character2LevelDesc = 'character2_level_DESC',\n  Character2LevelDescNullsLast = 'character2_level_DESC_NULLS_LAST',\n  Character2RatingAsc = 'character2_rating_ASC',\n  Character2RatingAscNullsFirst = 'character2_rating_ASC_NULLS_FIRST',\n  Character2RatingDesc = 'character2_rating_DESC',\n  Character2RatingDescNullsLast = 'character2_rating_DESC_NULLS_LAST',\n  Character2WinnerAsc = 'character2_winner_ASC',\n  Character2WinnerAscNullsFirst = 'character2_winner_ASC_NULLS_FIRST',\n  Character2WinnerDesc = 'character2_winner_DESC',\n  Character2WinnerDescNullsLast = 'character2_winner_DESC_NULLS_LAST',\n  IdAsc = 'id_ASC',\n  IdAscNullsFirst = 'id_ASC_NULLS_FIRST',\n  IdDesc = 'id_DESC',\n  IdDescNullsLast = 'id_DESC_NULLS_LAST',\n  LobbyCapacityAsc = 'lobby_capacity_ASC',\n  LobbyCapacityAscNullsFirst = 'lobby_capacity_ASC_NULLS_FIRST',\n  LobbyCapacityDesc = 'lobby_capacity_DESC',\n  LobbyCapacityDescNullsLast = 'lobby_capacity_DESC_NULLS_LAST',\n  LobbyIdAsc = 'lobby_id_ASC',\n  LobbyIdAscNullsFirst = 'lobby_id_ASC_NULLS_FIRST',\n  LobbyIdDesc = 'lobby_id_DESC',\n  LobbyIdDescNullsLast = 'lobby_id_DESC_NULLS_LAST',\n  LobbyReservationsCountAsc = 'lobby_reservationsCount_ASC',\n  LobbyReservationsCountAscNullsFirst = 'lobby_reservationsCount_ASC_NULLS_FIRST',\n  LobbyReservationsCountDesc = 'lobby_reservationsCount_DESC',\n  LobbyReservationsCountDescNullsLast = 'lobby_reservationsCount_DESC_NULLS_LAST',\n  LobbyTierAsc = 'lobby_tier_ASC',\n  LobbyTierAscNullsFirst = 'lobby_tier_ASC_NULLS_FIRST',\n  LobbyTierDesc = 'lobby_tier_DESC',\n  LobbyTierDescNullsLast = 'lobby_tier_DESC_NULLS_LAST'\n}\n\nexport type BattleLogWhereInput = {\n  AND?: InputMaybe<Array<BattleLogWhereInput>>;\n  OR?: InputMaybe<Array<BattleLogWhereInput>>;\n  battleIndex_eq?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_gt?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_gte?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  battleIndex_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  battleIndex_lt?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_lte?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  battleIndex_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  character1?: InputMaybe<CharacterStateWhereInput>;\n  character1_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  character2?: InputMaybe<CharacterStateWhereInput>;\n  character2_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_contains?: InputMaybe<Scalars['String']['input']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_eq?: InputMaybe<Scalars['String']['input']>;\n  id_gt?: InputMaybe<Scalars['String']['input']>;\n  id_gte?: InputMaybe<Scalars['String']['input']>;\n  id_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_lt?: InputMaybe<Scalars['String']['input']>;\n  id_lte?: InputMaybe<Scalars['String']['input']>;\n  id_not_contains?: InputMaybe<Scalars['String']['input']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_not_eq?: InputMaybe<Scalars['String']['input']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  id_startsWith?: InputMaybe<Scalars['String']['input']>;\n  lobby?: InputMaybe<LobbyWhereInput>;\n  lobby_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  turns_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type BattleLogsConnection = {\n  __typename?: 'BattleLogsConnection';\n  edges: Array<BattleLogEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int']['output'];\n};\n\nexport type BattleTurn = {\n  __typename?: 'BattleTurn';\n  character1?: Maybe<CharacterTurnState>;\n  character2?: Maybe<CharacterTurnState>;\n  logs: Array<TurnLog>;\n};\n\nexport type Character = {\n  __typename?: 'Character';\n  attributes: Scalars['JSON']['output'];\n  balance: Scalars['Int']['output'];\n  experience: Scalars['Int']['output'];\n  id: Scalars['String']['output'];\n  level: Scalars['Int']['output'];\n  livesCount: Scalars['Int']['output'];\n  name: Scalars['String']['output'];\n  owner: Scalars['String']['output'];\n  rating: Scalars['Int']['output'];\n};\n\nexport type CharacterEdge = {\n  __typename?: 'CharacterEdge';\n  cursor: Scalars['String']['output'];\n  node: Character;\n};\n\nexport enum CharacterOrderByInput {\n  BalanceAsc = 'balance_ASC',\n  BalanceAscNullsFirst = 'balance_ASC_NULLS_FIRST',\n  BalanceDesc = 'balance_DESC',\n  BalanceDescNullsLast = 'balance_DESC_NULLS_LAST',\n  ExperienceAsc = 'experience_ASC',\n  ExperienceAscNullsFirst = 'experience_ASC_NULLS_FIRST',\n  ExperienceDesc = 'experience_DESC',\n  ExperienceDescNullsLast = 'experience_DESC_NULLS_LAST',\n  IdAsc = 'id_ASC',\n  IdAscNullsFirst = 'id_ASC_NULLS_FIRST',\n  IdDesc = 'id_DESC',\n  IdDescNullsLast = 'id_DESC_NULLS_LAST',\n  LevelAsc = 'level_ASC',\n  LevelAscNullsFirst = 'level_ASC_NULLS_FIRST',\n  LevelDesc = 'level_DESC',\n  LevelDescNullsLast = 'level_DESC_NULLS_LAST',\n  LivesCountAsc = 'livesCount_ASC',\n  LivesCountAscNullsFirst = 'livesCount_ASC_NULLS_FIRST',\n  LivesCountDesc = 'livesCount_DESC',\n  LivesCountDescNullsLast = 'livesCount_DESC_NULLS_LAST',\n  NameAsc = 'name_ASC',\n  NameAscNullsFirst = 'name_ASC_NULLS_FIRST',\n  NameDesc = 'name_DESC',\n  NameDescNullsLast = 'name_DESC_NULLS_LAST',\n  OwnerAsc = 'owner_ASC',\n  OwnerAscNullsFirst = 'owner_ASC_NULLS_FIRST',\n  OwnerDesc = 'owner_DESC',\n  OwnerDescNullsLast = 'owner_DESC_NULLS_LAST',\n  RatingAsc = 'rating_ASC',\n  RatingAscNullsFirst = 'rating_ASC_NULLS_FIRST',\n  RatingDesc = 'rating_DESC',\n  RatingDescNullsLast = 'rating_DESC_NULLS_LAST'\n}\n\nexport type CharacterState = {\n  __typename?: 'CharacterState';\n  attributes: Scalars['JSON']['output'];\n  character: Scalars['String']['output'];\n  experience: Scalars['Int']['output'];\n  level: Scalars['Int']['output'];\n  rating: Scalars['Int']['output'];\n  winner: Scalars['Boolean']['output'];\n};\n\nexport type CharacterStateWhereInput = {\n  attributes_eq?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  attributes_jsonContains?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_jsonHasKey?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_not_eq?: InputMaybe<Scalars['JSON']['input']>;\n  character_contains?: InputMaybe<Scalars['String']['input']>;\n  character_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  character_endsWith?: InputMaybe<Scalars['String']['input']>;\n  character_eq?: InputMaybe<Scalars['String']['input']>;\n  character_gt?: InputMaybe<Scalars['String']['input']>;\n  character_gte?: InputMaybe<Scalars['String']['input']>;\n  character_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  character_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  character_lt?: InputMaybe<Scalars['String']['input']>;\n  character_lte?: InputMaybe<Scalars['String']['input']>;\n  character_not_contains?: InputMaybe<Scalars['String']['input']>;\n  character_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  character_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  character_not_eq?: InputMaybe<Scalars['String']['input']>;\n  character_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  character_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  character_startsWith?: InputMaybe<Scalars['String']['input']>;\n  experience_eq?: InputMaybe<Scalars['Int']['input']>;\n  experience_gt?: InputMaybe<Scalars['Int']['input']>;\n  experience_gte?: InputMaybe<Scalars['Int']['input']>;\n  experience_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  experience_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  experience_lt?: InputMaybe<Scalars['Int']['input']>;\n  experience_lte?: InputMaybe<Scalars['Int']['input']>;\n  experience_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  experience_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  level_eq?: InputMaybe<Scalars['Int']['input']>;\n  level_gt?: InputMaybe<Scalars['Int']['input']>;\n  level_gte?: InputMaybe<Scalars['Int']['input']>;\n  level_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  level_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  level_lt?: InputMaybe<Scalars['Int']['input']>;\n  level_lte?: InputMaybe<Scalars['Int']['input']>;\n  level_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  level_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  rating_eq?: InputMaybe<Scalars['Int']['input']>;\n  rating_gt?: InputMaybe<Scalars['Int']['input']>;\n  rating_gte?: InputMaybe<Scalars['Int']['input']>;\n  rating_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  rating_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  rating_lt?: InputMaybe<Scalars['Int']['input']>;\n  rating_lte?: InputMaybe<Scalars['Int']['input']>;\n  rating_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  rating_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  winner_eq?: InputMaybe<Scalars['Boolean']['input']>;\n  winner_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  winner_not_eq?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type CharacterTurnState = {\n  __typename?: 'CharacterTurnState';\n  chillingTouch: Scalars['Int']['output'];\n  earthSkin: Scalars['Int']['output'];\n  earthSmites: Scalars['Int']['output'];\n  energy: Scalars['Int']['output'];\n  fireHaste: Scalars['Int']['output'];\n  fireWall: Scalars['Int']['output'];\n  hp: Scalars['Int']['output'];\n  position: Scalars['Int']['output'];\n  waterBurst: Scalars['Int']['output'];\n};\n\nexport type CharacterWhereInput = {\n  AND?: InputMaybe<Array<CharacterWhereInput>>;\n  OR?: InputMaybe<Array<CharacterWhereInput>>;\n  attributes_eq?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  attributes_jsonContains?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_jsonHasKey?: InputMaybe<Scalars['JSON']['input']>;\n  attributes_not_eq?: InputMaybe<Scalars['JSON']['input']>;\n  balance_eq?: InputMaybe<Scalars['Int']['input']>;\n  balance_gt?: InputMaybe<Scalars['Int']['input']>;\n  balance_gte?: InputMaybe<Scalars['Int']['input']>;\n  balance_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  balance_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  balance_lt?: InputMaybe<Scalars['Int']['input']>;\n  balance_lte?: InputMaybe<Scalars['Int']['input']>;\n  balance_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  balance_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  experience_eq?: InputMaybe<Scalars['Int']['input']>;\n  experience_gt?: InputMaybe<Scalars['Int']['input']>;\n  experience_gte?: InputMaybe<Scalars['Int']['input']>;\n  experience_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  experience_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  experience_lt?: InputMaybe<Scalars['Int']['input']>;\n  experience_lte?: InputMaybe<Scalars['Int']['input']>;\n  experience_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  experience_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  id_contains?: InputMaybe<Scalars['String']['input']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_eq?: InputMaybe<Scalars['String']['input']>;\n  id_gt?: InputMaybe<Scalars['String']['input']>;\n  id_gte?: InputMaybe<Scalars['String']['input']>;\n  id_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_lt?: InputMaybe<Scalars['String']['input']>;\n  id_lte?: InputMaybe<Scalars['String']['input']>;\n  id_not_contains?: InputMaybe<Scalars['String']['input']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_not_eq?: InputMaybe<Scalars['String']['input']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  id_startsWith?: InputMaybe<Scalars['String']['input']>;\n  level_eq?: InputMaybe<Scalars['Int']['input']>;\n  level_gt?: InputMaybe<Scalars['Int']['input']>;\n  level_gte?: InputMaybe<Scalars['Int']['input']>;\n  level_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  level_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  level_lt?: InputMaybe<Scalars['Int']['input']>;\n  level_lte?: InputMaybe<Scalars['Int']['input']>;\n  level_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  level_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  livesCount_eq?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_gt?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_gte?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  livesCount_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  livesCount_lt?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_lte?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  livesCount_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  name_contains?: InputMaybe<Scalars['String']['input']>;\n  name_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  name_endsWith?: InputMaybe<Scalars['String']['input']>;\n  name_eq?: InputMaybe<Scalars['String']['input']>;\n  name_gt?: InputMaybe<Scalars['String']['input']>;\n  name_gte?: InputMaybe<Scalars['String']['input']>;\n  name_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  name_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  name_lt?: InputMaybe<Scalars['String']['input']>;\n  name_lte?: InputMaybe<Scalars['String']['input']>;\n  name_not_contains?: InputMaybe<Scalars['String']['input']>;\n  name_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  name_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  name_not_eq?: InputMaybe<Scalars['String']['input']>;\n  name_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  name_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  name_startsWith?: InputMaybe<Scalars['String']['input']>;\n  owner_contains?: InputMaybe<Scalars['String']['input']>;\n  owner_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  owner_endsWith?: InputMaybe<Scalars['String']['input']>;\n  owner_eq?: InputMaybe<Scalars['String']['input']>;\n  owner_gt?: InputMaybe<Scalars['String']['input']>;\n  owner_gte?: InputMaybe<Scalars['String']['input']>;\n  owner_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  owner_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  owner_lt?: InputMaybe<Scalars['String']['input']>;\n  owner_lte?: InputMaybe<Scalars['String']['input']>;\n  owner_not_contains?: InputMaybe<Scalars['String']['input']>;\n  owner_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  owner_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  owner_not_eq?: InputMaybe<Scalars['String']['input']>;\n  owner_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  owner_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  owner_startsWith?: InputMaybe<Scalars['String']['input']>;\n  rating_eq?: InputMaybe<Scalars['Int']['input']>;\n  rating_gt?: InputMaybe<Scalars['Int']['input']>;\n  rating_gte?: InputMaybe<Scalars['Int']['input']>;\n  rating_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  rating_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  rating_lt?: InputMaybe<Scalars['Int']['input']>;\n  rating_lte?: InputMaybe<Scalars['Int']['input']>;\n  rating_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  rating_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n};\n\nexport type CharactersConnection = {\n  __typename?: 'CharactersConnection';\n  edges: Array<CharacterEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int']['output'];\n};\n\nexport type LobbiesConnection = {\n  __typename?: 'LobbiesConnection';\n  edges: Array<LobbyEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int']['output'];\n};\n\nexport type Lobby = {\n  __typename?: 'Lobby';\n  battleLogs: Array<BattleLog>;\n  capacity: Scalars['Int']['output'];\n  characters: Array<LobbyCharacter>;\n  id: Scalars['String']['output'];\n  reservationsCount: Scalars['Int']['output'];\n  tier: Scalars['Int']['output'];\n};\n\n\nexport type LobbyBattleLogsArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<BattleLogOrderByInput>>;\n  where?: InputMaybe<BattleLogWhereInput>;\n};\n\n\nexport type LobbyCharactersArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<LobbyCharacterOrderByInput>>;\n  where?: InputMaybe<LobbyCharacterWhereInput>;\n};\n\nexport type LobbyCharacter = {\n  __typename?: 'LobbyCharacter';\n  character: Character;\n  id: Scalars['String']['output'];\n  lobby: Lobby;\n};\n\nexport type LobbyCharacterEdge = {\n  __typename?: 'LobbyCharacterEdge';\n  cursor: Scalars['String']['output'];\n  node: LobbyCharacter;\n};\n\nexport enum LobbyCharacterOrderByInput {\n  CharacterBalanceAsc = 'character_balance_ASC',\n  CharacterBalanceAscNullsFirst = 'character_balance_ASC_NULLS_FIRST',\n  CharacterBalanceDesc = 'character_balance_DESC',\n  CharacterBalanceDescNullsLast = 'character_balance_DESC_NULLS_LAST',\n  CharacterExperienceAsc = 'character_experience_ASC',\n  CharacterExperienceAscNullsFirst = 'character_experience_ASC_NULLS_FIRST',\n  CharacterExperienceDesc = 'character_experience_DESC',\n  CharacterExperienceDescNullsLast = 'character_experience_DESC_NULLS_LAST',\n  CharacterIdAsc = 'character_id_ASC',\n  CharacterIdAscNullsFirst = 'character_id_ASC_NULLS_FIRST',\n  CharacterIdDesc = 'character_id_DESC',\n  CharacterIdDescNullsLast = 'character_id_DESC_NULLS_LAST',\n  CharacterLevelAsc = 'character_level_ASC',\n  CharacterLevelAscNullsFirst = 'character_level_ASC_NULLS_FIRST',\n  CharacterLevelDesc = 'character_level_DESC',\n  CharacterLevelDescNullsLast = 'character_level_DESC_NULLS_LAST',\n  CharacterLivesCountAsc = 'character_livesCount_ASC',\n  CharacterLivesCountAscNullsFirst = 'character_livesCount_ASC_NULLS_FIRST',\n  CharacterLivesCountDesc = 'character_livesCount_DESC',\n  CharacterLivesCountDescNullsLast = 'character_livesCount_DESC_NULLS_LAST',\n  CharacterNameAsc = 'character_name_ASC',\n  CharacterNameAscNullsFirst = 'character_name_ASC_NULLS_FIRST',\n  CharacterNameDesc = 'character_name_DESC',\n  CharacterNameDescNullsLast = 'character_name_DESC_NULLS_LAST',\n  CharacterOwnerAsc = 'character_owner_ASC',\n  CharacterOwnerAscNullsFirst = 'character_owner_ASC_NULLS_FIRST',\n  CharacterOwnerDesc = 'character_owner_DESC',\n  CharacterOwnerDescNullsLast = 'character_owner_DESC_NULLS_LAST',\n  CharacterRatingAsc = 'character_rating_ASC',\n  CharacterRatingAscNullsFirst = 'character_rating_ASC_NULLS_FIRST',\n  CharacterRatingDesc = 'character_rating_DESC',\n  CharacterRatingDescNullsLast = 'character_rating_DESC_NULLS_LAST',\n  IdAsc = 'id_ASC',\n  IdAscNullsFirst = 'id_ASC_NULLS_FIRST',\n  IdDesc = 'id_DESC',\n  IdDescNullsLast = 'id_DESC_NULLS_LAST',\n  LobbyCapacityAsc = 'lobby_capacity_ASC',\n  LobbyCapacityAscNullsFirst = 'lobby_capacity_ASC_NULLS_FIRST',\n  LobbyCapacityDesc = 'lobby_capacity_DESC',\n  LobbyCapacityDescNullsLast = 'lobby_capacity_DESC_NULLS_LAST',\n  LobbyIdAsc = 'lobby_id_ASC',\n  LobbyIdAscNullsFirst = 'lobby_id_ASC_NULLS_FIRST',\n  LobbyIdDesc = 'lobby_id_DESC',\n  LobbyIdDescNullsLast = 'lobby_id_DESC_NULLS_LAST',\n  LobbyReservationsCountAsc = 'lobby_reservationsCount_ASC',\n  LobbyReservationsCountAscNullsFirst = 'lobby_reservationsCount_ASC_NULLS_FIRST',\n  LobbyReservationsCountDesc = 'lobby_reservationsCount_DESC',\n  LobbyReservationsCountDescNullsLast = 'lobby_reservationsCount_DESC_NULLS_LAST',\n  LobbyTierAsc = 'lobby_tier_ASC',\n  LobbyTierAscNullsFirst = 'lobby_tier_ASC_NULLS_FIRST',\n  LobbyTierDesc = 'lobby_tier_DESC',\n  LobbyTierDescNullsLast = 'lobby_tier_DESC_NULLS_LAST'\n}\n\nexport type LobbyCharacterWhereInput = {\n  AND?: InputMaybe<Array<LobbyCharacterWhereInput>>;\n  OR?: InputMaybe<Array<LobbyCharacterWhereInput>>;\n  character?: InputMaybe<CharacterWhereInput>;\n  character_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_contains?: InputMaybe<Scalars['String']['input']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_eq?: InputMaybe<Scalars['String']['input']>;\n  id_gt?: InputMaybe<Scalars['String']['input']>;\n  id_gte?: InputMaybe<Scalars['String']['input']>;\n  id_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_lt?: InputMaybe<Scalars['String']['input']>;\n  id_lte?: InputMaybe<Scalars['String']['input']>;\n  id_not_contains?: InputMaybe<Scalars['String']['input']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_not_eq?: InputMaybe<Scalars['String']['input']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  id_startsWith?: InputMaybe<Scalars['String']['input']>;\n  lobby?: InputMaybe<LobbyWhereInput>;\n  lobby_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n};\n\nexport type LobbyCharactersConnection = {\n  __typename?: 'LobbyCharactersConnection';\n  edges: Array<LobbyCharacterEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int']['output'];\n};\n\nexport type LobbyEdge = {\n  __typename?: 'LobbyEdge';\n  cursor: Scalars['String']['output'];\n  node: Lobby;\n};\n\nexport enum LobbyOrderByInput {\n  CapacityAsc = 'capacity_ASC',\n  CapacityAscNullsFirst = 'capacity_ASC_NULLS_FIRST',\n  CapacityDesc = 'capacity_DESC',\n  CapacityDescNullsLast = 'capacity_DESC_NULLS_LAST',\n  IdAsc = 'id_ASC',\n  IdAscNullsFirst = 'id_ASC_NULLS_FIRST',\n  IdDesc = 'id_DESC',\n  IdDescNullsLast = 'id_DESC_NULLS_LAST',\n  ReservationsCountAsc = 'reservationsCount_ASC',\n  ReservationsCountAscNullsFirst = 'reservationsCount_ASC_NULLS_FIRST',\n  ReservationsCountDesc = 'reservationsCount_DESC',\n  ReservationsCountDescNullsLast = 'reservationsCount_DESC_NULLS_LAST',\n  TierAsc = 'tier_ASC',\n  TierAscNullsFirst = 'tier_ASC_NULLS_FIRST',\n  TierDesc = 'tier_DESC',\n  TierDescNullsLast = 'tier_DESC_NULLS_LAST'\n}\n\nexport type LobbyWhereInput = {\n  AND?: InputMaybe<Array<LobbyWhereInput>>;\n  OR?: InputMaybe<Array<LobbyWhereInput>>;\n  battleLogs_every?: InputMaybe<BattleLogWhereInput>;\n  battleLogs_none?: InputMaybe<BattleLogWhereInput>;\n  battleLogs_some?: InputMaybe<BattleLogWhereInput>;\n  capacity_eq?: InputMaybe<Scalars['Int']['input']>;\n  capacity_gt?: InputMaybe<Scalars['Int']['input']>;\n  capacity_gte?: InputMaybe<Scalars['Int']['input']>;\n  capacity_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  capacity_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  capacity_lt?: InputMaybe<Scalars['Int']['input']>;\n  capacity_lte?: InputMaybe<Scalars['Int']['input']>;\n  capacity_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  capacity_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  characters_every?: InputMaybe<LobbyCharacterWhereInput>;\n  characters_none?: InputMaybe<LobbyCharacterWhereInput>;\n  characters_some?: InputMaybe<LobbyCharacterWhereInput>;\n  id_contains?: InputMaybe<Scalars['String']['input']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_eq?: InputMaybe<Scalars['String']['input']>;\n  id_gt?: InputMaybe<Scalars['String']['input']>;\n  id_gte?: InputMaybe<Scalars['String']['input']>;\n  id_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_lt?: InputMaybe<Scalars['String']['input']>;\n  id_lte?: InputMaybe<Scalars['String']['input']>;\n  id_not_contains?: InputMaybe<Scalars['String']['input']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_not_eq?: InputMaybe<Scalars['String']['input']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  id_startsWith?: InputMaybe<Scalars['String']['input']>;\n  reservationsCount_eq?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_gt?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_gte?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  reservationsCount_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  reservationsCount_lt?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_lte?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  reservationsCount_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  tier_eq?: InputMaybe<Scalars['Int']['input']>;\n  tier_gt?: InputMaybe<Scalars['Int']['input']>;\n  tier_gte?: InputMaybe<Scalars['Int']['input']>;\n  tier_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  tier_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  tier_lt?: InputMaybe<Scalars['Int']['input']>;\n  tier_lte?: InputMaybe<Scalars['Int']['input']>;\n  tier_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  tier_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n};\n\nexport type Mint = {\n  __typename?: 'Mint';\n  id: Scalars['String']['output'];\n  poolAmount: Scalars['Int']['output'];\n};\n\nexport type MintEdge = {\n  __typename?: 'MintEdge';\n  cursor: Scalars['String']['output'];\n  node: Mint;\n};\n\nexport enum MintOrderByInput {\n  IdAsc = 'id_ASC',\n  IdAscNullsFirst = 'id_ASC_NULLS_FIRST',\n  IdDesc = 'id_DESC',\n  IdDescNullsLast = 'id_DESC_NULLS_LAST',\n  PoolAmountAsc = 'poolAmount_ASC',\n  PoolAmountAscNullsFirst = 'poolAmount_ASC_NULLS_FIRST',\n  PoolAmountDesc = 'poolAmount_DESC',\n  PoolAmountDescNullsLast = 'poolAmount_DESC_NULLS_LAST'\n}\n\nexport type MintWhereInput = {\n  AND?: InputMaybe<Array<MintWhereInput>>;\n  OR?: InputMaybe<Array<MintWhereInput>>;\n  id_contains?: InputMaybe<Scalars['String']['input']>;\n  id_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_eq?: InputMaybe<Scalars['String']['input']>;\n  id_gt?: InputMaybe<Scalars['String']['input']>;\n  id_gte?: InputMaybe<Scalars['String']['input']>;\n  id_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  id_lt?: InputMaybe<Scalars['String']['input']>;\n  id_lte?: InputMaybe<Scalars['String']['input']>;\n  id_not_contains?: InputMaybe<Scalars['String']['input']>;\n  id_not_containsInsensitive?: InputMaybe<Scalars['String']['input']>;\n  id_not_endsWith?: InputMaybe<Scalars['String']['input']>;\n  id_not_eq?: InputMaybe<Scalars['String']['input']>;\n  id_not_in?: InputMaybe<Array<Scalars['String']['input']>>;\n  id_not_startsWith?: InputMaybe<Scalars['String']['input']>;\n  id_startsWith?: InputMaybe<Scalars['String']['input']>;\n  poolAmount_eq?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_gt?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_gte?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n  poolAmount_isNull?: InputMaybe<Scalars['Boolean']['input']>;\n  poolAmount_lt?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_lte?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_not_eq?: InputMaybe<Scalars['Int']['input']>;\n  poolAmount_not_in?: InputMaybe<Array<Scalars['Int']['input']>>;\n};\n\nexport type MintsConnection = {\n  __typename?: 'MintsConnection';\n  edges: Array<MintEdge>;\n  pageInfo: PageInfo;\n  totalCount: Scalars['Int']['output'];\n};\n\nexport type PageInfo = {\n  __typename?: 'PageInfo';\n  endCursor: Scalars['String']['output'];\n  hasNextPage: Scalars['Boolean']['output'];\n  hasPreviousPage: Scalars['Boolean']['output'];\n  startCursor: Scalars['String']['output'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  battleLogById?: Maybe<BattleLog>;\n  /** @deprecated Use battleLogById */\n  battleLogByUniqueInput?: Maybe<BattleLog>;\n  battleLogs: Array<BattleLog>;\n  battleLogsConnection: BattleLogsConnection;\n  characterById?: Maybe<Character>;\n  /** @deprecated Use characterById */\n  characterByUniqueInput?: Maybe<Character>;\n  characters: Array<Character>;\n  charactersConnection: CharactersConnection;\n  lobbies: Array<Lobby>;\n  lobbiesConnection: LobbiesConnection;\n  lobbyById?: Maybe<Lobby>;\n  /** @deprecated Use lobbyById */\n  lobbyByUniqueInput?: Maybe<Lobby>;\n  lobbyCharacterById?: Maybe<LobbyCharacter>;\n  /** @deprecated Use lobbyCharacterById */\n  lobbyCharacterByUniqueInput?: Maybe<LobbyCharacter>;\n  lobbyCharacters: Array<LobbyCharacter>;\n  lobbyCharactersConnection: LobbyCharactersConnection;\n  mintById?: Maybe<Mint>;\n  /** @deprecated Use mintById */\n  mintByUniqueInput?: Maybe<Mint>;\n  mints: Array<Mint>;\n  mintsConnection: MintsConnection;\n  squidStatus?: Maybe<SquidStatus>;\n};\n\n\nexport type QueryBattleLogByIdArgs = {\n  id: Scalars['String']['input'];\n};\n\n\nexport type QueryBattleLogByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryBattleLogsArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<BattleLogOrderByInput>>;\n  where?: InputMaybe<BattleLogWhereInput>;\n};\n\n\nexport type QueryBattleLogsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  orderBy: Array<BattleLogOrderByInput>;\n  where?: InputMaybe<BattleLogWhereInput>;\n};\n\n\nexport type QueryCharacterByIdArgs = {\n  id: Scalars['String']['input'];\n};\n\n\nexport type QueryCharacterByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryCharactersArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<CharacterOrderByInput>>;\n  where?: InputMaybe<CharacterWhereInput>;\n};\n\n\nexport type QueryCharactersConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  orderBy: Array<CharacterOrderByInput>;\n  where?: InputMaybe<CharacterWhereInput>;\n};\n\n\nexport type QueryLobbiesArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<LobbyOrderByInput>>;\n  where?: InputMaybe<LobbyWhereInput>;\n};\n\n\nexport type QueryLobbiesConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  orderBy: Array<LobbyOrderByInput>;\n  where?: InputMaybe<LobbyWhereInput>;\n};\n\n\nexport type QueryLobbyByIdArgs = {\n  id: Scalars['String']['input'];\n};\n\n\nexport type QueryLobbyByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryLobbyCharacterByIdArgs = {\n  id: Scalars['String']['input'];\n};\n\n\nexport type QueryLobbyCharacterByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryLobbyCharactersArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<LobbyCharacterOrderByInput>>;\n  where?: InputMaybe<LobbyCharacterWhereInput>;\n};\n\n\nexport type QueryLobbyCharactersConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  orderBy: Array<LobbyCharacterOrderByInput>;\n  where?: InputMaybe<LobbyCharacterWhereInput>;\n};\n\n\nexport type QueryMintByIdArgs = {\n  id: Scalars['String']['input'];\n};\n\n\nexport type QueryMintByUniqueInputArgs = {\n  where: WhereIdInput;\n};\n\n\nexport type QueryMintsArgs = {\n  limit?: InputMaybe<Scalars['Int']['input']>;\n  offset?: InputMaybe<Scalars['Int']['input']>;\n  orderBy?: InputMaybe<Array<MintOrderByInput>>;\n  where?: InputMaybe<MintWhereInput>;\n};\n\n\nexport type QueryMintsConnectionArgs = {\n  after?: InputMaybe<Scalars['String']['input']>;\n  first?: InputMaybe<Scalars['Int']['input']>;\n  orderBy: Array<MintOrderByInput>;\n  where?: InputMaybe<MintWhereInput>;\n};\n\nexport type SquidStatus = {\n  __typename?: 'SquidStatus';\n  /** The height of the processed part of the chain */\n  height?: Maybe<Scalars['Int']['output']>;\n};\n\nexport type TurnLog = {\n  __typename?: 'TurnLog';\n  action: Scalars['JSON']['output'];\n  character: Scalars['String']['output'];\n};\n\nexport type WhereIdInput = {\n  id: Scalars['String']['input'];\n};\n\nexport type BattleLogsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type BattleLogsQuery = { __typename?: 'Query', battleLogs: Array<{ __typename?: 'BattleLog', id: string, battleIndex: number, character1: { __typename?: 'CharacterState', winner: boolean, attributes: any, character: string, experience: number, rating: number, level: number }, character2: { __typename?: 'CharacterState', winner: boolean, attributes: any, experience: number, character: string, level: number, rating: number }, lobby: { __typename?: 'Lobby', id: string, capacity: number, characters: Array<{ __typename?: 'LobbyCharacter', id: string, character: { __typename?: 'Character', owner: string, name: string, level: number, experience: number, attributes: any, id: string } }> }, turns: Array<{ __typename?: 'BattleTurn', character1?: { __typename?: 'CharacterTurnState', energy: number, hp: number, position: number } | null, logs: Array<{ __typename?: 'TurnLog', action: any, character: string }>, character2?: { __typename?: 'CharacterTurnState', energy: number, position: number, hp: number } | null }> }> };\n\nexport type BattleLogByIdQueryVariables = Exact<{\n  battleId: Scalars['String']['input'];\n}>;\n\n\nexport type BattleLogByIdQuery = { __typename?: 'Query', battleLogById?: { __typename?: 'BattleLog', id: string, battleIndex: number, character1: { __typename?: 'CharacterState', winner: boolean, attributes: any, character: string, experience: number, rating: number, level: number }, character2: { __typename?: 'CharacterState', winner: boolean, attributes: any, experience: number, character: string, level: number, rating: number }, lobby: { __typename?: 'Lobby', id: string, capacity: number, characters: Array<{ __typename?: 'LobbyCharacter', id: string, character: { __typename?: 'Character', owner: string, name: string, level: number, experience: number, attributes: any, id: string } }> }, turns: Array<{ __typename?: 'BattleTurn', character1?: { __typename?: 'CharacterTurnState', energy: number, hp: number, position: number } | null, logs: Array<{ __typename?: 'TurnLog', action: any, character: string }>, character2?: { __typename?: 'CharacterTurnState', energy: number, position: number, hp: number } | null }> } | null };\n\nexport type BattleLogsByLobbyIdQueryVariables = Exact<{\n  lobbyId: Scalars['String']['input'];\n}>;\n\n\nexport type BattleLogsByLobbyIdQuery = { __typename?: 'Query', battleLogs: Array<{ __typename?: 'BattleLog', id: string }> };\n\nexport type AllCharactersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type AllCharactersQuery = { __typename?: 'Query', characters: Array<{ __typename?: 'Character', id: string, level: number, name: string, owner: string, experience: number, attributes: any }> };\n\nexport type CharactersByOwnerQueryVariables = Exact<{\n  owner_eq: Scalars['String']['input'];\n}>;\n\n\nexport type CharactersByOwnerQuery = { __typename?: 'Query', characters: Array<{ __typename?: 'Character', id: string, level: number, name: string, owner: string, experience: number, attributes: any }> };\n\nexport type CharacterByIdQueryVariables = Exact<{\n  character_id: Scalars['String']['input'];\n}>;\n\n\nexport type CharacterByIdQuery = { __typename?: 'Query', characterById?: { __typename?: 'Character', attributes: any, experience: number, id: string, level: number, name: string, owner: string } | null };\n\nexport type LobbiesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LobbiesQuery = { __typename?: 'Query', lobbies: Array<{ __typename?: 'Lobby', id: string, capacity: number, tier: number, reservationsCount: number, characters: Array<{ __typename?: 'LobbyCharacter', id: string, character: { __typename?: 'Character', id: string, name: string, owner: string, level: number, experience: number, attributes: any } }>, battleLogs: Array<{ __typename?: 'BattleLog', id: string }> }> };\n\nexport type LobbyById2QueryVariables = Exact<{\n  id: Scalars['String']['input'];\n}>;\n\n\nexport type LobbyById2Query = { __typename?: 'Query', lobbyById?: { __typename?: 'Lobby', id: string, capacity: number, tier: number, reservationsCount: number, characters: Array<{ __typename?: 'LobbyCharacter', id: string, character: { __typename?: 'Character', id: string, name: string, owner: string, level: number, experience: number, attributes: any } }>, battleLogs: Array<{ __typename?: 'BattleLog', id: string }> } | null };\n\n\nexport const BattleLogsDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"BattleLogs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleLogs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleIndex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character1\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"winner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character2\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"winner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lobby\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"capacity\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"turns\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character1\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"energy\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hp\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"position\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"logs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"action\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character2\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"energy\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"position\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hp\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<BattleLogsQuery, BattleLogsQueryVariables>;\nexport const BattleLogByIdDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"BattleLogById\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"battleId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleLogById\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"battleId\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleIndex\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character1\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"winner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character2\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"winner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"rating\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lobby\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"capacity\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"turns\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character1\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"energy\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hp\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"position\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"logs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"action\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character2\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"energy\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"position\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"hp\"}}]}}]}}]}}]}}]} as unknown as DocumentNode<BattleLogByIdQuery, BattleLogByIdQueryVariables>;\nexport const BattleLogsByLobbyIdDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"BattleLogsByLobbyId\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"lobbyId\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleLogs\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"lobby\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"id_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"lobbyId\"}}}]}}]}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}}]} as unknown as DocumentNode<BattleLogsByLobbyIdQuery, BattleLogsByLobbyIdQueryVariables>;\nexport const AllCharactersDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"AllCharacters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}}]}}]}}]} as unknown as DocumentNode<AllCharactersQuery, AllCharactersQueryVariables>;\nexport const CharactersByOwnerDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"CharactersByOwner\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner_eq\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"where\"},\"value\":{\"kind\":\"ObjectValue\",\"fields\":[{\"kind\":\"ObjectField\",\"name\":{\"kind\":\"Name\",\"value\":\"owner_eq\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"owner_eq\"}}}]}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}}]}}]}}]} as unknown as DocumentNode<CharactersByOwnerQuery, CharactersByOwnerQueryVariables>;\nexport const CharacterByIdDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"CharacterById\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"character_id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characterById\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"character_id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}}]}}]}}]} as unknown as DocumentNode<CharacterByIdQuery, CharacterByIdQueryVariables>;\nexport const LobbiesDocument = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"Lobbies\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lobbies\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"capacity\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"tier\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"reservationsCount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleLogs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}}]}}]} as unknown as DocumentNode<LobbiesQuery, LobbiesQueryVariables>;\nexport const LobbyById2Document = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"LobbyById2\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lobbyById\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"capacity\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"tier\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"reservationsCount\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"characters\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"character\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"owner\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"level\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"experience\"}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"attributes\"}}]}}]}},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"battleLogs\"},\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}]}}]}}]}}]} as unknown as DocumentNode<LobbyById2Query, LobbyById2QueryVariables>;","/* eslint-disable */\nimport * as types from './graphql';\nimport { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';\n\n/**\n * Map of all GraphQL operations in the project.\n *\n * This map has several performance disadvantages:\n * 1. It is not tree-shakeable, so it will include all operations in the project.\n * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.\n * 3. It does not support dead code elimination, so it will add unused operations.\n *\n * Therefore it is highly recommended to use the babel or swc plugin for production.\n */\nconst documents = {\n    \"\\n  query BattleLogs {\\n    battleLogs {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\": types.BattleLogsDocument,\n    \"\\n  query BattleLogById($battleId: String!) {\\n    battleLogById(id: $battleId) {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\": types.BattleLogByIdDocument,\n    \"\\n  query BattleLogsByLobbyId($lobbyId: String!) {\\n    battleLogs(where: { lobby: { id_eq: $lobbyId } }) {\\n      id\\n    }\\n  }\\n\": types.BattleLogsByLobbyIdDocument,\n    \"\\n  query AllCharacters {\\n    characters {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\": types.AllCharactersDocument,\n    \"\\n  query CharactersByOwner($owner_eq: String!) {\\n    characters(where: { owner_eq: $owner_eq }) {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\": types.CharactersByOwnerDocument,\n    \"\\n  query CharacterById($character_id: String!) {\\n    characterById(id: $character_id) {\\n      attributes\\n      experience\\n      id\\n      level\\n      name\\n      owner\\n    }\\n  }\\n\": types.CharacterByIdDocument,\n    \"\\n  query Lobbies {\\n    lobbies {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\": types.LobbiesDocument,\n    \"\\n  query LobbyById2($id: String!) {\\n    lobbyById(id: $id) {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\": types.LobbyById2Document,\n};\n\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n *\n *\n * @example\n * ```ts\n * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);\n * ```\n *\n * The query argument is unknown!\n * Please regenerate the types.\n */\nexport function graphql(source: string): unknown;\n\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query BattleLogs {\\n    battleLogs {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query BattleLogs {\\n    battleLogs {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query BattleLogById($battleId: String!) {\\n    battleLogById(id: $battleId) {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query BattleLogById($battleId: String!) {\\n    battleLogById(id: $battleId) {\\n      id\\n      battleIndex\\n      character1 {\\n        winner\\n        attributes\\n        character\\n        experience\\n        rating\\n        level\\n      }\\n      character2 {\\n        winner\\n        attributes\\n        experience\\n        character\\n        level\\n        rating\\n      }\\n      lobby {\\n        id\\n        characters {\\n          id\\n          character {\\n            owner\\n            name\\n            level\\n            experience\\n            attributes\\n            id\\n          }\\n        }\\n        capacity\\n      }\\n      turns {\\n        character1 {\\n          energy\\n          hp\\n          position\\n        }\\n        logs {\\n          action\\n          character\\n        }\\n        character2 {\\n          energy\\n          position\\n          hp\\n        }\\n      }\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query BattleLogsByLobbyId($lobbyId: String!) {\\n    battleLogs(where: { lobby: { id_eq: $lobbyId } }) {\\n      id\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query BattleLogsByLobbyId($lobbyId: String!) {\\n    battleLogs(where: { lobby: { id_eq: $lobbyId } }) {\\n      id\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query AllCharacters {\\n    characters {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query AllCharacters {\\n    characters {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query CharactersByOwner($owner_eq: String!) {\\n    characters(where: { owner_eq: $owner_eq }) {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query CharactersByOwner($owner_eq: String!) {\\n    characters(where: { owner_eq: $owner_eq }) {\\n      id\\n      level\\n      name\\n      owner\\n      experience\\n      attributes\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query CharacterById($character_id: String!) {\\n    characterById(id: $character_id) {\\n      attributes\\n      experience\\n      id\\n      level\\n      name\\n      owner\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query CharacterById($character_id: String!) {\\n    characterById(id: $character_id) {\\n      attributes\\n      experience\\n      id\\n      level\\n      name\\n      owner\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query Lobbies {\\n    lobbies {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query Lobbies {\\n    lobbies {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\"];\n/**\n * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.\n */\nexport function graphql(source: \"\\n  query LobbyById2($id: String!) {\\n    lobbyById(id: $id) {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\"): (typeof documents)[\"\\n  query LobbyById2($id: String!) {\\n    lobbyById(id: $id) {\\n      id\\n      capacity\\n      tier\\n      reservationsCount\\n      characters {\\n        id\\n        character {\\n          id\\n          name\\n          owner\\n          level\\n          experience\\n          attributes\\n        }\\n      }\\n      battleLogs {\\n        id\\n      }\\n    }\\n  }\\n\"];\n\nexport function graphql(source: string) {\n  return (documents as any)[source] ?? {};\n}\n\nexport type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;"],"names":["GRAPHQL_API_URL","getGraphQLPrimaryKey","document","_name","definitions","name","value","useGraphQL","variables","options","useQuery","queryKey","queryFn","async","_ref","request","undefined","documents","graphql","source","_source"],"sourceRoot":""}