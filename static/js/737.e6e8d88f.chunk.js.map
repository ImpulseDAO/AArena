{"version":3,"file":"static/js/737.e6e8d88f.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/components/Image/Image.tsx","../node_modules/@mantine/core/src/components/Input/InputDescription/InputDescription.tsx","../node_modules/@mantine/core/src/components/Input/InputError/InputError.tsx","../node_modules/@mantine/core/src/components/Input/InputLabel/InputLabel.tsx","../node_modules/@mantine/core/src/components/Input/InputPlaceholder/InputPlaceholder.tsx","../node_modules/@mantine/core/src/components/Input/InputWrapper/get-input-offsets/get-input-offsets.ts","../node_modules/@mantine/core/src/components/Input/InputWrapper/InputWrapper.tsx","../node_modules/@mantine/core/src/components/Input/Input.tsx","../node_modules/@mantine/core/src/components/Input/InputWrapper.context.ts","../node_modules/@mantine/core/src/components/Combobox/get-parsed-combobox-data/get-parsed-combobox-data.ts","../node_modules/@mantine/core/src/components/Combobox/get-options-lockup/get-options-lockup.ts","../node_modules/@mantine/hooks/src/use-click-outside/use-click-outside.ts","../node_modules/@mantine/core/src/components/Popover/Popover.context.ts","../node_modules/@mantine/core/src/core/utils/noop/noop.ts","../node_modules/@mantine/core/src/core/utils/close-on-escape/close-on-escape.ts","../node_modules/@mantine/hooks/src/use-focus-trap/tabbable.ts","../node_modules/@mantine/hooks/src/use-focus-trap/use-focus-trap.ts","../node_modules/@mantine/hooks/src/use-focus-trap/create-aria-hider.ts","../node_modules/@mantine/hooks/src/use-focus-trap/scope-tab.ts","../node_modules/@mantine/core/src/components/FocusTrap/FocusTrap.tsx","../node_modules/@mantine/core/src/components/Popover/PopoverDropdown/PopoverDropdown.tsx","../node_modules/@mantine/hooks/src/use-focus-return/use-focus-return.ts","../node_modules/@mantine/core/src/components/Popover/PopoverTarget/PopoverTarget.tsx","../node_modules/@mantine/core/src/components/Popover/use-popover.ts","../node_modules/@mantine/core/src/components/Popover/Popover.tsx","../node_modules/@mantine/core/src/components/Combobox/Combobox.context.ts","../node_modules/@mantine/core/src/components/Combobox/ComboboxChevron/ComboboxChevron.tsx","../node_modules/@mantine/core/src/components/CloseButton/CloseIcon.tsx","../node_modules/@mantine/core/src/components/CloseButton/CloseButton.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxClearButton/ComboboxClearButton.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxDropdown/ComboboxDropdown.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxDropdownTarget/ComboboxDropdownTarget.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxEmpty/ComboboxEmpty.tsx","../node_modules/@mantine/core/src/components/Combobox/use-combobox-target-props/use-combobox-target-props.ts","../node_modules/@mantine/core/src/components/Combobox/ComboboxEventsTarget/ComboboxEventsTarget.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxFooter/ComboboxFooter.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxGroup/ComboboxGroup.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxHeader/ComboboxHeader.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxOption/ComboboxOption.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxOptions/ComboboxOptions.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxSearch/ComboboxSearch.tsx","../node_modules/@mantine/core/src/components/Combobox/ComboboxTarget/ComboboxTarget.tsx","../node_modules/@mantine/core/src/components/Combobox/use-combobox/use-combobox.ts","../node_modules/@mantine/core/src/components/Combobox/use-combobox/get-index/get-index.ts","../node_modules/@mantine/core/src/components/Combobox/Combobox.tsx","../node_modules/@mantine/core/src/components/Checkbox/CheckIcon.tsx","../node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/is-options-group.ts","../node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/default-options-filter.ts","../node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/validate-options.ts","../node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/OptionsDropdown.tsx","../node_modules/@mantine/core/src/components/Combobox/OptionsDropdown/is-empty-combobox-data.ts","../node_modules/@mantine/core/src/components/InputBase/InputBase.tsx","../node_modules/@mantine/core/src/components/Input/use-input-props.ts","../node_modules/@mantine/core/src/components/Select/Select.tsx","../node_modules/@mantine/core/src/core/styles-api/use-resolved-styles-api/use-resolved-styles-api.ts","../node_modules/@mantine/core/src/core/utils/create-optional-context/create-optional-context.tsx","../node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, `0` by default */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style, `'cover'` by default */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url that will be used as a fallback in case `src` prop is not set or image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst defaultProps: Partial<ImageProps> = {};\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod=\"fallback\"\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputDescriptionStylesNames = 'description';\nexport type InputDescriptionCssVariables = {\n  description: '--input-description-size';\n};\n\nexport interface InputDescriptionProps\n  extends BoxProps,\n    StylesApiProps<InputDescriptionFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls description `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport type InputDescriptionFactory = Factory<{\n  props: InputDescriptionProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputDescriptionStylesNames;\n  vars: InputDescriptionCssVariables;\n}>;\n\nconst defaultProps: Partial<InputDescriptionProps> = {};\n\nconst varsResolver = createVarsResolver<InputDescriptionFactory>((_, { size }) => ({\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputDescription = factory<InputDescriptionFactory>((_props, ref) => {\n  const props = useProps('InputDescription', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = useProps('InputDescription', defaultProps, props);\n  const ctx = useInputWrapperContext();\n\n  const _getStyles = useStyles<InputDescriptionFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'description',\n    vars,\n    varsResolver,\n  });\n\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('description')}\n      {...others}\n    />\n  );\n});\n\nInputDescription.classes = classes;\nInputDescription.displayName = '@mantine/core/InputDescription';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputErrorStylesNames = 'error';\nexport type InputErrorCssVariables = {\n  error: '--input-error-size';\n};\n\nexport interface InputErrorProps\n  extends BoxProps,\n    StylesApiProps<InputErrorFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n  __inheritStyles?: boolean;\n\n  /** Controls error `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n}\n\nexport type InputErrorFactory = Factory<{\n  props: InputErrorProps;\n  ref: HTMLParagraphElement;\n  stylesNames: InputErrorStylesNames;\n  vars: InputErrorCssVariables;\n}>;\n\nconst defaultProps: Partial<InputErrorProps> = {};\n\nconst varsResolver = createVarsResolver<InputErrorFactory>((_, { size }) => ({\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputError = factory<InputErrorFactory>((_props, ref) => {\n  const props = useProps('InputError', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    __staticSelector,\n    __inheritStyles = true,\n    variant,\n    ...others\n  } = props;\n\n  const _getStyles = useStyles<InputErrorFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'error',\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = (__inheritStyles && ctx?.getStyles) || _getStyles;\n\n  return (\n    <Box\n      component=\"p\"\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('error')}\n      {...others}\n    />\n  );\n});\n\nInputError.classes = classes;\nInputError.displayName = '@mantine/core/InputError';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../InputWrapper.context';\nimport classes from '../Input.module.css';\n\nexport type InputLabelStylesNames = 'label' | 'required';\nexport type InputLabelCssVariables = {\n  label: '--input-asterisk-color' | '--input-label-size';\n};\n\nexport interface InputLabelProps\n  extends BoxProps,\n    StylesApiProps<InputLabelFactory>,\n    ElementProps<'label'> {\n  __staticSelector?: string;\n\n  /** Determines whether the required asterisk should be displayed  */\n  required?: boolean;\n\n  /** Controls label `font-size`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Root element of the label, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputLabelFactory = Factory<{\n  props: InputLabelProps;\n  ref: HTMLLabelElement;\n  stylesNames: InputLabelStylesNames;\n  vars: InputLabelCssVariables;\n}>;\n\nconst defaultProps: Partial<InputLabelProps> = {\n  labelElement: 'label',\n};\n\nconst varsResolver = createVarsResolver<InputLabelFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n}));\n\nexport const InputLabel = factory<InputLabelFactory>((_props, ref) => {\n  const props = useProps('InputLabel', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    labelElement,\n    size,\n    required,\n    htmlFor,\n    onMouseDown,\n    children,\n    __staticSelector,\n    variant,\n    ...others\n  } = useProps('InputLabel', defaultProps, props);\n\n  const _getStyles = useStyles<InputLabelFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'label',\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useInputWrapperContext();\n  const getStyles = ctx?.getStyles || _getStyles;\n\n  return (\n    <Box\n      {...getStyles('label')}\n      component={labelElement as 'label'}\n      variant={variant}\n      size={size}\n      ref={ref}\n      htmlFor={labelElement === 'label' ? htmlFor : undefined}\n      mod={{ required }}\n      onMouseDown={(event) => {\n        onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }}\n      {...others}\n    >\n      {children}\n      {required && (\n        <span {...getStyles('required')} aria-hidden>\n          {' *'}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nInputLabel.classes = classes;\nInputLabel.displayName = '@mantine/core/InputLabel';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Input.module.css';\n\nexport type InputPlaceholderStylesNames = 'placeholder';\n\nexport interface InputPlaceholderProps\n  extends BoxProps,\n    StylesApiProps<InputPlaceholderFactory>,\n    ElementProps<'span'> {\n  __staticSelector?: string;\n\n  /** If set, the placeholder will have error styles, `false` by default */\n  error?: React.ReactNode;\n}\n\nexport type InputPlaceholderFactory = Factory<{\n  props: InputPlaceholderProps;\n  ref: HTMLSpanElement;\n  stylesNames: InputPlaceholderStylesNames;\n}>;\n\nconst defaultProps: Partial<InputPlaceholderProps> = {};\n\nexport const InputPlaceholder = factory<InputPlaceholderFactory>((_props, ref) => {\n  const props = useProps('InputPlaceholder', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    __staticSelector,\n    variant,\n    error,\n    ...others\n  } = useProps('InputPlaceholder', defaultProps, props);\n\n  const getStyles = useStyles<InputPlaceholderFactory>({\n    name: ['InputPlaceholder', __staticSelector],\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'placeholder',\n  });\n\n  return (\n    <Box\n      {...getStyles('placeholder')}\n      mod={{ error: !!error }}\n      component=\"span\"\n      variant={variant}\n      ref={ref}\n      {...others}\n    />\n  );\n});\n\nInputPlaceholder.classes = classes;\nInputPlaceholder.displayName = '@mantine/core/InputPlaceholder';\n","export function getInputOffsets(\n  inputWrapperOrder: ('label' | 'input' | 'description' | 'error')[],\n  { hasDescription, hasError }: { hasDescription: boolean; hasError: boolean }\n) {\n  const inputIndex = inputWrapperOrder.findIndex((part) => part === 'input');\n  const aboveInput = inputWrapperOrder[inputIndex - 1];\n  const belowInput = inputWrapperOrder[inputIndex + 1];\n  const offsetTop =\n    (hasDescription && aboveInput === 'description') || (hasError && aboveInput === 'error');\n  const offsetBottom =\n    (hasDescription && belowInput === 'description') || (hasError && belowInput === 'error');\n  return { offsetBottom, offsetTop };\n}\n","import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport {\n  InputDescription,\n  InputDescriptionCssVariables,\n  InputDescriptionStylesNames,\n} from '../InputDescription/InputDescription';\nimport {\n  InputError,\n  InputErrorCssVariables,\n  InputErrorStylesNames,\n} from '../InputError/InputError';\nimport {\n  InputLabel,\n  InputLabelCssVariables,\n  InputLabelStylesNames,\n} from '../InputLabel/InputLabel';\nimport { InputWrapperProvider } from '../InputWrapper.context';\nimport { getInputOffsets } from './get-input-offsets/get-input-offsets';\nimport classes from '../Input.module.css';\n\nexport type InputWrapperCssVariables = InputLabelCssVariables &\n  InputErrorCssVariables &\n  InputDescriptionCssVariables;\n\nexport type InputWrapperStylesNames =\n  | 'root'\n  | InputLabelStylesNames\n  | InputDescriptionStylesNames\n  | InputErrorStylesNames;\n\nexport interface __InputWrapperProps {\n  /** Contents of `Input.Label` component. If not set, label is not rendered. */\n  label?: React.ReactNode;\n\n  /** Contents of `Input.Description` component. If not set, description is not rendered. */\n  description?: React.ReactNode;\n\n  /** Contents of `Input.Error` component. If not set, error is not rendered. */\n  error?: React.ReactNode;\n\n  /** Adds required attribute to the input and a red asterisk on the right side of label, `false` by default */\n  required?: boolean;\n\n  /** Determines whether the required asterisk should be displayed. Overrides `required` prop. Does not add required attribute to the input. `false` by default */\n  withAsterisk?: boolean;\n\n  /** Props passed down to the `Input.Label` component */\n  labelProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Description` component */\n  descriptionProps?: Record<string, any>;\n\n  /** Props passed down to the `Input.Error` component */\n  errorProps?: Record<string, any>;\n\n  /** Input container component, `React.Fragment` by default */\n  inputContainer?: (children: React.ReactNode) => React.ReactNode;\n\n  /** Controls order of the elements, `['label', 'description', 'input', 'error']` by default */\n  inputWrapperOrder?: ('label' | 'input' | 'description' | 'error')[];\n}\n\nexport interface InputWrapperProps\n  extends __InputWrapperProps,\n    BoxProps,\n    StylesApiProps<InputWrapperFactory>,\n    ElementProps<'div'> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces Input.Wrapper props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Static id used as base to generate `aria-` attributes, by default generates random id */\n  id?: string;\n\n  /** Controls size of `Input.Label`, `Input.Description` and `Input.Error` components */\n  size?: MantineSize | (string & {});\n\n  /** `Input.Label` root element, `'label'` by default */\n  labelElement?: 'label' | 'div';\n}\n\nexport type InputWrapperFactory = Factory<{\n  props: InputWrapperProps;\n  ref: HTMLDivElement;\n  stylesNames: InputWrapperStylesNames;\n  vars: InputWrapperCssVariables;\n}>;\n\nconst defaultProps: Partial<InputWrapperProps> = {\n  labelElement: 'label',\n  inputContainer: (children) => children,\n  inputWrapperOrder: ['label', 'description', 'input', 'error'],\n};\n\nconst varsResolver = createVarsResolver<InputWrapperFactory>((_, { size }) => ({\n  label: {\n    '--input-label-size': getFontSize(size),\n    '--input-asterisk-color': undefined,\n  },\n\n  error: {\n    '--input-error-size': size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n\n  description: {\n    '--input-description-size':\n      size === undefined ? undefined : `calc(${getFontSize(size)} - ${rem(2)})`,\n  },\n}));\n\nexport const InputWrapper = factory<InputWrapperFactory>((_props, ref) => {\n  const props = useProps('InputWrapper', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    size,\n    variant,\n    __staticSelector,\n    inputContainer,\n    inputWrapperOrder,\n    label,\n    error,\n    description,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    labelElement,\n    children,\n    withAsterisk,\n    id,\n    required,\n    __stylesApiProps,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<InputWrapperFactory>({\n    name: ['InputWrapper', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const sharedProps = {\n    size,\n    variant,\n    __staticSelector,\n  };\n\n  const idBase = useId(id);\n  const isRequired = typeof withAsterisk === 'boolean' ? withAsterisk : required;\n  const errorId = errorProps?.id || `${idBase}-error`;\n  const descriptionId = descriptionProps?.id || `${idBase}-description`;\n  const inputId = idBase;\n  const hasError = !!error && typeof error !== 'boolean';\n  const hasDescription = !!description;\n  const _describedBy = `${hasError ? errorId : ''} ${hasDescription ? descriptionId : ''}`;\n  const describedBy = _describedBy.trim().length > 0 ? _describedBy.trim() : undefined;\n  const labelId = labelProps?.id || `${idBase}-label`;\n\n  const _label = label && (\n    <InputLabel\n      key=\"label\"\n      labelElement={labelElement}\n      id={labelId}\n      htmlFor={inputId}\n      required={isRequired}\n      {...sharedProps}\n      {...labelProps}\n    >\n      {label}\n    </InputLabel>\n  );\n\n  const _description = hasDescription && (\n    <InputDescription\n      key=\"description\"\n      {...descriptionProps}\n      {...sharedProps}\n      size={descriptionProps?.size || sharedProps.size}\n      id={descriptionProps?.id || descriptionId}\n    >\n      {description}\n    </InputDescription>\n  );\n\n  const _input = <React.Fragment key=\"input\">{inputContainer!(children)}</React.Fragment>;\n\n  const _error = hasError && (\n    <InputError\n      {...errorProps}\n      {...sharedProps}\n      size={errorProps?.size || sharedProps.size}\n      key=\"error\"\n      id={errorProps?.id || errorId}\n    >\n      {error}\n    </InputError>\n  );\n\n  const content = inputWrapperOrder!.map((part) => {\n    switch (part) {\n      case 'label':\n        return _label;\n      case 'input':\n        return _input;\n      case 'description':\n        return _description;\n      case 'error':\n        return _error;\n      default:\n        return null;\n    }\n  });\n\n  return (\n    <InputWrapperProvider\n      value={{\n        getStyles,\n        describedBy,\n        inputId,\n        labelId,\n        ...getInputOffsets(inputWrapperOrder!, { hasDescription, hasError }),\n      }}\n    >\n      <Box\n        ref={ref}\n        variant={variant}\n        size={size}\n        mod={{ error: !!error }}\n        {...getStyles('root')}\n        {...others}\n      >\n        {content}\n      </Box>\n    </InputWrapperProvider>\n  );\n});\n\nInputWrapper.classes = classes;\nInputWrapper.displayName = '@mantine/core/InputWrapper';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  extractStyleProps,\n  getFontSize,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InputDescription } from './InputDescription/InputDescription';\nimport { InputError } from './InputError/InputError';\nimport { InputLabel } from './InputLabel/InputLabel';\nimport { InputPlaceholder } from './InputPlaceholder/InputPlaceholder';\nimport { useInputWrapperContext } from './InputWrapper.context';\nimport {\n  __InputWrapperProps,\n  InputWrapper,\n  InputWrapperStylesNames,\n} from './InputWrapper/InputWrapper';\nimport classes from './Input.module.css';\n\nexport interface __BaseInputProps extends __InputWrapperProps, Omit<__InputProps, 'wrapperProps'> {\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n}\n\nexport type __InputStylesNames = InputStylesNames | InputWrapperStylesNames;\n\nexport type InputStylesNames = 'input' | 'wrapper' | 'section';\nexport type InputVariant = 'default' | 'filled' | 'unstyled';\nexport type InputCssVariables = {\n  wrapper:\n    | '--input-height'\n    | '--input-fz'\n    | '--input-radius'\n    | '--input-left-section-width'\n    | '--input-right-section-width'\n    | '--input-left-section-pointer-events'\n    | '--input-right-section-pointer-events'\n    | '--input-padding-y'\n    | '--input-margin-top'\n    | '--input-margin-bottom';\n};\n\nexport interface InputStylesCtx {\n  offsetTop: boolean | undefined;\n  offsetBottom: boolean | undefined;\n}\n\nexport interface __InputProps {\n  /** Content section rendered on the left side of the input */\n  leftSection?: React.ReactNode;\n\n  /** Left section width, used to set `width` of the section and input `padding-left`, by default equals to the input height */\n  leftSectionWidth?: React.CSSProperties['width'];\n\n  /** Props passed down to the `leftSection` element */\n  leftSectionProps?: React.ComponentPropsWithoutRef<'div'>;\n\n  /** Sets `pointer-events` styles on the `leftSection` element, `'none'` by default */\n  leftSectionPointerEvents?: React.CSSProperties['pointerEvents'];\n\n  /** Content section rendered on the right side of the input */\n  rightSection?: React.ReactNode;\n\n  /** Right section width, used to set `width` of the section and input `padding-right`, by default equals to the input height */\n  rightSectionWidth?: React.CSSProperties['width'];\n\n  /** Props passed down to the `rightSection` element */\n  rightSectionProps?: React.ComponentPropsWithoutRef<'div'>;\n\n  /** Sets `pointer-events` styles on the `rightSection` element, `'none'` by default */\n  rightSectionPointerEvents?: React.CSSProperties['pointerEvents'];\n\n  /** Props passed down to the root element of the `Input` component */\n  wrapperProps?: Record<string, any>;\n\n  /** Sets `required` attribute on the `input` element */\n  required?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Sets `disabled` attribute on the `input` element */\n  disabled?: boolean;\n\n  /** Controls input `height` and horizontal `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Determines whether the input should have `cursor: pointer` style, `false` by default */\n  pointer?: boolean;\n\n  /** Determines whether the input should have red border and red text color when the `error` prop is set, `true` by default */\n  withErrorStyles?: boolean;\n}\n\nexport interface InputProps extends BoxProps, __InputProps, StylesApiProps<InputFactory> {\n  __staticSelector?: string;\n\n  /** Props passed to Styles API context, replaces `Input.Wrapper` props */\n  __stylesApiProps?: Record<string, any>;\n\n  /** Determines whether the input should have error styles and `aria-invalid` attribute */\n  error?: React.ReactNode;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Input element id */\n  id?: string;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputFactory = PolymorphicFactory<{\n  props: InputProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: 'input';\n  stylesNames: InputStylesNames;\n  variant: InputVariant;\n  vars: InputCssVariables;\n  ctx: InputStylesCtx;\n  staticComponents: {\n    Label: typeof InputLabel;\n    Error: typeof InputError;\n    Description: typeof InputDescription;\n    Placeholder: typeof InputPlaceholder;\n    Wrapper: typeof InputWrapper;\n  };\n}>;\n\nconst defaultProps: Partial<InputProps> = {\n  variant: 'default',\n  leftSectionPointerEvents: 'none',\n  rightSectionPointerEvents: 'none',\n  withAria: true,\n  withErrorStyles: true,\n};\n\nconst varsResolver = createVarsResolver<InputFactory>((_, props, ctx) => ({\n  wrapper: {\n    '--input-margin-top': ctx.offsetTop ? 'calc(var(--mantine-spacing-xs) / 2)' : undefined,\n    '--input-margin-bottom': ctx.offsetBottom ? 'calc(var(--mantine-spacing-xs) / 2)' : undefined,\n    '--input-height': getSize(props.size, 'input-height'),\n    '--input-fz': getFontSize(props.size),\n    '--input-radius': props.radius === undefined ? undefined : getRadius(props.radius),\n    '--input-left-section-width':\n      props.leftSectionWidth !== undefined ? rem(props.leftSectionWidth) : undefined,\n    '--input-right-section-width':\n      props.rightSectionWidth !== undefined ? rem(props.rightSectionWidth) : undefined,\n    '--input-padding-y': props.multiline ? getSize(props.size, 'input-padding-y') : undefined,\n    '--input-left-section-pointer-events': props.leftSectionPointerEvents,\n    '--input-right-section-pointer-events': props.rightSectionPointerEvents,\n  },\n}));\n\nexport const Input = polymorphicFactory<InputFactory>((_props, ref) => {\n  const props = useProps('Input', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    required,\n    __staticSelector,\n    __stylesApiProps,\n    size,\n    wrapperProps,\n    error,\n    disabled,\n    leftSection,\n    leftSectionProps,\n    leftSectionWidth,\n    rightSection,\n    rightSectionProps,\n    rightSectionWidth,\n    rightSectionPointerEvents,\n    leftSectionPointerEvents,\n    variant,\n    vars,\n    pointer,\n    multiline,\n    radius,\n    id,\n    withAria,\n    withErrorStyles,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const ctx = useInputWrapperContext();\n  const stylesCtx: InputStylesCtx = { offsetBottom: ctx?.offsetBottom, offsetTop: ctx?.offsetTop };\n\n  const getStyles = useStyles<InputFactory>({\n    name: ['Input', __staticSelector],\n    props: __stylesApiProps || props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    stylesCtx,\n    rootSelector: 'wrapper',\n    vars,\n    varsResolver,\n  });\n\n  const ariaAttributes = withAria\n    ? {\n        required,\n        disabled,\n        'aria-invalid': !!error,\n        'aria-describedby': ctx?.describedBy,\n        id: ctx?.inputId || id,\n      }\n    : {};\n\n  return (\n    <Box\n      {...getStyles('wrapper')}\n      {...styleProps}\n      {...wrapperProps}\n      mod={{\n        error: !!error && withErrorStyles,\n        pointer,\n        disabled,\n        multiline,\n        'data-with-right-section': !!rightSection,\n        'data-with-left-section': !!leftSection,\n      }}\n      variant={variant}\n      size={size}\n    >\n      {leftSection && (\n        <div\n          {...leftSectionProps}\n          data-position=\"left\"\n          {...getStyles('section', {\n            className: leftSectionProps?.className,\n            style: leftSectionProps?.style,\n          })}\n        >\n          {leftSection}\n        </div>\n      )}\n\n      <Box\n        component=\"input\"\n        {...rest}\n        {...ariaAttributes}\n        ref={ref}\n        required={required}\n        mod={{ disabled, error: !!error && withErrorStyles }}\n        variant={variant}\n        {...getStyles('input')}\n      />\n\n      {rightSection && (\n        <div\n          {...rightSectionProps}\n          data-position=\"right\"\n          {...getStyles('section', {\n            className: rightSectionProps?.className,\n            style: rightSectionProps?.style,\n          })}\n        >\n          {rightSection}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nInput.classes = classes;\nInput.Wrapper = InputWrapper;\nInput.Label = InputLabel;\nInput.Error = InputError;\nInput.Description = InputDescription;\nInput.Placeholder = InputPlaceholder;\nInput.displayName = '@mantine/core/Input';\n","import { createOptionalContext, GetStylesApi } from '../../core';\nimport type { InputWrapperFactory } from './InputWrapper/InputWrapper';\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string | undefined;\n  inputId: string | undefined;\n  labelId: string | undefined;\n  getStyles: GetStylesApi<InputWrapperFactory> | null;\n}\n\nexport const [InputWrapperProvider, useInputWrapperContext] =\n  createOptionalContext<InputWrapperContextValue>({\n    offsetBottom: false,\n    offsetTop: false,\n    describedBy: undefined,\n    getStyles: null,\n    inputId: undefined,\n    labelId: undefined,\n  });\n","import {\n  ComboboxData,\n  ComboboxItem,\n  ComboboxItemGroup,\n  ComboboxParsedItem,\n  ComboboxParsedItemGroup,\n} from '../Combobox.types';\n\nfunction parseItem(\n  item: string | ComboboxItem | ComboboxItemGroup\n): ComboboxItem | ComboboxParsedItemGroup {\n  if (typeof item === 'string') {\n    return { value: item, label: item };\n  }\n\n  if (typeof item === 'number') {\n    return { value: (item as number).toString(), label: (item as number).toString() };\n  }\n\n  if ('group' in item) {\n    return {\n      group: item.group,\n      items: item.items.map((i) => parseItem(i) as ComboboxItem),\n    };\n  }\n\n  return item;\n}\n\nexport function getParsedComboboxData(data: ComboboxData | undefined): ComboboxParsedItem[] {\n  if (!data) {\n    return [];\n  }\n\n  return data.map(parseItem);\n}\n","import { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\n\nexport function getOptionsLockup(options: ComboboxParsedItem[]): Record<string, ComboboxItem> {\n  return options.reduce<Record<string, ComboboxItem>>((acc, item) => {\n    if ('group' in item) {\n      return { ...acc, ...getOptionsLockup(item.items) };\n    }\n\n    acc[(item as any).value] = item;\n\n    return acc;\n  }, {});\n}\n\nexport function getLabelsLockup(options: ComboboxParsedItem[]): Record<string, string> {\n  return options.reduce<Record<string, string>>((acc, item) => {\n    if ('group' in item) {\n      return { ...acc, ...getLabelsLockup(item.items) };\n    }\n\n    acc[(item as any).label] = item as any;\n\n    return acc;\n  }, {});\n}\n","import { useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: (HTMLElement | null)[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore =\n          target?.hasAttribute('data-ignore-outside-clicks') ||\n          (!document.body.contains(target) && target.tagName !== 'HTML');\n        const shouldTrigger = nodes.every((node) => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n","import {\n  ClassNames,\n  createSafeContext,\n  GetStylesApi,\n  MantineRadius,\n  MantineShadow,\n  Styles,\n} from '../../core';\nimport { ArrowPosition, FloatingPosition } from '../Floating';\nimport { PortalProps } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport type { PopoverFactory } from './Popover';\nimport { PopoverWidth } from './Popover.types';\n\ninterface PopoverContext {\n  x: number;\n  y: number;\n  arrowX: number | undefined;\n  arrowY: number | undefined;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  opened: boolean;\n  transitionProps?: TransitionOverride;\n  reference: (node: HTMLElement) => void;\n  floating: (node: HTMLElement) => void;\n  width?: PopoverWidth;\n  withArrow: boolean | undefined;\n  arrowSize: number;\n  arrowOffset: number;\n  arrowRadius: number;\n  arrowPosition: ArrowPosition;\n  trapFocus: boolean | undefined;\n  placement: FloatingPosition;\n  withinPortal: boolean | undefined;\n  portalProps?: Omit<PortalProps, 'children'>;\n  closeOnEscape: boolean | undefined;\n  zIndex: string | number | undefined;\n  radius?: MantineRadius | undefined;\n  shadow?: MantineShadow | undefined;\n  onClose?: () => void;\n  getDropdownId: () => string;\n  getTargetId: () => string;\n  controlled: boolean;\n  onToggle: () => void;\n  withRoles: boolean | undefined;\n  targetProps: Record<string, any>;\n  disabled: boolean | undefined;\n  returnFocus: boolean | undefined;\n  classNames: ClassNames<PopoverFactory> | undefined;\n  styles: Styles<PopoverFactory> | undefined;\n  unstyled: boolean | undefined;\n  __staticSelector: string;\n  variant: string | undefined;\n  keepMounted: boolean | undefined;\n  getStyles: GetStylesApi<PopoverFactory>;\n}\n\nexport const [PopoverContextProvider, usePopoverContext] = createSafeContext<PopoverContext>(\n  'Popover component was not found in the tree'\n);\n","export const noop = () => {};\n","import React from 'react';\nimport { noop } from '../noop/noop';\n\ninterface Options {\n  active: boolean | undefined;\n  onTrigger?: () => void;\n  onKeyDown?: (event: React.KeyboardEvent<any>) => void;\n}\n\nexport function closeOnEscape(\n  callback?: (event: any) => void,\n  options: Options = { active: true }\n) {\n  if (typeof callback !== 'function' || !options.active) {\n    return options.onKeyDown || noop;\n  }\n\n  return (event: React.KeyboardEvent<any>) => {\n    if (event.key === 'Escape') {\n      callback(event);\n      options.onTrigger?.();\n    }\n  };\n}\n","const TABBABLE_NODES = /input|select|textarea|button|object/;\nexport const FOCUS_SELECTOR = 'a, input, select, textarea, button, object, [tabindex]';\n\nfunction hidden(element: HTMLElement) {\n  if (process.env.NODE_ENV === 'test') {\n    return false;\n  }\n\n  return element.style.display === 'none';\n}\n\nfunction visible(element: HTMLElement) {\n  const isHidden =\n    element.getAttribute('aria-hidden') ||\n    element.getAttribute('hidden') ||\n    element.getAttribute('type') === 'hidden';\n\n  if (isHidden) {\n    return false;\n  }\n\n  let parentElement: HTMLElement = element;\n  while (parentElement) {\n    if (parentElement === document.body || parentElement.nodeType === 11) {\n      break;\n    }\n\n    if (hidden(parentElement)) {\n      return false;\n    }\n\n    parentElement = parentElement.parentNode as HTMLElement;\n  }\n\n  return true;\n}\n\nfunction getElementTabIndex(element: HTMLElement) {\n  let tabIndex: string | null | undefined = element.getAttribute('tabindex');\n  if (tabIndex === null) {\n    tabIndex = undefined;\n  }\n  return parseInt(tabIndex as string, 10);\n}\n\nexport function focusable(element: HTMLElement) {\n  const nodeName = element.nodeName.toLowerCase();\n  const isTabIndexNotNaN = !Number.isNaN(getElementTabIndex(element));\n  const res =\n    // @ts-expect-error function accepts any html element but if it is a button, it should not be disabled to trigger the condition\n    (TABBABLE_NODES.test(nodeName) && !element.disabled) ||\n    (element instanceof HTMLAnchorElement ? element.href || isTabIndexNotNaN : isTabIndexNotNaN);\n\n  return res && visible(element);\n}\n\nexport function tabbable(element: HTMLElement) {\n  const tabIndex = getElementTabIndex(element);\n  const isTabIndexNaN = Number.isNaN(tabIndex);\n  return (isTabIndexNaN || tabIndex >= 0) && focusable(element);\n}\n\nexport function findTabbableDescendants(element: HTMLElement): HTMLElement[] {\n  return Array.from(element.querySelectorAll<HTMLElement>(FOCUS_SELECTOR)).filter(tabbable);\n}\n","import { useCallback, useEffect, useRef } from 'react';\nimport { createAriaHider } from './create-aria-hider';\nimport { scopeTab } from './scope-tab';\nimport { FOCUS_SELECTOR, focusable, tabbable } from './tabbable';\n\nexport function useFocusTrap(active = true): (instance: HTMLElement | null) => void {\n  const ref = useRef<HTMLElement | null>();\n  const restoreAria = useRef<Function | null>(null);\n\n  const focusNode = (node: HTMLElement) => {\n    let focusElement: HTMLElement | null = node.querySelector('[data-autofocus]');\n\n    if (!focusElement) {\n      const children = Array.from<HTMLElement>(node.querySelectorAll(FOCUS_SELECTOR));\n      focusElement = children.find(tabbable) || children.find(focusable) || null;\n      if (!focusElement && focusable(node)) focusElement = node;\n    }\n\n    if (focusElement) {\n      focusElement.focus({ preventScroll: true });\n    } else if (process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@mantine/hooks/use-focus-trap] Failed to find focusable element within provided node',\n        node\n      );\n    }\n  };\n\n  const setRef = useCallback(\n    (node: HTMLElement | null) => {\n      if (!active) {\n        return;\n      }\n\n      if (node === null) {\n        if (restoreAria.current) {\n          restoreAria.current();\n          restoreAria.current = null;\n        }\n        return;\n      }\n\n      restoreAria.current = createAriaHider(node);\n      if (ref.current === node) {\n        return;\n      }\n\n      if (node) {\n        // Delay processing the HTML node by a frame. This ensures focus is assigned correctly.\n        setTimeout(() => {\n          if (node.getRootNode()) {\n            focusNode(node);\n          } else if (process.env.NODE_ENV === 'development') {\n            // eslint-disable-next-line no-console\n            console.warn('[@mantine/hooks/use-focus-trap] Ref node is not part of the dom', node);\n          }\n        });\n\n        ref.current = node;\n      } else {\n        ref.current = null;\n      }\n    },\n    [active]\n  );\n\n  useEffect(() => {\n    if (!active) {\n      return undefined;\n    }\n\n    ref.current && setTimeout(() => focusNode(ref.current!));\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Tab' && ref.current) {\n        scopeTab(ref.current, event);\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n\n      if (restoreAria.current) {\n        restoreAria.current();\n      }\n    };\n  }, [active]);\n\n  return setRef;\n}\n","import { randomId } from '../utils';\n\ninterface Value {\n  node: HTMLElement;\n  ariaHidden: string | null;\n}\n\nexport function createAriaHider(\n  containerNode: HTMLElement,\n  selector: string = 'body > :not(script)'\n) {\n  const id = randomId();\n\n  const rootNodes: (Value | undefined)[] = Array.from<HTMLElement>(\n    document.querySelectorAll(selector)\n  ).map((node) => {\n    if (node?.shadowRoot?.contains(containerNode) || node.contains(containerNode)) {\n      return undefined;\n    }\n\n    const ariaHidden = node.getAttribute('aria-hidden');\n    const prevAriaHidden = node.getAttribute('data-hidden');\n    const prevFocusId = node.getAttribute('data-focus-id');\n\n    node.setAttribute('data-focus-id', id);\n\n    if (ariaHidden === null || ariaHidden === 'false') {\n      node.setAttribute('aria-hidden', 'true');\n    } else if (!prevAriaHidden && !prevFocusId) {\n      node.setAttribute('data-hidden', ariaHidden);\n    }\n\n    return {\n      node,\n      ariaHidden: prevAriaHidden || null,\n    };\n  });\n\n  return () => {\n    rootNodes.forEach((item) => {\n      if (!item || id !== item.node.getAttribute('data-focus-id')) {\n        return;\n      }\n\n      if (item.ariaHidden === null) {\n        item.node.removeAttribute('aria-hidden');\n      } else {\n        item.node.setAttribute('aria-hidden', item.ariaHidden);\n      }\n\n      item.node.removeAttribute('data-focus-id');\n      item.node.removeAttribute('data-hidden');\n    });\n  };\n}\n","import { findTabbableDescendants } from './tabbable';\n\nexport function scopeTab(node: HTMLElement, event: KeyboardEvent) {\n  const tabbable = findTabbableDescendants(node);\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode() as unknown as DocumentOrShadowRoot;\n  let leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n\n  const activeElement = root.activeElement as Element;\n  const activeElementIsRadio =\n    activeElement.tagName === 'INPUT' && activeElement.getAttribute('type') === 'radio';\n  if (activeElementIsRadio) {\n    const activeRadioGroup = tabbable.filter(\n      (element) =>\n        element.getAttribute('type') === 'radio' &&\n        element.getAttribute('name') === activeElement.getAttribute('name')\n    );\n    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);\n  }\n\n  if (!leavingFinalTabbable) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n\n  if (target) {\n    target.focus();\n  }\n}\n","import React, { cloneElement } from 'react';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\nimport { isElement } from '../../core';\n\nexport interface FocusTrapProps {\n  /** Element at which focus should be trapped, should support ref prop */\n  children: any;\n\n  /** Determines whether focus should be trapped within child element */\n  active?: boolean;\n\n  /** Prop that should be used to access component ref */\n  refProp?: string;\n}\n\nexport function FocusTrap({\n  children,\n  active = true,\n  refProp = 'ref',\n}: FocusTrapProps): React.ReactElement {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children?.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, { [refProp]: ref });\n}\n\nFocusTrap.displayName = '@mantine/core/FocusTrap';\n","import React from 'react';\nimport { useFocusReturn, useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  closeOnEscape,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  useProps,\n} from '../../../core';\nimport { FloatingArrow } from '../../Floating';\nimport { FocusTrap } from '../../FocusTrap';\nimport { OptionalPortal } from '../../Portal';\nimport { Transition } from '../../Transition';\nimport type { PopoverStylesNames } from '../Popover';\nimport { usePopoverContext } from '../Popover.context';\nimport classes from '../Popover.module.css';\n\nexport interface PopoverDropdownProps\n  extends BoxProps,\n    CompoundStylesApiProps<PopoverDropdownFactory>,\n    ElementProps<'div'> {}\n\nexport type PopoverDropdownFactory = Factory<{\n  props: PopoverDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: PopoverStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<PopoverDropdownProps> = {};\n\nexport const PopoverDropdown = factory<PopoverDropdownFactory>((_props, ref) => {\n  const props = useProps('PopoverDropdown', defaultProps, _props);\n  const {\n    className,\n    style,\n    vars,\n    children,\n    onKeyDownCapture,\n    variant,\n    classNames,\n    styles,\n    ...others\n  } = props;\n\n  const ctx = usePopoverContext();\n\n  const returnFocus = useFocusReturn({\n    opened: ctx.opened,\n    shouldReturnFocus: ctx.returnFocus,\n  });\n\n  const accessibleProps = ctx.withRoles\n    ? {\n        'aria-labelledby': ctx.getTargetId(),\n        id: ctx.getDropdownId(),\n        role: 'dialog',\n        tabIndex: -1,\n      }\n    : {};\n\n  const mergedRef = useMergedRef(ref, ctx.floating);\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <OptionalPortal {...ctx.portalProps} withinPortal={ctx.withinPortal}>\n      <Transition\n        mounted={ctx.opened}\n        {...ctx.transitionProps}\n        transition={ctx.transitionProps?.transition || 'fade'}\n        duration={ctx.transitionProps?.duration ?? 150}\n        keepMounted={ctx.keepMounted}\n        exitDuration={\n          typeof ctx.transitionProps?.exitDuration === 'number'\n            ? ctx.transitionProps.exitDuration\n            : ctx.transitionProps?.duration\n        }\n      >\n        {(transitionStyles) => (\n          <FocusTrap active={ctx.trapFocus}>\n            <Box\n              {...accessibleProps}\n              {...others}\n              variant={variant}\n              ref={mergedRef}\n              onKeyDownCapture={closeOnEscape(ctx.onClose, {\n                active: ctx.closeOnEscape,\n                onTrigger: returnFocus,\n                onKeyDown: onKeyDownCapture,\n              })}\n              data-position={ctx.placement}\n              {...ctx.getStyles('dropdown', {\n                className,\n                props,\n                classNames,\n                styles,\n                style: [\n                  {\n                    ...transitionStyles,\n                    zIndex: ctx.zIndex as React.CSSProperties['zIndex'],\n                    top: ctx.y ?? 0,\n                    left: ctx.x ?? 0,\n                    width: ctx.width === 'target' ? undefined : rem(ctx.width),\n                  },\n                  style,\n                ],\n              })}\n            >\n              {children}\n\n              <FloatingArrow\n                ref={ctx.arrowRef}\n                arrowX={ctx.arrowX}\n                arrowY={ctx.arrowY}\n                visible={ctx.withArrow}\n                position={ctx.placement}\n                arrowSize={ctx.arrowSize}\n                arrowRadius={ctx.arrowRadius}\n                arrowOffset={ctx.arrowOffset}\n                arrowPosition={ctx.arrowPosition}\n                {...ctx.getStyles('arrow', {\n                  props,\n                  classNames,\n                  styles,\n                })}\n              />\n            </Box>\n          </FocusTrap>\n        )}\n      </Transition>\n    </OptionalPortal>\n  );\n});\n\nPopoverDropdown.classes = classes;\nPopoverDropdown.displayName = '@mantine/core/PopoverDropdown';\n","import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\ninterface UseFocusReturn {\n  opened: boolean;\n  shouldReturnFocus?: boolean;\n}\n\n/** Returns focus to last active element, used in Modal and Drawer */\nexport function useFocusReturn({ opened, shouldReturnFocus = true }: UseFocusReturn) {\n  const lastActiveElement = useRef<HTMLElement>();\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus({ preventScroll: true });\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n\n  return returnFocus;\n}\n","import React, { cloneElement } from 'react';\nimport cx from 'clsx';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { usePopoverContext } from '../Popover.context';\n\nexport interface PopoverTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Popup accessible type, `'dialog'` by default */\n  popupType?: string;\n}\n\nconst defaultProps: Partial<PopoverTargetProps> = {\n  refProp: 'ref',\n  popupType: 'dialog',\n};\n\nexport type PopoverTargetFactory = Factory<{\n  props: PopoverTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const PopoverTarget = factory<PopoverTargetFactory>((props, ref) => {\n  const { children, refProp, popupType, ...others } = useProps(\n    'PopoverTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const forwardedProps: any = others;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, (children as any).ref, ref);\n\n  const accessibleProps = ctx.withRoles\n    ? {\n        'aria-haspopup': popupType,\n        'aria-expanded': ctx.opened,\n        'aria-controls': ctx.getDropdownId(),\n        id: ctx.getTargetId(),\n      }\n    : {};\n\n  return cloneElement(children, {\n    ...forwardedProps,\n    ...accessibleProps,\n    ...ctx.targetProps,\n    className: cx(ctx.targetProps.className, forwardedProps.className, children.props.className),\n    [refProp!]: targetRef,\n    ...(!ctx.controlled ? { onClick: ctx.onToggle } : null),\n  });\n});\n\nPopoverTarget.displayName = '@mantine/core/PopoverTarget';\n","import {\n  arrow,\n  flip,\n  inline,\n  limitShift,\n  Middleware,\n  offset,\n  shift,\n  size,\n  useFloating,\n  UseFloatingReturn,\n} from '@floating-ui/react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport { FloatingAxesOffsets, FloatingPosition, useFloatingAutoUpdate } from '../Floating';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number | FloatingAxesOffsets;\n  position: FloatingPosition;\n  positionDependencies: any[] | undefined;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened: boolean | undefined;\n  defaultOpened: boolean | undefined;\n  onChange?: (opened: boolean) => void;\n  onClose?: () => void;\n  onOpen?: () => void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares | undefined;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n}\n\nfunction getPopoverMiddlewares(\n  options: UsePopoverOptions,\n  getFloating: () => UseFloatingReturn<Element>\n) {\n  const middlewares: Middleware[] = [offset(options.offset)];\n\n  if (options.middlewares?.shift) {\n    middlewares.push(shift({ limiter: limitShift() }));\n  }\n\n  if (options.middlewares?.flip) {\n    middlewares.push(flip());\n  }\n\n  if (options.middlewares?.inline) {\n    middlewares.push(inline());\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  if (options.middlewares?.size || options.width === 'target') {\n    middlewares.push(\n      size({\n        apply({ rects, availableWidth, availableHeight }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n\n          if (options.middlewares?.size) {\n            Object.assign(styles, {\n              maxWidth: `${availableWidth}px`,\n              maxHeight: `${availableHeight}px`,\n            });\n          }\n\n          if (options.width === 'target') {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`,\n            });\n          }\n        },\n      })\n    );\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const onClose = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    }\n  };\n\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n\n  const floating: UseFloatingReturn<Element> = useFloating({\n    placement: options.position,\n    middleware: getPopoverMiddlewares(options, () => floating),\n  });\n\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    position: options.position,\n    positionDependencies: options.positionDependencies || [],\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  useDidUpdate(() => {\n    if (!options.opened) {\n      options.onClose?.();\n    } else {\n      options.onOpen?.();\n    }\n  }, [options.opened]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n","import React, { useCallback, useRef, useState } from 'react';\nimport { useClickOutside, useId } from '@mantine/hooks';\nimport {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getShadow,\n  MantineRadius,\n  MantineShadow,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  ArrowPosition,\n  FloatingAxesOffsets,\n  FloatingPosition,\n  getFloatingPosition,\n} from '../Floating';\nimport { PortalProps } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport { PopoverContextProvider } from './Popover.context';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\nimport { PopoverDropdown } from './PopoverDropdown/PopoverDropdown';\nimport { PopoverTarget } from './PopoverTarget/PopoverTarget';\nimport { usePopover } from './use-popover';\nimport classes from './Popover.module.css';\n\nexport type PopoverStylesNames = 'dropdown' | 'arrow';\nexport type PopoverCssVariables = {\n  dropdown: '--popover-radius' | '--popover-shadow';\n};\n\nexport interface __PopoverProps {\n  /** Dropdown position relative to the target element, `'bottom'` by default */\n  position?: FloatingPosition;\n\n  /** Offset of the dropdown element, `8` by default */\n  offset?: number | FloatingAxesOffsets;\n\n  /** Called when dropdown position changes */\n  onPositionChange?: (position: FloatingPosition) => void;\n\n  /** `useEffect` dependencies to force update dropdown position, `[]` by default */\n  positionDependencies?: any[];\n\n  /** Called when dropdown closes */\n  onClose?: () => void;\n\n  /** Called when dropdown opens */\n  onOpen?: () => void;\n\n  /** If set dropdown will not be unmounted from the DOM when it is hidden, `display: none` styles will be added instead, `false` by default */\n  keepMounted?: boolean;\n\n  /** Props passed down to the `Transition` component that used to animate dropdown presence, use to configure duration and animation type, `{ duration: 150, transition: 'fade' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Dropdown width, or `'target'` to make dropdown width the same as target element, `'max-content'` by default */\n  width?: PopoverWidth;\n\n  /** Floating ui middlewares to configure position handling, `{ flip: true, shift: true, inline: false }` by default */\n  middlewares?: PopoverMiddlewares;\n\n  /** Determines whether component should have an arrow, `false` by default */\n  withArrow?: boolean;\n\n  /** Arrow size in px, `7` by default */\n  arrowSize?: number;\n\n  /** Arrow offset in px, `5` by default */\n  arrowOffset?: number;\n\n  /** Arrow `border-radius` in px, `0` by default */\n  arrowRadius?: number;\n\n  /** Arrow position */\n  arrowPosition?: ArrowPosition;\n\n  /** Determines whether dropdown should be rendered within the `Portal`, `true` by default */\n  withinPortal?: boolean;\n\n  /** Props to pass down to the `Portal` when `withinPortal` is true */\n  portalProps?: Omit<PortalProps, 'children'>;\n\n  /** Dropdown `z-index`, `300` by default */\n  zIndex?: string | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n\n  /** Key of `theme.shadows` or any other valid CSS `box-shadow` value */\n  shadow?: MantineShadow;\n\n  /** If set, popover dropdown will not be rendered */\n  disabled?: boolean;\n\n  /** Determines whether focus should be automatically returned to control when dropdown closes, `false` by default */\n  returnFocus?: boolean;\n}\n\nexport interface PopoverProps extends __PopoverProps, StylesApiProps<PopoverFactory> {\n  __staticSelector?: string;\n\n  /** `Popover.Target` and `Popover.Dropdown` components */\n  children?: React.ReactNode;\n\n  /** Initial opened state for uncontrolled component */\n  defaultOpened?: boolean;\n\n  /** Controlled dropdown opened state */\n  opened?: boolean;\n\n  /** Called with current state when dropdown opens or closes */\n  onChange?: (opened: boolean) => void;\n\n  /** Determines whether dropdown should be closed on outside clicks, `true` by default */\n  closeOnClickOutside?: boolean;\n\n  /** Events that trigger outside clicks */\n  clickOutsideEvents?: string[];\n\n  /** Determines whether focus should be trapped within dropdown, `false` by default */\n  trapFocus?: boolean;\n\n  /** Determines whether dropdown should be closed when `Escape` key is pressed, `true` by default */\n  closeOnEscape?: boolean;\n\n  /** id base to create accessibility connections */\n  id?: string;\n\n  /** Determines whether dropdown and target elements should have accessible roles, `true` by default */\n  withRoles?: boolean;\n}\n\nexport type PopoverFactory = Factory<{\n  props: PopoverProps;\n  stylesNames: PopoverStylesNames;\n  vars: PopoverCssVariables;\n}>;\n\nconst defaultProps: Partial<PopoverProps> = {\n  position: 'bottom',\n  offset: 8,\n  positionDependencies: [],\n  transitionProps: { transition: 'fade', duration: 150 },\n  middlewares: { flip: true, shift: true, inline: false },\n  arrowSize: 7,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: 'side',\n  closeOnClickOutside: true,\n  withinPortal: true,\n  closeOnEscape: true,\n  trapFocus: false,\n  withRoles: true,\n  returnFocus: false,\n  clickOutsideEvents: ['mousedown', 'touchstart'],\n  zIndex: getDefaultZIndex('popover'),\n  __staticSelector: 'Popover',\n  width: 'max-content',\n};\n\nconst varsResolver = createVarsResolver<PopoverFactory>((_, { radius, shadow }) => ({\n  dropdown: {\n    '--popover-radius': radius === undefined ? undefined : getRadius(radius),\n    '--popover-shadow': getShadow(shadow),\n  },\n}));\n\nexport function Popover(_props: PopoverProps) {\n  const props = useProps('Popover', defaultProps, _props);\n  const {\n    children,\n    position,\n    offset,\n    onPositionChange,\n    positionDependencies,\n    opened,\n    transitionProps,\n    width,\n    middlewares,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    unstyled,\n    classNames,\n    styles,\n    closeOnClickOutside,\n    withinPortal,\n    portalProps,\n    closeOnEscape,\n    clickOutsideEvents,\n    trapFocus,\n    onClose,\n    onOpen,\n    onChange,\n    zIndex,\n    radius,\n    shadow,\n    id,\n    defaultOpened,\n    __staticSelector,\n    withRoles,\n    disabled,\n    returnFocus,\n    variant,\n    keepMounted,\n    vars,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<PopoverFactory>({\n    name: __staticSelector!,\n    props,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'dropdown',\n    vars,\n    varsResolver,\n  });\n\n  const arrowRef = useRef<HTMLDivElement | null>(null);\n  const [targetNode, setTargetNode] = useState<HTMLElement | null>(null);\n  const [dropdownNode, setDropdownNode] = useState<HTMLElement | null>(null);\n  const { dir } = useDirection();\n\n  const uid = useId(id);\n  const popover = usePopover({\n    middlewares,\n    width,\n    position: getFloatingPosition(dir, position!),\n    offset: typeof offset === 'number' ? offset + (withArrow ? arrowSize! / 2 : 0) : offset!,\n    arrowRef,\n    arrowOffset: arrowOffset!,\n    onPositionChange,\n    positionDependencies,\n    opened,\n    defaultOpened,\n    onChange,\n    onOpen,\n    onClose,\n  });\n\n  useClickOutside(() => closeOnClickOutside && popover.onClose(), clickOutsideEvents, [\n    targetNode,\n    dropdownNode,\n  ]);\n\n  const reference = useCallback(\n    (node: HTMLElement) => {\n      setTargetNode(node);\n      popover.floating.refs.setReference(node);\n    },\n    [popover.floating.refs.setReference]\n  );\n\n  const floating = useCallback(\n    (node: HTMLElement) => {\n      setDropdownNode(node);\n      popover.floating.refs.setFloating(node);\n    },\n    [popover.floating.refs.setFloating]\n  );\n\n  return (\n    <PopoverContextProvider\n      value={{\n        returnFocus,\n        disabled,\n        controlled: popover.controlled,\n        reference,\n        floating,\n        x: popover.floating.x!,\n        y: popover.floating.y!,\n        arrowX: popover.floating?.middlewareData?.arrow?.x,\n        arrowY: popover.floating?.middlewareData?.arrow?.y,\n        opened: popover.opened,\n        arrowRef,\n        transitionProps,\n        width,\n        withArrow,\n        arrowSize: arrowSize!,\n        arrowOffset: arrowOffset!,\n        arrowRadius: arrowRadius!,\n        arrowPosition: arrowPosition!,\n        placement: popover.floating.placement,\n        trapFocus,\n        withinPortal,\n        portalProps,\n        zIndex,\n        radius,\n        shadow,\n        closeOnEscape,\n        onClose: popover.onClose,\n        onToggle: popover.onToggle,\n        getTargetId: () => `${uid}-target`,\n        getDropdownId: () => `${uid}-dropdown`,\n        withRoles,\n        targetProps: others,\n        __staticSelector: __staticSelector!,\n        classNames,\n        styles,\n        unstyled,\n        variant,\n        keepMounted,\n        getStyles,\n      }}\n    >\n      {children}\n    </PopoverContextProvider>\n  );\n}\n\nPopover.Target = PopoverTarget;\nPopover.Dropdown = PopoverDropdown;\nPopover.displayName = '@mantine/core/Popover';\nPopover.extend = (input: ExtendComponent<PopoverFactory>) => input;\n","import { createSafeContext, GetStylesApi, MantineSize } from '../../core';\nimport type { ComboboxFactory } from './Combobox';\nimport type { ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport type { ComboboxStore } from './use-combobox/use-combobox';\n\nexport interface ComboboxContextValue {\n  getStyles: GetStylesApi<ComboboxFactory>;\n  store: ComboboxStore;\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n  size: MantineSize | (string & {});\n  resetSelectionOnOptionHover: boolean | undefined;\n  readOnly: boolean | undefined;\n}\n\nexport const [ComboboxProvider, useComboboxContext] = createSafeContext<ComboboxContextValue>(\n  'Combobox component was not found in tree'\n);\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxChevronStylesNames = 'chevron';\nexport type ComboboxChevronCSSVariables = {\n  chevron: '--combobox-chevron-size';\n};\n\nexport interface ComboboxChevronProps\n  extends BoxProps,\n    StylesApiProps<ComboboxChevronFactory>,\n    ElementProps<'svg', 'opacity' | 'display'> {\n  size?: MantineSize | (string & {});\n  error?: React.ReactNode;\n}\n\nexport type ComboboxChevronFactory = Factory<{\n  props: ComboboxChevronProps;\n  ref: SVGSVGElement;\n  stylesNames: ComboboxChevronStylesNames;\n  vars: ComboboxChevronCSSVariables;\n}>;\n\nconst defaultProps: Partial<ComboboxChevronProps> = {\n  error: null,\n};\n\nconst varsResolver = createVarsResolver<ComboboxChevronFactory>((_, { size }) => ({\n  chevron: {\n    '--combobox-chevron-size': getSize(size, 'combobox-chevron-size'),\n  },\n}));\n\nexport const ComboboxChevron = factory<ComboboxChevronFactory>((_props, ref) => {\n  const props = useProps('ComboboxChevron', defaultProps, _props);\n  const { size, error, style, className, classNames, styles, unstyled, vars, ...others } = props;\n\n  const getStyles = useStyles<ComboboxChevronFactory>({\n    name: 'ComboboxChevron',\n    classes,\n    props,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'chevron',\n  });\n\n  return (\n    <Box\n      component=\"svg\"\n      {...others}\n      {...getStyles('chevron')}\n      size={size}\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      mod={['combobox-chevron', { error }]}\n      ref={ref}\n    >\n      <path\n        d=\"M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </Box>\n  );\n});\n\nComboboxChevron.classes = classes;\nComboboxChevron.displayName = '@mantine/core/ComboboxChevron';\n","import React, { forwardRef } from 'react';\n\nexport interface CloseIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  /** Icon width and height, `var(--icon-size)` by default */\n  size?: string;\n}\n\nexport const CloseIcon = forwardRef<SVGSVGElement, CloseIconProps>(\n  ({ size = 'var(--cb-icon-size, 70%)', style, ...others }, ref) => (\n    <svg\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ ...style, width: size, height: size }}\n      ref={ref}\n      {...others}\n    >\n      <path\n        d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n);\n\nCloseIcon.displayName = '@mantine/core/CloseIcon';\n","import React from 'react';\nimport {\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { CloseIcon } from './CloseIcon';\nimport classes from './CloseButton.module.css';\n\nexport type CloseButtonVariant = 'subtle' | 'transparent';\nexport type CloseButtonStylesNames = 'root';\nexport type CloseButtonCssVariables = {\n  root: '--cb-icon-size' | '--cb-size' | '--cb-radius';\n};\n\nexport interface __CloseButtonProps {\n  'data-disabled'?: boolean;\n\n  /** Controls width and height of the button. Numbers are converted to rem. `'md'` by default. */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius. Numbers are converted to rem. `theme.defaultRadius` by default. */\n  radius?: MantineRadius;\n\n  /** Sets `disabled` and `data-disabled` attributes on the button element */\n  disabled?: boolean;\n\n  /** `X` icon `width` and `height`, `80%` by default */\n  iconSize?: number | string;\n\n  /** Content rendered inside the button, for example `VisuallyHidden` with label for screen readers */\n  children?: React.ReactNode;\n\n  /** Replaces default close icon. If set, `iconSize` prop is ignored. */\n  icon?: React.ReactNode;\n}\n\nexport interface CloseButtonProps\n  extends __CloseButtonProps,\n    BoxProps,\n    StylesApiProps<CloseButtonFactory> {}\n\nexport type CloseButtonFactory = PolymorphicFactory<{\n  props: CloseButtonProps;\n  defaultComponent: 'button';\n  defaultRef: HTMLButtonElement;\n  stylesNames: CloseButtonStylesNames;\n  variant: CloseButtonVariant;\n  vars: CloseButtonCssVariables;\n}>;\n\nconst defaultProps: Partial<CloseButtonProps> = {\n  variant: 'subtle',\n};\n\nconst varsResolver = createVarsResolver<CloseButtonFactory>((_, { size, radius, iconSize }) => ({\n  root: {\n    '--cb-size': getSize(size, 'cb-size'),\n    '--cb-radius': radius === undefined ? undefined : getRadius(radius),\n    '--cb-icon-size': rem(iconSize),\n  },\n}));\n\nexport const CloseButton = polymorphicFactory<CloseButtonFactory>((_props, ref) => {\n  const props = useProps('CloseButton', defaultProps, _props);\n  const {\n    iconSize,\n    children,\n    vars,\n    radius,\n    className,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    'data-disabled': dataDisabled,\n    disabled,\n    variant,\n    icon,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CloseButtonFactory>({\n    name: 'CloseButton',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <UnstyledButton\n      ref={ref}\n      {...others}\n      unstyled={unstyled}\n      variant={variant}\n      disabled={disabled}\n      mod={{ disabled: disabled || dataDisabled }}\n      {...getStyles('root', { variant, active: true })}\n    >\n      {icon || <CloseIcon />}\n      {children}\n    </UnstyledButton>\n  );\n});\n\nCloseButton.classes = classes;\nCloseButton.displayName = '@mantine/core/CloseButton';\n","import React, { forwardRef } from 'react';\nimport { ElementProps, MantineSize } from '../../../core';\nimport { __CloseButtonProps, CloseButton } from '../../CloseButton';\n\nexport interface ComboboxClearButtonProps extends __CloseButtonProps, ElementProps<'button'> {\n  size?: MantineSize | (string & {}) | number;\n  onClear: () => void;\n}\n\nexport const ComboboxClearButton = forwardRef<HTMLButtonElement, ComboboxClearButtonProps>(\n  ({ size, onMouseDown, onClick, onClear, ...others }, ref) => (\n    <CloseButton\n      ref={ref}\n      size={size || 'sm'}\n      variant=\"transparent\"\n      tabIndex={-1}\n      aria-hidden\n      {...others}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onClick={(event) => {\n        onClear();\n        onClick?.(event);\n      }}\n    />\n  )\n);\n\nComboboxClearButton.displayName = '@mantine/core/ComboboxClearButton';\n","import React from 'react';\nimport { factory, Factory, useProps } from '../../../core';\nimport { Popover, PopoverDropdownProps } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxDropdownStylesNames = 'dropdown';\n\nexport interface ComboboxDropdownProps extends PopoverDropdownProps {\n  /** Determines whether the dropdown should be hidden, for example, when there are no options to display */\n  hidden?: boolean;\n}\n\nexport type ComboboxDropdownFactory = Factory<{\n  props: ComboboxDropdownProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxDropdownStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxDropdownProps> = {};\n\nexport const ComboboxDropdown = factory<ComboboxDropdownFactory>((props, ref) => {\n  const { classNames, styles, className, style, hidden, ...others } = useProps(\n    'ComboboxDropdown',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Popover.Dropdown\n      {...others}\n      ref={ref}\n      role=\"presentation\"\n      data-hidden={hidden || undefined}\n      {...ctx.getStyles('dropdown', { className, style, classNames, styles })}\n    />\n  );\n});\n\nComboboxDropdown.classes = classes;\nComboboxDropdown.displayName = '@mantine/core/ComboboxDropdown';\n","import React from 'react';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\n\nexport interface ComboboxDropdownTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n}\n\nconst defaultProps: Partial<ComboboxDropdownTargetProps> = {\n  refProp: 'ref',\n};\n\nexport type ComboboxDropdownTargetFactory = Factory<{\n  props: ComboboxDropdownTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxDropdownTarget = factory<ComboboxDropdownTargetFactory>((props, ref) => {\n  const { children, refProp } = useProps('ComboboxDropdownTarget', defaultProps, props);\n  useComboboxContext();\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  return (\n    <Popover.Target ref={ref} refProp={refProp}>\n      {children}\n    </Popover.Target>\n  );\n});\n\nComboboxDropdownTarget.displayName = '@mantine/core/ComboboxDropdownTarget';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxEmptyStylesNames = 'empty';\n\nexport interface ComboboxEmptyProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxEmptyFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxEmptyFactory = Factory<{\n  props: ComboboxEmptyProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxEmptyStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxEmptyProps> = {};\n\nexport const ComboboxEmpty = factory<ComboboxEmptyFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxEmpty',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('empty', { className, classNames, styles, style })}\n      {...others}\n    />\n  );\n});\n\nComboboxEmpty.classes = classes;\nComboboxEmpty.displayName = '@mantine/core/ComboboxEmpty';\n","import { useState } from 'react';\nimport { useComboboxContext } from '../Combobox.context';\n\ninterface UseComboboxTargetPropsInput {\n  targetType: 'input' | 'button' | undefined;\n  withAriaAttributes: boolean | undefined;\n  withKeyboardNavigation: boolean | undefined;\n  withExpandedAttribute: boolean | undefined;\n  onKeyDown: React.KeyboardEventHandler<HTMLInputElement> | undefined;\n}\n\nexport function useComboboxTargetProps({\n  onKeyDown,\n  withKeyboardNavigation,\n  withAriaAttributes,\n  withExpandedAttribute,\n  targetType,\n}: UseComboboxTargetPropsInput) {\n  const ctx = useComboboxContext();\n  const [selectedOptionId, setSelectedOptionId] = useState<string | null>(null);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (ctx.readOnly) {\n      return;\n    }\n\n    if (withKeyboardNavigation) {\n      if (event.nativeEvent.code === 'ArrowDown') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n        } else {\n          setSelectedOptionId(ctx.store.selectNextOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'ArrowUp') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n        } else {\n          setSelectedOptionId(ctx.store.selectPreviousOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'Enter') {\n        const selectedOptionIndex = ctx.store.getSelectedOptionIndex();\n\n        if (ctx.store.dropdownOpened && selectedOptionIndex !== -1) {\n          event.preventDefault();\n          ctx.store.clickSelectedOption();\n        } else if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.openDropdown('keyboard');\n        }\n      }\n\n      if (event.nativeEvent.code === 'Escape') {\n        ctx.store.closeDropdown('keyboard');\n      }\n\n      if (event.nativeEvent.code === 'Space') {\n        if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.toggleDropdown('keyboard');\n        }\n      }\n    }\n  };\n\n  const ariaAttributes = withAriaAttributes\n    ? {\n        'aria-haspopup': 'listbox',\n        'aria-expanded':\n          (withExpandedAttribute && !!(ctx.store.listId && ctx.store.dropdownOpened)) || undefined,\n        'aria-controls': ctx.store.listId,\n        'aria-activedescendant': ctx.store.dropdownOpened\n          ? selectedOptionId || undefined\n          : undefined,\n        autoComplete: 'off',\n        'data-expanded': ctx.store.dropdownOpened ? true : undefined,\n      }\n    : {};\n\n  return {\n    ...ariaAttributes,\n    onKeyDown: handleKeyDown,\n  };\n}\n","import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxEventsTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Determines whether component should respond to keyboard events, `true` by default */\n  withKeyboardNavigation?: boolean;\n\n  /** Determines whether the target should have `aria-` attributes, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the target should have `aria-expanded` attribute, `false` by default */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events should be handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * `input` by default.\n   * */\n  targetType?: 'button' | 'input';\n}\n\nconst defaultProps: Partial<ComboboxEventsTargetProps> = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n};\n\nexport type ComboboxEventsTargetFactory = Factory<{\n  props: ComboboxEventsTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxEventsTarget = factory<ComboboxEventsTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    ...others\n  } = useProps('ComboboxEventsTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n  });\n\n  return cloneElement(children, {\n    ...targetProps,\n    ...others,\n    [refProp!]: useMergedRef(ref, ctx.store.targetRef, (children as any)?.ref),\n  });\n});\n\nComboboxEventsTarget.displayName = '@mantine/core/ComboboxEventsTarget';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxFooterStylesNames = 'footer';\n\nexport interface ComboboxFooterProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxFooterFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxFooterFactory = Factory<{\n  props: ComboboxFooterProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxFooterStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxFooterProps> = {};\n\nexport const ComboboxFooter = factory<ComboboxFooterFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxFooter',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('footer', { className, classNames, style, styles })}\n      {...others}\n    />\n  );\n});\n\nComboboxFooter.classes = classes;\nComboboxFooter.displayName = '@mantine/core/ComboboxFooter';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxGroupStylesNames = 'group' | 'groupLabel';\n\nexport interface ComboboxGroupProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxGroupFactory>,\n    ElementProps<'div'> {\n  /** Group label */\n  label?: React.ReactNode;\n}\n\nexport type ComboboxGroupFactory = Factory<{\n  props: ComboboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxGroupStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxGroupProps> = {};\n\nexport const ComboboxGroup = factory<ComboboxGroupFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, children, label, ...others } = useProps(\n    'ComboboxGroup',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('group', { className, classNames, style, styles })}\n      {...others}\n    >\n      {label && <div {...ctx.getStyles('groupLabel', { classNames, styles })}>{label}</div>}\n      {children}\n    </Box>\n  );\n});\n\nComboboxGroup.classes = classes;\nComboboxGroup.displayName = '@mantine/core/ComboboxGroup';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxHeaderStylesNames = 'header';\n\nexport interface ComboboxHeaderProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxHeaderFactory>,\n    ElementProps<'div'> {}\n\nexport type ComboboxHeaderFactory = Factory<{\n  props: ComboboxHeaderProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxHeaderStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxHeaderProps> = {};\n\nexport const ComboboxHeader = factory<ComboboxHeaderFactory>((props, ref) => {\n  const { classNames, className, style, styles, vars, ...others } = useProps(\n    'ComboboxHeader',\n    defaultProps,\n    props\n  );\n\n  const ctx = useComboboxContext();\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('header', { className, classNames, style, styles })}\n      {...others}\n    />\n  );\n});\n\nComboboxHeader.classes = classes;\nComboboxHeader.displayName = '@mantine/core/ComboboxHeader';\n","import React, { useId } from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionStylesNames = 'option';\n\nexport interface ComboboxOptionProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionFactory>,\n    ElementProps<'div'> {\n  /** Option value */\n  value: string;\n\n  /** Determines whether the option is selected */\n  active?: boolean;\n\n  /** Determines whether the option can be selected */\n  disabled?: boolean;\n\n  /** Determines whether item is selected, useful for virtualized comboboxes */\n  selected?: boolean;\n}\n\nexport type ComboboxOptionFactory = Factory<{\n  props: ComboboxOptionProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxOptionProps> = {};\n\nexport const ComboboxOption = factory<ComboboxOptionFactory>((_props, ref) => {\n  const props = useProps('ComboboxOption', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n\n  return (\n    <Box\n      {...ctx.getStyles('option', { className, classNames, styles, style })}\n      {...others}\n      ref={ref}\n      id={_id}\n      mod={[\n        'combobox-option',\n        { 'combobox-active': active, 'combobox-disabled': disabled, 'combobox-selected': selected },\n      ]}\n      role=\"option\"\n      onClick={(event) => {\n        if (!disabled) {\n          ctx.onOptionSubmit?.(props.value, props);\n          onClick?.(event);\n        } else {\n          event.preventDefault();\n        }\n      }}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onMouseOver={(event) => {\n        if (ctx.resetSelectionOnOptionHover) {\n          ctx.store.resetSelectedOption();\n        }\n        onMouseOver?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOption.classes = classes;\nComboboxOption.displayName = '@mantine/core/ComboboxOption';\n","import React, { useEffect } from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionsStylesNames = 'options';\n\nexport interface ComboboxOptionsProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionsFactory>,\n    ElementProps<'div'> {\n  /** Id of the element that should label the options list */\n  labelledBy?: string;\n}\n\nexport type ComboboxOptionsFactory = Factory<{\n  props: ComboboxOptionsProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionsStylesNames;\n  compound: true;\n}>;\n\nconst defaultProps: Partial<ComboboxOptionsProps> = {};\n\nexport const ComboboxOptions = factory<ComboboxOptionsFactory>((_props, ref) => {\n  const props = useProps('ComboboxOptions', defaultProps, _props);\n  const { classNames, className, style, styles, id, onMouseDown, labelledBy, ...others } = props;\n  const ctx = useComboboxContext();\n  const _id = useId(id);\n\n  useEffect(() => {\n    ctx.store.setListId(_id);\n  }, [_id]);\n\n  return (\n    <Box\n      ref={ref}\n      {...ctx.getStyles('options', { className, style, classNames, styles })}\n      {...others}\n      id={_id}\n      role=\"listbox\"\n      aria-labelledby={labelledBy}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOptions.classes = classes;\nComboboxOptions.displayName = '@mantine/core/ComboboxOptions';\n","import React from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { ElementProps, factory, Factory, useProps } from '../../../core';\nimport { Input, InputProps, InputStylesNames } from '../../Input/Input';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxSearchStylesNames = InputStylesNames;\n\nexport interface ComboboxSearchProps extends InputProps, ElementProps<'input', 'size'> {\n  /** Determines whether the search input should have `aria-` attribute, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the search input should handle keyboard navigation, `true` by default */\n  withKeyboardNavigation?: boolean;\n}\n\nexport type ComboboxSearchFactory = Factory<{\n  props: ComboboxSearchProps;\n  ref: HTMLInputElement;\n  stylesNames: ComboboxSearchStylesNames;\n}>;\n\nconst defaultProps: Partial<ComboboxSearchProps> = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true,\n};\n\nexport const ComboboxSearch = factory<ComboboxSearchFactory>((_props, ref) => {\n  const props = useProps('ComboboxSearch', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles('search');\n\n  const targetProps = useComboboxTargetProps({\n    targetType: 'input',\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown,\n  });\n\n  return (\n    <Input\n      ref={useMergedRef(ref, ctx.store.searchRef)}\n      classNames={[{ input: _styles.className }, classNames] as any}\n      styles={[{ input: _styles.style }, styles] as any}\n      size={size || ctx.size}\n      {...targetProps}\n      {...others}\n      __staticSelector=\"Combobox\"\n    />\n  );\n});\n\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = '@mantine/core/ComboboxSearch';\n","import React, { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to access element ref */\n  refProp?: string;\n\n  /** Determines whether component should respond to keyboard events, `true` by default */\n  withKeyboardNavigation?: boolean;\n\n  /** Determines whether the target should have `aria-` attributes, `true` by default */\n  withAriaAttributes?: boolean;\n\n  /** Determines whether the target should have `aria-expanded` attribute, `false` by default */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events should be handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * `input` by default.\n   * */\n  targetType?: 'button' | 'input';\n}\n\nconst defaultProps: Partial<ComboboxTargetProps> = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n};\n\nexport type ComboboxTargetFactory = Factory<{\n  props: ComboboxTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxTarget = factory<ComboboxTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    ...others\n  } = useProps('ComboboxTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n  });\n\n  const clonedElement = cloneElement(children, {\n    ...targetProps,\n    ...others,\n  });\n\n  return (\n    <Popover.Target ref={useMergedRef(ref, ctx.store.targetRef)}>{clonedElement}</Popover.Target>\n  );\n});\n\nComboboxTarget.displayName = '@mantine/core/ComboboxTarget';\n","import { useCallback, useEffect, useRef } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { getFirstIndex, getNextIndex, getPreviousIndex } from './get-index/get-index';\n\nexport type ComboboxDropdownEventSource = 'keyboard' | 'mouse' | 'unknown';\n\nexport interface ComboboxStore {\n  /** Current dropdown opened state */\n  dropdownOpened: boolean;\n\n  /** Opens dropdown */\n  openDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Closes dropdown */\n  closeDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Toggles dropdown opened state */\n  toggleDropdown: (eventSource?: ComboboxDropdownEventSource) => void;\n\n  /** Selected option index ref */\n  selectedOptionIndex: number;\n\n  /** Returns currently selected option index or `-1` if none of the options is selected */\n  getSelectedOptionIndex: () => number;\n\n  /** Selects `Combobox.Option` by index */\n  selectOption: (index: number) => void;\n\n  /** Selects first `Combobox.Option` with `active` prop.\n   *  If there are no such options, the function does nothing.\n   */\n  selectActiveOption: () => string | null;\n\n  /** Selects first `Combobox.Option` that is not disabled.\n   *  If there are no such options, the function does nothing.\n   * */\n  selectFirstOption: () => string | null;\n\n  /** Selects next `Combobox.Option` that is not disabled.\n   *  If the current option is the last one, the function selects first option, if `loop` is true.\n   */\n  selectNextOption: () => string | null;\n\n  /** Selects previous `Combobox.Option` that is not disabled.\n   *  If the current option is the first one, the function selects last option, if `loop` is true.\n   * */\n  selectPreviousOption: () => string | null;\n\n  /** Resets selected option index to -1, removes `data-combobox-selected` from selected option */\n  resetSelectedOption: () => void;\n\n  /** Triggers `onClick` event of selected option.\n   *  If there is no selected option, the function does nothing.\n   */\n  clickSelectedOption: () => void;\n\n  /** Updates selected option index to currently selected or active option.\n   *  The function is required to be used with searchable components to update selected option index\n   *  when options list changes based on search query.\n   */\n  updateSelectedOptionIndex: (target?: 'active' | 'selected') => void;\n\n  /** List id, used for `aria-*` attributes */\n  listId: string | null;\n\n  /** Sets list id */\n  setListId: (id: string) => void;\n\n  /** Ref of `Combobox.Search` input */\n  searchRef: React.MutableRefObject<HTMLInputElement | null>;\n\n  /** Moves focus to `Combobox.Search` input */\n  focusSearchInput: () => void;\n\n  /** Ref of the target element */\n  targetRef: React.MutableRefObject<HTMLElement | null>;\n\n  /** Moves focus to the target element */\n  focusTarget: () => void;\n}\n\nexport interface UseComboboxOptions {\n  /** Default value for `dropdownOpened`, `false` by default */\n  defaultOpened?: boolean;\n\n  /** Controlled `dropdownOpened` state */\n  opened?: boolean;\n\n  /** Called when `dropdownOpened` state changes */\n  onOpenedChange?: (opened: boolean) => void;\n\n  /** Called when dropdown closes with event source: keyboard, mouse or unknown */\n  onDropdownClose?: (eventSource: ComboboxDropdownEventSource) => void;\n\n  /** Called when dropdown opens with event source: keyboard, mouse or unknown */\n  onDropdownOpen?: (eventSource: ComboboxDropdownEventSource) => void;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first), `true` by default */\n  loop?: boolean;\n\n  /** `behavior` passed down to `element.scrollIntoView`, `'instant'` by default */\n  scrollBehavior?: ScrollBehavior;\n}\n\nexport function useCombobox({\n  defaultOpened,\n  opened,\n  onOpenedChange,\n  onDropdownClose,\n  onDropdownOpen,\n  loop = true,\n  scrollBehavior = 'instant',\n}: UseComboboxOptions = {}): ComboboxStore {\n  const [dropdownOpened, setDropdownOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange: onOpenedChange,\n  });\n\n  const listId = useRef<string | null>(null);\n  const selectedOptionIndex = useRef<number>(-1);\n  const searchRef = useRef<HTMLInputElement | null>(null);\n  const targetRef = useRef<HTMLElement | null>(null);\n  const focusSearchTimeout = useRef<number>(-1);\n  const focusTargetTimeout = useRef<number>(-1);\n  const selectedIndexUpdateTimeout = useRef<number>(-1);\n\n  const openDropdown: ComboboxStore['openDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (!dropdownOpened) {\n        setDropdownOpened(true);\n        onDropdownOpen?.(eventSource);\n      }\n    },\n    [setDropdownOpened, onDropdownOpen, dropdownOpened]\n  );\n\n  const closeDropdown: ComboboxStore['closeDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (dropdownOpened) {\n        setDropdownOpened(false);\n        onDropdownClose?.(eventSource);\n      }\n    },\n    [setDropdownOpened, onDropdownClose, dropdownOpened]\n  );\n\n  const toggleDropdown: ComboboxStore['toggleDropdown'] = useCallback(\n    (eventSource = 'unknown') => {\n      if (dropdownOpened) {\n        closeDropdown(eventSource);\n      } else {\n        openDropdown(eventSource);\n      }\n    },\n    [closeDropdown, openDropdown, dropdownOpened]\n  );\n\n  const clearSelectedItem = useCallback(() => {\n    const selected = document.querySelector(`#${listId.current} [data-combobox-selected]`);\n    selected?.removeAttribute('data-combobox-selected');\n    selected?.removeAttribute('aria-selected');\n  }, []);\n\n  const selectOption = useCallback(\n    (index: number) => {\n      const list = document.getElementById(listId.current!);\n      const items = list?.querySelectorAll('[data-combobox-option]');\n\n      if (!items) {\n        return null;\n      }\n\n      const nextIndex = index >= items!.length ? 0 : index < 0 ? items!.length - 1 : index;\n      selectedOptionIndex.current = nextIndex;\n\n      if (items?.[nextIndex] && !items[nextIndex].hasAttribute('data-combobox-disabled')) {\n        clearSelectedItem();\n        items[nextIndex].setAttribute('data-combobox-selected', 'true');\n        items[nextIndex].setAttribute('aria-selected', 'true');\n        items[nextIndex].scrollIntoView({ block: 'nearest', behavior: scrollBehavior });\n        return items[nextIndex].id;\n      }\n\n      return null;\n    },\n    [scrollBehavior, clearSelectedItem]\n  );\n\n  const selectActiveOption = useCallback(() => {\n    const activeOption = document.querySelector<HTMLDivElement>(\n      `#${listId.current} [data-combobox-active]`\n    );\n\n    if (activeOption) {\n      const items = document.querySelectorAll<HTMLDivElement>(\n        `#${listId.current} [data-combobox-option]`\n      );\n      const index = Array.from(items).findIndex((option) => option === activeOption);\n      return selectOption(index);\n    }\n\n    return selectOption(0);\n  }, [selectOption]);\n\n  const selectNextOption = useCallback(\n    () =>\n      selectOption(\n        getNextIndex(\n          selectedOptionIndex.current,\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`),\n          loop\n        )\n      ),\n    [selectOption, loop]\n  );\n\n  const selectPreviousOption = useCallback(\n    () =>\n      selectOption(\n        getPreviousIndex(\n          selectedOptionIndex.current,\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`),\n          loop\n        )\n      ),\n    [selectOption, loop]\n  );\n\n  const selectFirstOption = useCallback(\n    () =>\n      selectOption(\n        getFirstIndex(\n          document.querySelectorAll<HTMLDivElement>(`#${listId.current} [data-combobox-option]`)\n        )\n      ),\n    [selectOption]\n  );\n\n  const updateSelectedOptionIndex = useCallback((target: 'active' | 'selected' = 'selected') => {\n    selectedIndexUpdateTimeout.current = window.setTimeout(() => {\n      const items = document.querySelectorAll<HTMLDivElement>(\n        `#${listId.current} [data-combobox-option]`\n      );\n      const index = Array.from(items).findIndex((option) =>\n        option.hasAttribute(`data-combobox-${target}`)\n      );\n      selectedOptionIndex.current = index;\n    }, 0);\n  }, []);\n\n  const resetSelectedOption = useCallback(() => {\n    selectedOptionIndex.current = -1;\n    clearSelectedItem();\n  }, [clearSelectedItem]);\n\n  const clickSelectedOption = useCallback(() => {\n    const items = document.querySelectorAll<HTMLDivElement>(\n      `#${listId.current} [data-combobox-option]`\n    );\n    const item = items?.[selectedOptionIndex.current];\n    item?.click();\n  }, []);\n\n  const setListId = useCallback((id: string) => {\n    listId.current = id;\n  }, []);\n\n  const focusSearchInput = useCallback(() => {\n    focusSearchTimeout.current = window.setTimeout(() => searchRef.current!.focus(), 0);\n  }, []);\n\n  const focusTarget = useCallback(() => {\n    focusTargetTimeout.current = window.setTimeout(() => targetRef.current!.focus(), 0);\n  }, []);\n\n  const getSelectedOptionIndex = useCallback(() => selectedOptionIndex.current, []);\n\n  useEffect(\n    () => () => {\n      window.clearTimeout(focusSearchTimeout.current);\n      window.clearTimeout(focusTargetTimeout.current);\n      window.clearTimeout(selectedIndexUpdateTimeout.current);\n    },\n    []\n  );\n\n  return {\n    dropdownOpened,\n    openDropdown,\n    closeDropdown,\n    toggleDropdown,\n\n    selectedOptionIndex: selectedOptionIndex.current,\n    getSelectedOptionIndex,\n    selectOption,\n    selectFirstOption,\n    selectActiveOption,\n    selectNextOption,\n    selectPreviousOption,\n    resetSelectedOption,\n    updateSelectedOptionIndex,\n\n    listId: listId.current,\n    setListId,\n    clickSelectedOption,\n\n    searchRef,\n    focusSearchInput,\n\n    targetRef,\n    focusTarget,\n  };\n}\n","export function getPreviousIndex(\n  currentIndex: number,\n  elements: NodeListOf<HTMLDivElement> | HTMLDivElement[],\n  loop: boolean\n) {\n  for (let i = currentIndex - 1; i >= 0; i -= 1) {\n    if (!elements[i].hasAttribute('data-combobox-disabled')) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = elements.length - 1; i > -1; i -= 1) {\n      if (!elements[i].hasAttribute('data-combobox-disabled')) {\n        return i;\n      }\n    }\n  }\n\n  return currentIndex;\n}\n\nexport function getNextIndex(\n  currentIndex: number,\n  elements: NodeListOf<HTMLDivElement> | HTMLDivElement[],\n  loop: boolean\n) {\n  for (let i = currentIndex + 1; i < elements.length; i += 1) {\n    if (!elements[i].hasAttribute('data-combobox-disabled')) {\n      return i;\n    }\n  }\n\n  if (loop) {\n    for (let i = 0; i < elements.length; i += 1) {\n      if (!elements[i].hasAttribute('data-combobox-disabled')) {\n        return i;\n      }\n    }\n  }\n\n  return currentIndex;\n}\n\nexport function getFirstIndex(elements: NodeListOf<HTMLDivElement> | HTMLDivElement[]) {\n  for (let i = 0; i < elements.length; i += 1) {\n    if (!elements[i].hasAttribute('data-combobox-disabled')) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n","import React from 'react';\nimport {\n  createVarsResolver,\n  ExtendComponent,\n  Factory,\n  getFontSize,\n  getSize,\n  MantineSize,\n  MantineThemeComponent,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { __PopoverProps, Popover } from '../Popover';\nimport { ComboboxProvider } from './Combobox.context';\nimport { ComboboxChevron } from './ComboboxChevron/ComboboxChevron';\nimport { ComboboxClearButton } from './ComboboxClearButton/ComboboxClearButton';\nimport { ComboboxDropdown } from './ComboboxDropdown/ComboboxDropdown';\nimport { ComboboxDropdownTarget } from './ComboboxDropdownTarget/ComboboxDropdownTarget';\nimport { ComboboxEmpty } from './ComboboxEmpty/ComboboxEmpty';\nimport { ComboboxEventsTarget } from './ComboboxEventsTarget/ComboboxEventsTarget';\nimport { ComboboxFooter } from './ComboboxFooter/ComboboxFooter';\nimport { ComboboxGroup } from './ComboboxGroup/ComboboxGroup';\nimport { ComboboxHeader } from './ComboboxHeader/ComboboxHeader';\nimport { ComboboxOption, ComboboxOptionProps } from './ComboboxOption/ComboboxOption';\nimport { ComboboxOptions } from './ComboboxOptions/ComboboxOptions';\nimport { ComboboxSearch } from './ComboboxSearch/ComboboxSearch';\nimport { ComboboxTarget } from './ComboboxTarget/ComboboxTarget';\nimport { ComboboxStore, useCombobox } from './use-combobox/use-combobox';\nimport classes from './Combobox.module.css';\n\nexport type ComboboxStylesNames =\n  | 'options'\n  | 'dropdown'\n  | 'option'\n  | 'search'\n  | 'empty'\n  | 'footer'\n  | 'header'\n  | 'group'\n  | 'groupLabel';\n\nexport type ComboboxCSSVariables = {\n  options: '--combobox-option-fz' | '--combobox-option-padding';\n  dropdown: '--combobox-padding' | '--combobox-option-fz' | '--combobox-option-padding';\n};\n\nexport interface ComboboxProps extends __PopoverProps, StylesApiProps<ComboboxFactory> {\n  __staticSelector?: string;\n\n  /** Combobox content */\n  children?: React.ReactNode;\n\n  /** Combobox store, can be used to control combobox state */\n  store?: ComboboxStore;\n\n  /** Called when item is selected with `Enter` key or by clicking it */\n  onOptionSubmit?: (value: string, optionProps: ComboboxOptionProps) => void;\n\n  /** Controls items `font-size` and `padding`, `'sm'` by default */\n  size?: MantineSize | (string & {});\n\n  /** Controls `padding` of the dropdown, `4` by default */\n  dropdownPadding?: React.CSSProperties['padding'];\n\n  /** Determines whether selection should be reset when option is hovered, `false` by default */\n  resetSelectionOnOptionHover?: boolean;\n\n  /** Determines whether Combobox value can be changed */\n  readOnly?: boolean;\n}\n\nexport type ComboboxFactory = Factory<{\n  props: ComboboxProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxStylesNames;\n  vars: ComboboxCSSVariables;\n  staticComponents: {\n    Target: typeof ComboboxTarget;\n    Dropdown: typeof ComboboxDropdown;\n    Options: typeof ComboboxOptions;\n    Option: typeof ComboboxOption;\n    Search: typeof ComboboxSearch;\n    Empty: typeof ComboboxEmpty;\n    Chevron: typeof ComboboxChevron;\n    Footer: typeof ComboboxFooter;\n    Header: typeof ComboboxHeader;\n    EventsTarget: typeof ComboboxEventsTarget;\n    DropdownTarget: typeof ComboboxDropdownTarget;\n    Group: typeof ComboboxGroup;\n  };\n}>;\n\nconst defaultProps: Partial<ComboboxProps> = {\n  keepMounted: true,\n  withinPortal: true,\n  resetSelectionOnOptionHover: false,\n  width: 'target',\n  transitionProps: { transition: 'fade', duration: 0 },\n};\n\nconst varsResolver = createVarsResolver<ComboboxFactory>((_, { size, dropdownPadding }) => ({\n  options: {\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n\n  dropdown: {\n    '--combobox-padding': dropdownPadding === undefined ? undefined : rem(dropdownPadding),\n    '--combobox-option-fz': getFontSize(size),\n    '--combobox-option-padding': getSize(size, 'combobox-option-padding'),\n  },\n}));\n\nexport function Combobox(_props: ComboboxProps) {\n  const props = useProps('Combobox', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    children,\n    store: controlledStore,\n    vars,\n    onOptionSubmit,\n    size,\n    dropdownPadding,\n    resetSelectionOnOptionHover,\n    __staticSelector,\n    readOnly,\n    ...others\n  } = props;\n\n  const uncontrolledStore = useCombobox();\n  const store = controlledStore || uncontrolledStore;\n\n  const getStyles = useStyles<ComboboxFactory>({\n    name: __staticSelector || 'Combobox',\n    classes,\n    props,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ComboboxProvider\n      value={{\n        getStyles,\n        store,\n        onOptionSubmit,\n        size: size!,\n        resetSelectionOnOptionHover,\n        readOnly,\n      }}\n    >\n      <Popover\n        opened={store.dropdownOpened}\n        {...others}\n        onClose={store.closeDropdown}\n        withRoles={false}\n        unstyled={unstyled}\n      >\n        {children}\n      </Popover>\n    </ComboboxProvider>\n  );\n}\n\nconst extendCombobox = (c: ExtendComponent<ComboboxFactory>): MantineThemeComponent => c;\n\nCombobox.extend = extendCombobox;\nCombobox.classes = classes;\nCombobox.displayName = '@mantine/core/Combobox';\nCombobox.Target = ComboboxTarget;\nCombobox.Dropdown = ComboboxDropdown;\nCombobox.Options = ComboboxOptions;\nCombobox.Option = ComboboxOption;\nCombobox.Search = ComboboxSearch;\nCombobox.Empty = ComboboxEmpty;\nCombobox.Chevron = ComboboxChevron;\nCombobox.Footer = ComboboxFooter;\nCombobox.Header = ComboboxHeader;\nCombobox.EventsTarget = ComboboxEventsTarget;\nCombobox.DropdownTarget = ComboboxDropdownTarget;\nCombobox.Group = ComboboxGroup;\nCombobox.ClearButton = ComboboxClearButton;\n","import React from 'react';\nimport { rem } from '../../core';\n\nexport interface CheckboxIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  indeterminate: boolean | undefined;\n}\n\nexport interface CheckIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  size?: number | string;\n}\n\nexport function CheckIcon({ size, style, ...others }: CheckIconProps) {\n  const _style = size !== undefined ? { width: rem(size), height: rem(size), ...style } : style;\n\n  return (\n    <svg\n      viewBox=\"0 0 10 7\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={_style}\n      aria-hidden\n      {...others}\n    >\n      <path\n        d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n        fill=\"currentColor\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  );\n}\n\nexport function CheckboxIcon({ indeterminate, ...others }: CheckboxIconProps) {\n  if (indeterminate) {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 32 6\"\n        aria-hidden\n        {...others}\n      >\n        <rect width=\"32\" height=\"6\" fill=\"currentColor\" rx=\"3\" />\n      </svg>\n    );\n  }\n\n  return <CheckIcon {...others} />;\n}\n","import { ComboboxParsedItem, ComboboxParsedItemGroup } from '../Combobox.types';\n\nexport function isOptionsGroup(item: ComboboxParsedItem): item is ComboboxParsedItemGroup {\n  return 'group' in item;\n}\n","import { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\nimport { isOptionsGroup } from './is-options-group';\n\nexport interface FilterOptionsInput {\n  options: ComboboxParsedItem[];\n  search: string;\n  limit: number;\n}\n\nexport function defaultOptionsFilter({\n  options,\n  search,\n  limit,\n}: FilterOptionsInput): ComboboxParsedItem[] {\n  const parsedSearch = search.trim().toLowerCase();\n  const result: ComboboxParsedItem[] = [];\n\n  for (let i = 0; i < options.length; i += 1) {\n    const item = options[i];\n\n    if (result.length === limit) {\n      return result;\n    }\n\n    if (isOptionsGroup(item)) {\n      result.push({\n        group: item.group,\n        items: defaultOptionsFilter({\n          options: item.items,\n          search,\n          limit: limit - result.length,\n        }) as ComboboxItem[],\n      });\n    }\n\n    if (!isOptionsGroup(item)) {\n      if (item.label.toLowerCase().includes(parsedSearch)) {\n        result.push(item);\n      }\n    }\n  }\n\n  return result;\n}\n","import { isOptionsGroup } from './is-options-group';\n\nexport function validateOptions(options: any[], valuesSet = new Set()) {\n  if (!Array.isArray(options)) {\n    return;\n  }\n\n  for (const option of options) {\n    if (isOptionsGroup(option)) {\n      validateOptions(option.items, valuesSet);\n    } else {\n      if (typeof option.value === 'undefined') {\n        throw new Error('[@mantine/core] Each option must have value property');\n      }\n\n      if (typeof option.value !== 'string') {\n        throw new Error(\n          `[@mantine/core] Option value must be a string, other data formats are not supported, got ${typeof option.value}`\n        );\n      }\n\n      if (valuesSet.has(option.value)) {\n        throw new Error(\n          `[@mantine/core] Duplicate options are not supported. Option with value \"${option.value}\" was provided more than once`\n        );\n      }\n\n      valuesSet.add(option.value);\n    }\n  }\n}\n","import React from 'react';\nimport cx from 'clsx';\nimport { CheckIcon } from '../../Checkbox';\nimport { ScrollArea } from '../../ScrollArea/ScrollArea';\nimport { Combobox } from '../Combobox';\nimport { ComboboxItem, ComboboxParsedItem } from '../Combobox.types';\nimport { defaultOptionsFilter, FilterOptionsInput } from './default-options-filter';\nimport { isEmptyComboboxData } from './is-empty-combobox-data';\nimport { isOptionsGroup } from './is-options-group';\nimport { validateOptions } from './validate-options';\nimport classes from '../Combobox.module.css';\n\nexport type OptionsFilter = (input: FilterOptionsInput) => ComboboxParsedItem[];\n\nexport interface OptionsGroup {\n  group: string;\n  items: ComboboxItem[];\n}\n\nexport type OptionsData = (ComboboxItem | OptionsGroup)[];\n\ninterface OptionProps {\n  data: ComboboxItem | OptionsGroup;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  unstyled: boolean | undefined;\n}\n\nfunction isValueChecked(value: string | string[] | undefined | null, optionValue: string) {\n  return Array.isArray(value) ? value.includes(optionValue) : value === optionValue;\n}\n\nfunction Option({ data, withCheckIcon, value, checkIconPosition, unstyled }: OptionProps) {\n  if (!isOptionsGroup(data)) {\n    const check = withCheckIcon && isValueChecked(value, data.value) && (\n      <CheckIcon className={classes.optionsDropdownCheckIcon} />\n    );\n\n    return (\n      <Combobox.Option\n        value={data.value}\n        disabled={data.disabled}\n        className={cx({ [classes.optionsDropdownOption]: !unstyled })}\n        data-reverse={checkIconPosition === 'right' || undefined}\n        data-checked={isValueChecked(value, data.value) || undefined}\n        aria-selected={isValueChecked(value, data.value)}\n      >\n        {checkIconPosition === 'left' && check}\n        <span>{data.label}</span>\n        {checkIconPosition === 'right' && check}\n      </Combobox.Option>\n    );\n  }\n\n  const options = data.items.map((item) => (\n    <Option\n      data={item}\n      value={value}\n      key={item.value}\n      unstyled={unstyled}\n      withCheckIcon={withCheckIcon}\n      checkIconPosition={checkIconPosition}\n    />\n  ));\n\n  return <Combobox.Group label={data.group}>{options}</Combobox.Group>;\n}\n\nexport interface OptionsDropdownProps {\n  data: OptionsData;\n  filter: OptionsFilter | undefined;\n  search: string | undefined;\n  limit: number | undefined;\n  withScrollArea: boolean | undefined;\n  maxDropdownHeight: number | string | undefined;\n  hidden?: boolean;\n  hiddenWhenEmpty?: boolean;\n  filterOptions?: boolean;\n  withCheckIcon?: boolean;\n  value?: string | string[] | null;\n  checkIconPosition?: 'left' | 'right';\n  nothingFoundMessage?: React.ReactNode;\n  unstyled: boolean | undefined;\n  labelId: string;\n}\n\nexport function OptionsDropdown({\n  data,\n  hidden,\n  hiddenWhenEmpty,\n  filter,\n  search,\n  limit,\n  maxDropdownHeight,\n  withScrollArea = true,\n  filterOptions = true,\n  withCheckIcon = false,\n  value,\n  checkIconPosition,\n  nothingFoundMessage,\n  unstyled,\n  labelId,\n}: OptionsDropdownProps) {\n  validateOptions(data);\n\n  const shouldFilter = typeof search === 'string';\n  const filteredData = shouldFilter\n    ? (filter || defaultOptionsFilter)({\n        options: data,\n        search: filterOptions ? search : '',\n        limit: limit ?? Infinity,\n      })\n    : data;\n  const isEmpty = isEmptyComboboxData(filteredData);\n\n  const options = filteredData.map((item) => (\n    <Option\n      data={item}\n      key={isOptionsGroup(item) ? item.group : item.value}\n      withCheckIcon={withCheckIcon}\n      value={value}\n      checkIconPosition={checkIconPosition}\n      unstyled={unstyled}\n    />\n  ));\n\n  return (\n    <Combobox.Dropdown hidden={hidden || (hiddenWhenEmpty && isEmpty)}>\n      <Combobox.Options labelledBy={labelId}>\n        {withScrollArea ? (\n          <ScrollArea.Autosize\n            mah={maxDropdownHeight ?? 220}\n            type=\"scroll\"\n            scrollbarSize=\"var(--_combobox-padding)\"\n            offsetScrollbars=\"y\"\n            className={classes.optionsDropdownScrollArea}\n          >\n            {options}\n          </ScrollArea.Autosize>\n        ) : (\n          options\n        )}\n        {isEmpty && nothingFoundMessage && <Combobox.Empty>{nothingFoundMessage}</Combobox.Empty>}\n      </Combobox.Options>\n    </Combobox.Dropdown>\n  );\n}\n","import { ComboboxParsedItem, ComboboxParsedItemGroup } from '../Combobox.types';\n\nexport function isEmptyComboboxData(data: ComboboxParsedItem[]) {\n  if (data.length === 0) {\n    return true;\n  }\n\n  for (const item of data) {\n    if (!('group' in item)) {\n      return false;\n    }\n\n    if ((item as ComboboxParsedItemGroup).items.length > 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import React from 'react';\nimport { BoxProps, polymorphicFactory, PolymorphicFactory, StylesApiProps } from '../../core';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant, useInputProps } from '../Input';\n\nexport interface InputBaseProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<InputBaseFactory> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: Record<string, any>;\n\n  /** Determines whether the input can have multiple lines, for example when `component=\"textarea\"`, `false` by default */\n  multiline?: boolean;\n\n  /** Determines whether `aria-` and other accessibility attributes should be added to the input, `true` by default */\n  withAria?: boolean;\n}\n\nexport type InputBaseFactory = PolymorphicFactory<{\n  props: InputBaseProps;\n  defaultRef: HTMLInputElement;\n  defaultComponent: 'input';\n  stylesNames: __InputStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<InputBaseProps> = {\n  __staticSelector: 'InputBase',\n  withAria: true,\n};\n\nexport const InputBase = polymorphicFactory<InputBaseFactory>((props, ref) => {\n  const { inputProps, wrapperProps, ...others } = useInputProps('InputBase', defaultProps, props);\n  return (\n    <Input.Wrapper {...wrapperProps}>\n      <Input {...inputProps} {...others} ref={ref} />\n    </Input.Wrapper>\n  );\n});\n\nInputBase.classes = { ...Input.classes, ...Input.Wrapper.classes };\nInputBase.displayName = '@mantine/core/InputBase';\n","import { BoxProps, extractStyleProps, StylesApiProps, useProps } from '../../core';\nimport { __BaseInputProps } from './Input';\n\ninterface BaseProps\n  extends __BaseInputProps,\n    BoxProps,\n    StylesApiProps<{ props: any; stylesNames: string }> {\n  __staticSelector?: string;\n  __stylesApiProps?: Record<string, any>;\n  id?: string;\n}\n\nexport function useInputProps<T extends BaseProps, U extends Partial<T>>(\n  component: string,\n  defaultProps: U,\n  _props: T\n) {\n  const props = useProps<T>(component, defaultProps, _props);\n  const {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    styles,\n    className,\n    unstyled,\n    __staticSelector,\n    __stylesApiProps,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    wrapperProps: _wrapperProps,\n    id,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    vars,\n    ...others\n  } = props;\n\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const wrapperProps = {\n    label,\n    description,\n    error,\n    required,\n    classNames,\n    className,\n    __staticSelector,\n    __stylesApiProps: __stylesApiProps || props,\n    errorProps,\n    labelProps,\n    descriptionProps,\n    unstyled,\n    styles,\n    size,\n    style,\n    inputContainer,\n    inputWrapperOrder,\n    withAsterisk,\n    variant,\n    id,\n    ..._wrapperProps,\n  };\n\n  return {\n    ...rest,\n    classNames,\n    styles,\n    unstyled,\n    wrapperProps: { ...wrapperProps, ...styleProps } as typeof wrapperProps & BoxProps,\n    inputProps: {\n      required,\n      classNames,\n      styles,\n      unstyled,\n      size,\n      __staticSelector,\n      __stylesApiProps: __stylesApiProps || props,\n      error,\n      variant,\n      id,\n    },\n  };\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { __CloseButtonProps } from '../CloseButton';\nimport {\n  Combobox,\n  ComboboxItem,\n  ComboboxLikeProps,\n  ComboboxLikeStylesNames,\n  getOptionsLockup,\n  getParsedComboboxData,\n  OptionsDropdown,\n  useCombobox,\n} from '../Combobox';\nimport { __BaseInputProps, __InputStylesNames, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport type SelectStylesNames = __InputStylesNames | ComboboxLikeStylesNames;\n\nexport interface SelectProps\n  extends BoxProps,\n    __BaseInputProps,\n    ComboboxLikeProps,\n    StylesApiProps<SelectFactory>,\n    ElementProps<'input', 'onChange' | 'size' | 'value' | 'defaultValue'> {\n  /** Controlled component value */\n  value?: string | null;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null, option: ComboboxItem) => void;\n\n  /** Determines whether the select should be searchable, `false` by default */\n  searchable?: boolean;\n\n  /** Determines whether check icon should be displayed near the selected option label, `true` by default */\n  withCheckIcon?: boolean;\n\n  /** Position of the check icon relative to the option label, `'left'` by default */\n  checkIconPosition?: 'left' | 'right';\n\n  /** Message displayed when no option matched current search query, only applicable when `searchable` prop is set */\n  nothingFoundMessage?: React.ReactNode;\n\n  /** Controlled search value */\n  searchValue?: string;\n\n  /** Default search value */\n  defaultSearchValue?: string;\n\n  /** Called when search changes */\n  onSearchChange?: (value: string) => void;\n\n  /** Determines whether it should be possible to deselect value by clicking on the selected option, `true` by default */\n  allowDeselect?: boolean;\n\n  /** Determines whether the clear button should be displayed in the right section when the component has value, `false` by default */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: __CloseButtonProps & ElementProps<'button'>;\n\n  /** Props passed down to the hidden input */\n  hiddenInputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nexport type SelectFactory = Factory<{\n  props: SelectProps;\n  ref: HTMLInputElement;\n  stylesNames: SelectStylesNames;\n  variant: InputVariant;\n}>;\n\nconst defaultProps: Partial<SelectProps> = {\n  searchable: false,\n  withCheckIcon: true,\n  allowDeselect: true,\n  checkIconPosition: 'left',\n};\n\nexport const Select = factory<SelectFactory>((_props, ref) => {\n  const props = useProps('Select', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    dropdownOpened,\n    defaultDropdownOpened,\n    onDropdownClose,\n    onDropdownOpen,\n    onFocus,\n    onBlur,\n    onClick,\n    onChange,\n    data,\n    value,\n    defaultValue,\n    selectFirstOptionOnChange,\n    onOptionSubmit,\n    comboboxProps,\n    readOnly,\n    disabled,\n    filter,\n    limit,\n    withScrollArea,\n    maxDropdownHeight,\n    size,\n    searchable,\n    rightSection,\n    checkIconPosition,\n    withCheckIcon,\n    nothingFoundMessage,\n    name,\n    form,\n    searchValue,\n    defaultSearchValue,\n    onSearchChange,\n    allowDeselect,\n    error,\n    rightSectionPointerEvents,\n    id,\n    clearable,\n    clearButtonProps,\n    hiddenInputProps,\n    ...others\n  } = props;\n\n  const parsedData = useMemo(() => getParsedComboboxData(data), [data]);\n  const optionsLockup = useMemo(() => getOptionsLockup(parsedData), [parsedData]);\n  const _id = useId(id);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const selectedOption = typeof _value === 'string' ? optionsLockup[_value] : undefined;\n  const [search, setSearch] = useUncontrolled({\n    value: searchValue,\n    defaultValue: defaultSearchValue,\n    finalValue: selectedOption ? selectedOption.label : '',\n    onChange: onSearchChange,\n  });\n\n  const combobox = useCombobox({\n    opened: dropdownOpened,\n    defaultOpened: defaultDropdownOpened,\n    onDropdownOpen,\n    onDropdownClose: () => {\n      onDropdownClose?.();\n      combobox.resetSelectedOption();\n    },\n  });\n\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<SelectFactory>({\n    props,\n    styles,\n    classNames,\n  });\n\n  useEffect(() => {\n    if (selectFirstOptionOnChange) {\n      combobox.selectFirstOption();\n    }\n  }, [selectFirstOptionOnChange, _value]);\n\n  useEffect(() => {\n    if (value === null) {\n      setSearch('');\n    }\n\n    if (typeof value === 'string' && selectedOption) {\n      setSearch(selectedOption.label);\n    }\n  }, [value, selectedOption]);\n\n  const clearButton = clearable && !!_value && !disabled && !readOnly && (\n    <Combobox.ClearButton\n      size={size as string}\n      {...clearButtonProps}\n      onClear={() => {\n        setValue(null, null);\n        setSearch('');\n      }}\n    />\n  );\n\n  return (\n    <>\n      <Combobox\n        store={combobox}\n        __staticSelector=\"Select\"\n        classNames={resolvedClassNames}\n        styles={resolvedStyles}\n        unstyled={unstyled}\n        readOnly={readOnly}\n        onOptionSubmit={(val) => {\n          onOptionSubmit?.(val);\n          const optionLockup = allowDeselect\n            ? optionsLockup[val].value === _value\n              ? null\n              : optionsLockup[val]\n            : optionsLockup[val];\n\n          const nextValue = optionLockup ? optionLockup.value : null;\n\n          setValue(nextValue, optionLockup);\n          setSearch(typeof nextValue === 'string' ? optionLockup?.label || '' : '');\n          combobox.closeDropdown();\n        }}\n        size={size}\n        {...comboboxProps}\n      >\n        <Combobox.Target targetType={searchable ? 'input' : 'button'}>\n          <InputBase\n            id={_id}\n            ref={ref}\n            rightSection={\n              rightSection ||\n              clearButton || <Combobox.Chevron size={size} error={error} unstyled={unstyled} />\n            }\n            rightSectionPointerEvents={rightSectionPointerEvents || (clearButton ? 'all' : 'none')}\n            {...others}\n            size={size}\n            __staticSelector=\"Select\"\n            disabled={disabled}\n            readOnly={readOnly || !searchable}\n            value={search}\n            onChange={(event) => {\n              setSearch(event.currentTarget.value);\n              combobox.openDropdown();\n              selectFirstOptionOnChange && combobox.selectFirstOption();\n            }}\n            onFocus={(event) => {\n              searchable && combobox.openDropdown();\n              onFocus?.(event);\n            }}\n            onBlur={(event) => {\n              searchable && combobox.closeDropdown();\n              setSearch(_value != null ? optionsLockup[_value]?.label || '' : '');\n              onBlur?.(event);\n            }}\n            onClick={(event) => {\n              searchable ? combobox.openDropdown() : combobox.toggleDropdown();\n              onClick?.(event);\n            }}\n            classNames={resolvedClassNames}\n            styles={resolvedStyles}\n            unstyled={unstyled}\n            pointer={!searchable}\n            error={error}\n          />\n        </Combobox.Target>\n        <OptionsDropdown\n          data={parsedData}\n          hidden={readOnly || disabled}\n          filter={filter}\n          search={search}\n          limit={limit}\n          hiddenWhenEmpty={!searchable || !nothingFoundMessage}\n          withScrollArea={withScrollArea}\n          maxDropdownHeight={maxDropdownHeight}\n          filterOptions={searchable && selectedOption?.label !== search}\n          value={_value}\n          checkIconPosition={checkIconPosition}\n          withCheckIcon={withCheckIcon}\n          nothingFoundMessage={nothingFoundMessage}\n          unstyled={unstyled}\n          labelId={`${_id}-label`}\n        />\n      </Combobox>\n      <input\n        type=\"hidden\"\n        name={name}\n        value={_value || ''}\n        form={form}\n        disabled={disabled}\n        {...hiddenInputProps}\n      />\n    </>\n  );\n});\n\nSelect.classes = { ...InputBase.classes, ...Combobox.classes };\nSelect.displayName = '@mantine/core/Select';\n","import { FactoryPayload } from '../../factory';\nimport { useMantineTheme } from '../../MantineProvider';\nimport { ClassNames, Styles } from '../styles-api.types';\nimport { resolveClassNames } from '../use-styles/get-class-name/resolve-class-names/resolve-class-names';\nimport { resolveStyles } from '../use-styles/get-style/resolve-styles/resolve-styles';\n\nexport interface UseResolvedStylesApiInput<Payload extends FactoryPayload> {\n  classNames: ClassNames<Payload> | undefined;\n  styles: Styles<Payload> | undefined;\n  props: Record<string, any>;\n  stylesCtx?: Record<string, any>;\n}\n\nexport function useResolvedStylesApi<Payload extends FactoryPayload>({\n  classNames,\n  styles,\n  props,\n  stylesCtx,\n}: UseResolvedStylesApiInput<Payload>) {\n  const theme = useMantineTheme();\n\n  return {\n    resolvedClassNames: resolveClassNames({\n      theme,\n      classNames,\n      props,\n      stylesCtx: stylesCtx || undefined,\n    }),\n\n    resolvedStyles: resolveStyles({\n      theme,\n      styles,\n      props,\n      stylesCtx: stylesCtx || undefined,\n    }),\n  };\n}\n","import React, { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n","import { useState } from 'react';\n\ninterface UseUncontrolledInput<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledInput<T>): [T, (value: T, ...payload: any[]) => void, boolean] {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"],"names":["defaultProps","varsResolver","createVarsResolver","_","_ref","radius","fit","root","getRadius","Image","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","onError","src","fallbackSrc","others","error","setError","useState","useEffect","getStyles","useStyles","name","classes","React","Box","component","mod","event","displayName","size","description","getFontSize","rem","InputDescription","factory","__staticSelector","__inheritStyles","variant","ctx","useInputWrapperContext","_getStyles","rootSelector","InputError","labelElement","label","InputLabel","required","htmlFor","onMouseDown","children","defaultPrevented","detail","preventDefault","InputPlaceholder","getInputOffsets","inputWrapperOrder","hasDescription","hasError","inputIndex","findIndex","part","aboveInput","belowInput","offsetBottom","offsetTop","inputContainer","InputWrapper","labelProps","descriptionProps","errorProps","withAsterisk","id","__stylesApiProps","sharedProps","idBase","useId","isRequired","errorId","descriptionId","inputId","_describedBy","describedBy","trim","length","labelId","_label","key","_description","_input","_error","content","map","InputWrapperProvider","value","leftSectionPointerEvents","rightSectionPointerEvents","withAria","withErrorStyles","wrapper","getSize","leftSectionWidth","rightSectionWidth","multiline","Input","wrapperProps","disabled","leftSection","leftSectionProps","rightSection","rightSectionProps","pointer","styleProps","rest","extractStyleProps","stylesCtx","ariaAttributes","Wrapper","Label","Error","Description","Placeholder","createOptionalContext","parseItem","item","toString","group","items","i","getOptionsLockup","options","reduce","acc","DEFAULT_EVENTS","PopoverContextProvider","usePopoverContext","createSafeContext","noop","closeOnEscape","callback","arguments","undefined","active","_options$onTrigger","onTrigger","call","onKeyDown","TABBABLE_NODES","FOCUS_SELECTOR","hidden","element","display","getElementTabIndex","tabIndex","getAttribute","parseInt","focusable","nodeName","toLowerCase","isTabIndexNotNaN","Number","isNaN","test","HTMLAnchorElement","href","parentElement","document","body","nodeType","parentNode","visible","tabbable","findTabbableDescendants","Array","from","querySelectorAll","filter","useFocusTrap","useRef","restoreAria","focusNode","node","focusElement","querySelector","find","focus","preventScroll","setRef","useCallback","current","containerNode","selector","randomId","rootNodes","_node$shadowRoot","shadowRoot","contains","ariaHidden","prevAriaHidden","prevFocusId","setAttribute","forEach","removeAttribute","createAriaHider","setTimeout","getRootNode","handleKeyDown","finalTabbable","shiftKey","leavingFinalTabbable","activeElement","tagName","includes","target","scopeTab","addEventListener","removeEventListener","FocusTrap","refProp","focusTrapRef","useMergedRef","isElement","cloneElement","PopoverDropdown","_ctx$transitionProps","_ctx$transitionProps$","_ctx$transitionProps2","_ctx$transitionProps3","_ctx$transitionProps4","onKeyDownCapture","returnFocus","opened","shouldReturnFocus","lastActiveElement","_lastActiveElement$cu","useDidUpdate","timeout","clearFocusTimeout","window","clearTimeout","useFocusReturn","accessibleProps","withRoles","getTargetId","getDropdownId","role","mergedRef","floating","OptionalPortal","portalProps","withinPortal","Transition","mounted","transitionProps","transition","duration","keepMounted","exitDuration","transitionStyles","_ctx$y","_ctx$x","trapFocus","onClose","placement","zIndex","top","y","left","x","width","FloatingArrow","arrowRef","arrowX","arrowY","withArrow","position","arrowSize","arrowRadius","arrowOffset","arrowPosition","popupType","PopoverTarget","forwardedProps","targetRef","reference","targetProps","cx","controlled","onClick","onToggle","getPopoverMiddlewares","getFloating","_options$middlewares","_options$middlewares2","_options$middlewares3","_options$middlewares4","middlewares","offset","shift","push","limiter","limitShift","flip","inline","arrow","padding","apply","_floating$refs$floati","_floating$refs$floati2","_options$middlewares5","rects","availableWidth","availableHeight","refs","Object","assign","maxWidth","maxHeight","positionDependencies","closeOnClickOutside","clickOutsideEvents","getDefaultZIndex","shadow","dropdown","getShadow","Popover","_popover$floating","_popover$floating2","onPositionChange","onOpen","onChange","defaultOpened","targetNode","setTargetNode","dropdownNode","setDropdownNode","dir","useDirection","uid","popover","_opened","setOpened","useUncontrolled","defaultValue","finalValue","useFloating","middleware","useFloatingAutoUpdate","_options$onPositionCh","_options$onOpen2","_options$onClose3","_options$onClose","_options$onClose2","_options$onOpen","usePopover","getFloatingPosition","handler","events","nodes","listener","isArray","shouldIgnore","hasAttribute","every","composedPath","fn","useClickOutside","setReference","setFloating","middlewareData","Target","Dropdown","extend","input","ComboboxProvider","useComboboxContext","chevron","ComboboxChevron","viewBox","fill","xmlns","d","fillRule","clipRule","CloseIcon","forwardRef","height","iconSize","CloseButton","dataDisabled","icon","UnstyledButton","ComboboxClearButton","onClear","ComboboxDropdown","ComboboxDropdownTarget","ComboboxEmpty","useComboboxTargetProps","withKeyboardNavigation","withAriaAttributes","withExpandedAttribute","targetType","selectedOptionId","setSelectedOptionId","store","listId","dropdownOpened","autoComplete","readOnly","nativeEvent","code","selectNextOption","openDropdown","selectActiveOption","selectPreviousOption","selectedOptionIndex","getSelectedOptionIndex","clickSelectedOption","closeDropdown","toggleDropdown","ComboboxEventsTarget","ComboboxFooter","ComboboxGroup","ComboboxHeader","ComboboxOption","onMouseOver","selected","uuid","_id","_ctx$onOptionSubmit","onOptionSubmit","resetSelectionOnOptionHover","resetSelectedOption","ComboboxOptions","labelledBy","setListId","ComboboxSearch","_styles","searchRef","ComboboxTarget","clonedElement","useCombobox","onOpenedChange","onDropdownClose","onDropdownOpen","loop","scrollBehavior","setDropdownOpened","focusSearchTimeout","focusTargetTimeout","selectedIndexUpdateTimeout","eventSource","clearSelectedItem","selectOption","index","list","getElementById","nextIndex","scrollIntoView","block","behavior","activeOption","option","currentIndex","elements","getNextIndex","getPreviousIndex","selectFirstOption","getFirstIndex","updateSelectedOptionIndex","click","focusSearchInput","focusTarget","dropdownPadding","Combobox","controlledStore","uncontrolledStore","CheckIcon","_style","c","Options","Option","Search","Empty","Chevron","Footer","Header","EventsTarget","DropdownTarget","Group","ClearButton","isOptionsGroup","defaultOptionsFilter","search","limit","parsedSearch","result","validateOptions","valuesSet","Set","has","add","isValueChecked","optionValue","data","withCheckIcon","checkIconPosition","check","optionsDropdownCheckIcon","optionsDropdownOption","OptionsDropdown","_ref2","hiddenWhenEmpty","maxDropdownHeight","withScrollArea","filterOptions","nothingFoundMessage","filteredData","Infinity","isEmpty","isEmptyComboboxData","ScrollArea","Autosize","mah","type","scrollbarSize","offsetScrollbars","optionsDropdownScrollArea","InputBase","inputProps","_wrapperProps","useInputProps","searchable","allowDeselect","Select","defaultDropdownOpened","onFocus","onBlur","selectFirstOptionOnChange","comboboxProps","form","searchValue","defaultSearchValue","onSearchChange","clearable","clearButtonProps","hiddenInputProps","parsedData","useMemo","getParsedComboboxData","optionsLockup","_value","setValue","selectedOption","setSearch","combobox","resolvedClassNames","resolvedStyles","theme","useMantineTheme","resolveClassNames","resolveStyles","useResolvedStylesApi","clearButton","val","optionLockup","nextValue","currentTarget","_optionsLockup$_value","initialValue","Context","createContext","Provider","useOptionalContext","useContext","uncontrolledValue","setUncontrolledValue","_len","payload","_key"],"sourceRoot":""}