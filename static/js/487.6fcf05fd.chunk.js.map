{"version":3,"file":"static/js/487.6fcf05fd.chunk.js","mappings":"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","sources":["../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../node_modules/@mantine/core/src/components/Anchor/Anchor.tsx","../node_modules/@mantine/core/src/components/InlineInput/InlineInput.tsx","../node_modules/@mantine/core/src/components/Radio/RadioGroup.context.ts","../node_modules/@mantine/core/src/components/InputsGroupFieldset/InputsGroupFieldset.tsx","../node_modules/@mantine/core/src/components/Radio/RadioGroup/RadioGroup.tsx","../node_modules/@mantine/core/src/components/Radio/RadioIcon.tsx","../node_modules/@mantine/core/src/components/Radio/Radio.tsx","../node_modules/@mantine/core/src/components/Table/Table.context.ts","../node_modules/@mantine/core/src/components/Table/Table.components.tsx","../node_modules/@mantine/core/src/components/Table/TableDataRenderer.tsx","../node_modules/@mantine/core/src/components/Table/TableScrollContainer.tsx","../node_modules/@mantine/core/src/components/Table/Table.tsx","../node_modules/effector-react/effector-react/createWatch.ts","../node_modules/effector-react/effector-react/apiBase.ts","../node_modules/effector-react/effector-react/scope.ts","../node_modules/effector-react/effector-react/nossr.ts","../node_modules/effector-react/effector-react/throw.ts","../node_modules/effector-react/effector-react/useIsomorphicLayoutEffect.ts","../node_modules/effector/effector/collection.ts","../node_modules/effector/effector/throw.ts","../node_modules/effector/effector/createNode.ts","../node_modules/effector/effector/tag.ts","../node_modules/effector/effector/kernel.ts","../node_modules/effector/effector/naming.ts","../node_modules/effector/effector/config.ts","../node_modules/effector/effector/template.ts","../node_modules/effector/effector/createUnit.ts","../node_modules/effector/effector/combine.ts","../node_modules/effector/effector/defer.ts","../node_modules/effector/effector/merge.ts","../node_modules/effector/effector/sample.ts","../node_modules/effector/effector/fork/scopeBind.ts","../node_modules/effector/effector/observable.ts","../node_modules/effector/effector/getter.ts","../node_modules/effector/effector/validate.ts","../node_modules/effector/effector/id.ts","../node_modules/effector/effector/region.ts","../node_modules/effector/effector/own.ts","../node_modules/effector/effector/is.ts","../node_modules/effector/effector/caller.ts","../node_modules/effector/effector/step.ts","../node_modules/effector/effector/stateRef.ts","../node_modules/effector/effector/clearNode.ts","../node_modules/effector/effector/subscription.ts","../node_modules/effector/effector/forward.ts","../node_modules/effector/effector/watch.ts","../node_modules/effector/effector/createEffect.ts"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import React from 'react';\nimport cx from 'clsx';\nimport { polymorphicFactory, PolymorphicFactory, useProps } from '../../core';\nimport { Text, TextCssVariables, TextProps, TextStylesNames, TextVariant } from '../Text';\nimport classes from './Anchor.module.css';\n\nexport type AnchorStylesNames = TextStylesNames;\nexport type AnchorVariant = TextVariant;\nexport type AnchorCssVariables = TextCssVariables;\n\nexport interface AnchorProps extends Omit<TextProps, 'span'> {\n  /** Determines in which cases link should have `text-decoration: underline` styles, `hover` by default */\n  underline?: 'always' | 'hover' | 'never';\n}\n\nexport type AnchorFactory = PolymorphicFactory<{\n  props: AnchorProps;\n  defaultComponent: 'a';\n  defaultRef: HTMLAnchorElement;\n  stylesNames: AnchorStylesNames;\n  vars: AnchorCssVariables;\n  variant: AnchorVariant;\n}>;\n\nconst defaultProps: Partial<AnchorProps> = {\n  underline: 'hover',\n};\n\nexport const Anchor = polymorphicFactory<AnchorFactory>((props, ref) => {\n  const { underline, className, unstyled, ...others } = useProps('Anchor', defaultProps, props);\n  return (\n    <Text\n      component=\"a\"\n      ref={ref}\n      className={cx({ [classes.root]: !unstyled }, className)}\n      {...others}\n      mod={{ underline }}\n      __staticSelector=\"Anchor\"\n      unstyled={unstyled}\n    />\n  );\n});\n\nAnchor.classes = classes;\nAnchor.displayName = '@mantine/core/Anchor';\n","import React, { forwardRef } from 'react';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  getFontSize,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useStyles,\n} from '../../core';\nimport { Input } from '../Input';\nimport classes from './InlineInput.module.css';\n\nexport const InlineInputClasses = classes;\n\nexport type InlineInputStylesNames =\n  | 'root'\n  | 'body'\n  | 'labelWrapper'\n  | 'label'\n  | 'description'\n  | 'error';\n\nexport interface InlineInputProps\n  extends BoxProps,\n    StylesApiProps<InlineInputFactory>,\n    ElementProps<'div'> {\n  __staticSelector: string;\n  __stylesApiProps: Record<string, any>;\n  label: React.ReactNode;\n  description: React.ReactNode;\n  id: string;\n  disabled: boolean | undefined;\n  error: React.ReactNode;\n  size: MantineSize | (string & {}) | undefined;\n  labelPosition?: 'left' | 'right';\n}\n\nexport type InlineInputFactory = Factory<{\n  props: any;\n  stylesNames: InlineInputStylesNames;\n}>;\n\nexport const InlineInput = forwardRef<HTMLDivElement, InlineInputProps>(\n  (\n    {\n      __staticSelector,\n      __stylesApiProps,\n      className,\n      classNames,\n      styles,\n      unstyled,\n      children,\n      label,\n      description,\n      id,\n      disabled,\n      error,\n      size,\n      labelPosition = 'left',\n      variant,\n      style,\n      vars,\n      ...others\n    },\n    ref\n  ) => {\n    const getStyles = useStyles<InlineInputFactory>({\n      name: __staticSelector,\n      props: __stylesApiProps,\n      className,\n      style,\n      classes,\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box\n        {...getStyles('root')}\n        ref={ref}\n        __vars={{\n          '--label-fz': getFontSize(size),\n          '--label-lh': getSize(size, 'label-lh'),\n        }}\n        mod={{ 'label-position': labelPosition }}\n        variant={variant}\n        size={size}\n        {...others}\n      >\n        <div {...getStyles('body')}>\n          {children}\n\n          <div {...getStyles('labelWrapper')} data-disabled={disabled || undefined}>\n            {label && (\n              <label {...getStyles('label')} data-disabled={disabled || undefined} htmlFor={id}>\n                {label}\n              </label>\n            )}\n\n            {description && (\n              <Input.Description size={size} __inheritStyles={false} {...getStyles('description')}>\n                {description}\n              </Input.Description>\n            )}\n\n            {error && error !== 'boolean' && (\n              <Input.Error size={size} __inheritStyles={false} {...getStyles('error')}>\n                {error}\n              </Input.Error>\n            )}\n          </div>\n        </div>\n      </Box>\n    );\n  }\n);\n\nInlineInput.displayName = '@mantine/core/InlineInput';\n","import { createOptionalContext, MantineSize } from '../../core';\n\ninterface RadioGroupContextValue {\n  size: MantineSize | undefined;\n  value: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nexport const [RadioGroupProvider, useRadioGroupContext] =\n  createOptionalContext<RadioGroupContextValue>();\n","import React from 'react';\nimport { useInputWrapperContext } from '../Input';\n\ninterface InputsGroupFieldsetProps {\n  children: React.ReactNode;\n  role: 'radiogroup' | 'group';\n}\n\nexport function InputsGroupFieldset({ children, role }: InputsGroupFieldsetProps) {\n  const ctx = useInputWrapperContext();\n\n  if (!ctx) {\n    return <>{children}</>;\n  }\n\n  return (\n    <div role={role} aria-labelledby={ctx.labelId} aria-describedby={ctx.describedBy}>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { factory, Factory, MantineSize, useProps } from '../../../core';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { InputsGroupFieldset } from '../../InputsGroupFieldset';\nimport { RadioGroupProvider } from '../RadioGroup.context';\n\nexport type RadioGroupStylesNames = InputWrapperStylesNames;\n\nexport interface RadioGroupProps extends Omit<InputWrapperProps, 'onChange'> {\n  /** `Radio` components and any other elements */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Props passed down to the `Input.Wrapper` */\n  wrapperProps?: Record<string, any>;\n\n  /** Controls size of the `Input.Wrapper`, `'sm'` by default */\n  size?: MantineSize;\n\n  /** `name` attribute of child radio inputs. By default, `name` is generated randomly. */\n  name?: string;\n}\n\nexport type RadioGroupFactory = Factory<{\n  props: RadioGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: RadioGroupStylesNames;\n}>;\n\nconst defaultProps: Partial<RadioGroupProps> = {};\n\nexport const RadioGroup = factory<RadioGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, name, ...others } = useProps(\n    'RadioGroup',\n    defaultProps,\n    props\n  );\n\n  const _name = useId(name);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.currentTarget.value);\n\n  return (\n    <RadioGroupProvider value={{ value: _value, onChange: handleChange, size, name: _name }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"RadioGroup\"\n      >\n        <InputsGroupFieldset role=\"radiogroup\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </RadioGroupProvider>\n  );\n});\n\nRadioGroup.classes = Input.Wrapper.classes;\nRadioGroup.displayName = '@mantine/core/RadioGroup';\n","import React from 'react';\nimport { rem } from '../../core';\n\nexport interface RadioIconProps extends React.ComponentPropsWithoutRef<'svg'> {\n  size?: string | number;\n}\n\nexport function RadioIcon({ size, style, ...others }: RadioIconProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 5 5\"\n      style={{ width: rem(size), height: rem(size), ...style }}\n      aria-hidden\n      {...others}\n    >\n      <circle cx=\"2.5\" cy=\"2.5\" r=\"2.5\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n","import React from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getContrastColor,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  parseThemeColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputStylesNames } from '../InlineInput';\nimport { useRadioGroupContext } from './RadioGroup.context';\nimport { RadioGroup } from './RadioGroup/RadioGroup';\nimport { RadioIcon, RadioIconProps } from './RadioIcon';\nimport classes from './Radio.module.css';\n\nexport type RadioVariant = 'filled' | 'outline';\nexport type RadioStylesNames = InlineInputStylesNames | 'inner' | 'radio' | 'icon';\nexport type RadioCssVariables = {\n  root:\n    | '--radio-size'\n    | '--radio-radius'\n    | '--radio-color'\n    | '--radio-icon-color'\n    | '--radio-icon-size';\n};\n\nexport interface RadioProps\n  extends BoxProps,\n    StylesApiProps<RadioFactory>,\n    ElementProps<'input', 'size'> {\n  /** Content of the `label` associated with the radio */\n  label?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input color in checked state, `theme.primaryColor` by default */\n  color?: MantineColor;\n\n  /** Controls size of the component, `'sm'` by default */\n  size?: MantineSize;\n\n  /** A component that replaces default check icon */\n  icon?: React.FC<RadioIconProps>;\n\n  /** Props passed down to the root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Position of the label relative to the input, `'right'` by default */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error displayed below the label */\n  error?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` \"xl\" by default */\n  radius?: MantineRadius;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Key of `theme.colors` or any valid CSS color to set icon color, by default value depends on `theme.autoContrast` */\n  iconColor?: MantineColor;\n\n  /** Determines whether icon color with filled variant should depend on `background-color`. If luminosity of the `color` prop is less than `theme.luminosityThreshold`, then `theme.white` will be used for text color, otherwise `theme.black`. Overrides `theme.autoContrast`. */\n  autoContrast?: boolean;\n}\n\nexport type RadioFactory = Factory<{\n  props: RadioProps;\n  ref: HTMLInputElement;\n  stylesNames: RadioStylesNames;\n  vars: RadioCssVariables;\n  variant: RadioVariant;\n  staticComponents: {\n    Group: typeof RadioGroup;\n  };\n}>;\n\nconst defaultProps: Partial<RadioProps> = {\n  labelPosition: 'right',\n};\n\nconst varsResolver = createVarsResolver<RadioFactory>(\n  (theme, { size, radius, color, iconColor, variant, autoContrast }) => {\n    const parsedColor = parseThemeColor({ color: color || theme.primaryColor, theme });\n    const outlineColor =\n      parsedColor.isThemeColor && parsedColor.shade === undefined\n        ? `var(--mantine-color-${parsedColor.color}-outline)`\n        : parsedColor.color;\n\n    return {\n      root: {\n        '--radio-size': getSize(size, 'radio-size'),\n        '--radio-radius': radius === undefined ? undefined : getRadius(radius),\n        '--radio-color': variant === 'outline' ? outlineColor : getThemeColor(color, theme),\n        '--radio-icon-color': iconColor\n          ? getThemeColor(iconColor, theme)\n          : autoContrast\n            ? getContrastColor({ color, theme })\n            : undefined,\n        '--radio-icon-size': getSize(size, 'radio-icon-size'),\n      },\n    };\n  }\n);\n\nexport const Radio = factory<RadioFactory>((_props, ref) => {\n  const props = useProps('Radio', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    id,\n    size,\n    label,\n    labelPosition,\n    description,\n    error,\n    radius,\n    color,\n    variant,\n    disabled,\n    wrapperProps,\n    icon: Icon = RadioIcon,\n    rootRef,\n    iconColor,\n    onChange,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<RadioFactory>({\n    name: 'Radio',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useRadioGroupContext();\n\n  const contextSize = ctx?.size ?? size;\n  const componentSize = props.size ? size : contextSize;\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value === rest.value,\n        name: rest.name ?? ctx.name,\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event);\n        },\n      }\n    : {};\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Radio\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={componentSize}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Box {...getStyles('inner')} mod={{ 'label-position': labelPosition }}>\n        <Box\n          {...getStyles('radio', { focusable: true, variant })}\n          onChange={onChange}\n          {...rest}\n          {...contextProps}\n          component=\"input\"\n          mod={{ error: !!error }}\n          ref={ref}\n          id={uuid}\n          disabled={disabled}\n          type=\"radio\"\n        />\n        <Icon {...getStyles('icon')} aria-hidden />\n      </Box>\n    </InlineInput>\n  );\n});\n\nRadio.classes = classes;\nRadio.displayName = '@mantine/core/Radio';\nRadio.Group = RadioGroup;\n","import { createSafeContext, GetStylesApi } from '../../core';\nimport type { TableFactory } from './Table';\n\nexport interface TableContextValue {\n  getStyles: GetStylesApi<TableFactory>;\n  stickyHeader: boolean | undefined;\n  striped: 'odd' | 'even' | undefined;\n  highlightOnHover: boolean | undefined;\n  withColumnBorders: boolean | undefined;\n  withRowBorders: boolean | undefined;\n  captionSide: 'top' | 'bottom';\n}\n\nexport const [TableProvider, useTableContext] = createSafeContext<TableContextValue>(\n  'Table component was not found in the tree'\n);\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  FactoryPayload,\n  useProps,\n} from '../../core';\nimport type { TableFactory } from './Table';\nimport { TableContextValue, useTableContext } from './Table.context';\nimport classes from './Table.module.css';\n\nexport interface TableElementProps<Selector extends string>\n  extends BoxProps,\n    CompoundStylesApiProps<Omit<TableFactory, 'stylesNames'> & { stylesNames: Selector }> {}\n\nexport interface TableThProps extends TableElementProps<'th'>, ElementProps<'th'> {}\nexport interface TableTdProps extends TableElementProps<'td'>, ElementProps<'td'> {}\nexport interface TableTrProps extends TableElementProps<'tr'>, ElementProps<'tr'> {}\nexport interface TableTheadProps extends TableElementProps<'thead'>, ElementProps<'thead'> {}\nexport interface TableTbodyProps extends TableElementProps<'tbody'>, ElementProps<'tbody'> {}\nexport interface TableTfootProps extends TableElementProps<'tfoot'>, ElementProps<'tfoot'> {}\nexport interface TableCaptionProps extends TableElementProps<'caption'>, ElementProps<'caption'> {}\n\nexport type TableThFactory = Factory<{\n  props: TableThProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'th';\n  compound: true;\n}>;\n\nexport type TableTdFactory = Factory<{\n  props: TableTdProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'td';\n  compound: true;\n}>;\n\nexport type TableTrFactory = Factory<{\n  props: TableTrProps;\n  ref: HTMLTableRowElement;\n  stylesNames: 'tr';\n  compound: true;\n}>;\n\nexport type TableTheadFactory = Factory<{\n  props: TableTheadProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'thead';\n  compound: true;\n}>;\n\nexport type TableTbodyFactory = Factory<{\n  props: TableTbodyProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tbody';\n  compound: true;\n}>;\n\nexport type TableTfootFactory = Factory<{\n  props: TableTfootProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tfoot';\n  compound: true;\n}>;\n\nexport type TableCaptionFactory = Factory<{\n  props: TableCaptionProps;\n  ref: HTMLTableCaptionElement;\n  stylesNames: 'caption';\n  compound: true;\n}>;\n\ninterface TableElementOptions {\n  columnBorder?: true;\n  rowBorder?: true;\n  striped?: true;\n  highlightOnHover?: true;\n  captionSide?: true;\n  stickyHeader?: true;\n}\n\nfunction getDataAttributes(ctx: TableContextValue, options?: TableElementOptions) {\n  if (!options) {\n    return undefined;\n  }\n\n  const data: Record<string, boolean | string> = {};\n\n  if (options.columnBorder && ctx.withColumnBorders) {\n    data['data-with-column-border'] = true;\n  }\n\n  if (options.rowBorder && ctx.withRowBorders) {\n    data['data-with-row-border'] = true;\n  }\n\n  if (options.striped && ctx.striped) {\n    data['data-striped'] = ctx.striped;\n  }\n\n  if (options.highlightOnHover && ctx.highlightOnHover) {\n    data['data-hover'] = true;\n  }\n\n  if (options.captionSide && ctx.captionSide) {\n    data['data-side'] = ctx.captionSide;\n  }\n\n  if (options.stickyHeader && ctx.stickyHeader) {\n    data['data-sticky'] = true;\n  }\n\n  return data;\n}\n\nexport function tableElement<Factory extends FactoryPayload>(\n  element: 'th' | 'td' | 'tr' | 'thead' | 'tbody' | 'tfoot' | 'caption',\n  options?: TableElementOptions\n) {\n  const name = `Table${element.charAt(0).toUpperCase()}${element.slice(1)}`;\n  const Component = factory<Factory>((_props, ref) => {\n    const props = useProps(name, {}, _props);\n    const { classNames, className, style, styles, ...others } = props;\n\n    const ctx = useTableContext();\n\n    return (\n      <Box\n        component={element}\n        ref={ref}\n        {...getDataAttributes(ctx, options)}\n        {...ctx.getStyles(element, { className, classNames, style, styles, props })}\n        {...others}\n      />\n    );\n  });\n\n  Component.displayName = `@mantine/core/${name}`;\n  Component.classes = classes;\n  return Component;\n}\n\nexport const TableTh = tableElement<TableThFactory>('th', { columnBorder: true });\nexport const TableTd = tableElement<TableTdFactory>('td', { columnBorder: true });\nexport const TableTr = tableElement<TableTrFactory>('tr', {\n  rowBorder: true,\n  striped: true,\n  highlightOnHover: true,\n});\nexport const TableThead = tableElement<TableTheadFactory>('thead', { stickyHeader: true });\nexport const TableTbody = tableElement<TableTbodyFactory>('tbody');\nexport const TableTfoot = tableElement<TableTfootFactory>('tfoot');\nexport const TableCaption = tableElement<TableCaptionFactory>('caption', { captionSide: true });\n","import React from 'react';\nimport type { TableData } from './Table';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\n\nexport interface TableDataRendererProps {\n  data: TableData;\n}\n\nexport function TableDataRenderer({ data }: TableDataRendererProps) {\n  return (\n    <>\n      {data.caption && <TableCaption>{data.caption}</TableCaption>}\n\n      {data.head && (\n        <TableThead>\n          <TableTr>\n            {data.head.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableThead>\n      )}\n\n      {data.body && (\n        <TableTbody>\n          {data.body.map((row, rowIndex) => (\n            <TableTr key={rowIndex}>\n              {row.map((item, index) => (\n                <TableTd key={index}>{item}</TableTd>\n              ))}\n            </TableTr>\n          ))}\n        </TableTbody>\n      )}\n\n      {data.foot && (\n        <TableTfoot>\n          <TableTr>\n            {data.foot.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableTfoot>\n      )}\n    </>\n  );\n}\n\nTableDataRenderer.displayName = '@mantine/core/TableDataRenderer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollArea } from '../ScrollArea';\nimport classes from './Table.module.css';\n\nexport type TableScrollContainerStylesNames = 'scrollContainer' | 'scrollContainerInner';\nexport type TableScrollContainerCssVariables = {\n  scrollContainer: '--table-min-width' | '--table-overflow';\n};\n\nexport interface TableScrollContainerProps\n  extends BoxProps,\n    StylesApiProps<TableScrollContainerFactory>,\n    ElementProps<'div'> {\n  /** `min-width` of the `Table` at which it should become scrollable */\n  minWidth: React.CSSProperties['minWidth'];\n\n  /** Type of the scroll container, `native` to use native scrollbars, `scrollarea` to use `ScrollArea` component, `scrollarea` by default */\n  type?: 'native' | 'scrollarea';\n}\n\nexport type TableScrollContainerFactory = Factory<{\n  props: TableScrollContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: TableScrollContainerStylesNames;\n  vars: TableScrollContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<TableScrollContainerProps> = {\n  type: 'scrollarea',\n};\n\nconst varsResolver = createVarsResolver<TableScrollContainerFactory>((_, { minWidth, type }) => ({\n  scrollContainer: {\n    '--table-min-width': rem(minWidth),\n    '--table-overflow': type === 'native' ? 'auto' : undefined,\n  },\n}));\n\nexport const TableScrollContainer = factory<TableScrollContainerFactory>((_props, ref) => {\n  const props = useProps('TableScrollContainer', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableScrollContainerFactory>({\n    name: 'TableScrollContainer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'scrollContainer',\n  });\n\n  return (\n    <Box<any>\n      component={type === 'scrollarea' ? ScrollArea : 'div'}\n      {...(type === 'scrollarea' ? { offsetScrollbars: 'x' } : {})}\n      ref={ref}\n      {...getStyles('scrollContainer')}\n      {...others}\n    >\n      <div {...getStyles('scrollContainerInner')}>{children}</div>\n    </Box>\n  );\n});\n\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = '@mantine/core/TableScrollContainer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\nimport { TableProvider } from './Table.context';\nimport { TableDataRenderer } from './TableDataRenderer';\nimport { TableScrollContainer } from './TableScrollContainer';\nimport classes from './Table.module.css';\n\nexport type TableStylesNames =\n  | 'table'\n  | 'thead'\n  | 'tbody'\n  | 'tfoot'\n  | 'tr'\n  | 'th'\n  | 'td'\n  | 'caption';\n\nexport type TableCssVariables = {\n  table:\n    | '--table-layout'\n    | '--table-border-color'\n    | '--table-caption-side'\n    | '--table-horizontal-spacing'\n    | '--table-vertical-spacing'\n    | '--table-striped-color'\n    | '--table-highlight-on-hover-color'\n    | '--table-sticky-header-offset';\n};\n\nexport interface TableData {\n  head?: React.ReactNode[];\n  body?: React.ReactNode[][];\n  foot?: React.ReactNode[];\n  caption?: string;\n}\n\nexport interface TableProps extends BoxProps, StylesApiProps<TableFactory>, ElementProps<'table'> {\n  /** Value of `table-layout` style, `auto` by default */\n  layout?: React.CSSProperties['tableLayout'];\n\n  /** Determines on which side `Table.Caption` is displayed, `bottom` by default */\n  captionSide?: 'top' | 'bottom';\n\n  /** Color of table borders, key of `theme.colors` or any valid CSS color */\n  borderColor?: MantineColor;\n\n  /** Determines whether the table should have outer border, `false` by default */\n  withTableBorder?: boolean;\n\n  /** Determines whether the table should have borders between columns, `false` by default */\n  withColumnBorders?: boolean;\n\n  /** Determines whether the table should have borders between rows, `true` by default */\n  withRowBorders?: boolean;\n\n  /** Horizontal cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  horizontalSpacing?: MantineSpacing;\n\n  /** Vertical cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  verticalSpacing?: MantineSpacing;\n\n  /** Determines whether every odd/even row background should be changed to `strippedColor`, if set to `true`, then `odd` value will be used, `false` by default  */\n  striped?: boolean | 'odd' | 'even';\n\n  /** Background color of striped rows, key of `theme.colors` or any valid CSS color */\n  stripedColor?: MantineColor;\n\n  /** Determines whether table rows background should change to `highlightOnHoverColor` when hovered, `false` by default */\n  highlightOnHover?: boolean;\n\n  /** Background color of table rows when hovered, key of `theme.colors` or any valid CSS color */\n  highlightOnHoverColor?: MantineColor;\n\n  /** Data that should be used to generate table, ignored if `children` prop is set */\n  data?: TableData;\n\n  /** Determines whether `Table.Thead` should be sticky, `false` by default */\n  stickyHeader?: boolean;\n\n  /** Offset from top at which `Table.Thead` should become sticky, `0` by default */\n  stickyHeaderOffset?: number | string;\n}\n\nexport type TableFactory = Factory<{\n  props: TableProps;\n  ref: HTMLTableElement;\n  stylesNames: TableStylesNames;\n  vars: TableCssVariables;\n  staticComponents: {\n    Thead: typeof TableThead;\n    Tbody: typeof TableTbody;\n    Tfoot: typeof TableTfoot;\n    Td: typeof TableTd;\n    Th: typeof TableTh;\n    Tr: typeof TableTr;\n    Caption: typeof TableCaption;\n    ScrollContainer: typeof TableScrollContainer;\n    DataRenderer: typeof TableDataRenderer;\n  };\n}>;\n\nconst defaultProps: Partial<TableProps> = {\n  withRowBorders: true,\n  verticalSpacing: 7,\n};\n\nconst varsResolver = createVarsResolver<TableFactory>(\n  (\n    theme,\n    {\n      layout,\n      captionSide,\n      horizontalSpacing,\n      verticalSpacing,\n      borderColor,\n      stripedColor,\n      highlightOnHoverColor,\n      striped,\n      highlightOnHover,\n      stickyHeaderOffset,\n      stickyHeader,\n    }\n  ) => ({\n    table: {\n      '--table-layout': layout,\n      '--table-caption-side': captionSide,\n      '--table-horizontal-spacing': getSpacing(horizontalSpacing),\n      '--table-vertical-spacing': getSpacing(verticalSpacing),\n      '--table-border-color': borderColor ? getThemeColor(borderColor, theme) : undefined,\n      '--table-striped-color':\n        striped && stripedColor ? getThemeColor(stripedColor, theme) : undefined,\n      '--table-highlight-on-hover-color':\n        highlightOnHover && highlightOnHoverColor\n          ? getThemeColor(highlightOnHoverColor, theme)\n          : undefined,\n      '--table-sticky-header-offset': stickyHeader ? rem(stickyHeaderOffset) : undefined,\n    },\n  })\n);\n\nexport const Table = factory<TableFactory>((_props, ref) => {\n  const props = useProps('Table', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableFactory>({\n    name: 'Table',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'table',\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TableProvider\n      value={{\n        getStyles,\n        stickyHeader,\n        striped: striped === true ? 'odd' : striped || undefined,\n        highlightOnHover,\n        withColumnBorders,\n        withRowBorders,\n        captionSide: captionSide || 'bottom',\n      }}\n    >\n      <Box\n        component=\"table\"\n        variant={variant}\n        ref={ref}\n        mod={{ 'data-with-table-border': withTableBorder }}\n        {...getStyles('table')}\n        {...others}\n      >\n        {children || (!!data && <TableDataRenderer data={data} />)}\n      </Box>\n    </TableProvider>\n  );\n});\n\nTable.classes = classes;\nTable.displayName = '@mantine/core/Table';\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\n","import {Store, clearNode, step, createNode, Scope, Node, Cmd} from 'effector'\n\nexport function createWatch<T>(\n  store: Store<T>,\n  fn: (value: T) => any,\n  scope?: Scope,\n  batchStep?: Cmd,\n) {\n  const seq: Cmd[] = [\n    step.mov({\n      store: (store as any).stateRef,\n      to: 'stack',\n    }),\n    step.run({fn: (v) => fn(v)}),\n  ]\n  if (batchStep) seq.unshift(batchStep)\n  if (scope) {\n    const node = createNode({\n      node: seq,\n      meta: {\n        watchOp: \"store\"\n      },\n    })\n    const id = (store as any).graphite.id\n    const scopeLinks: {[_: string]: Node[]} = (scope as any).additionalLinks\n    const links = scopeLinks[id] || []\n    scopeLinks[id] = links\n    links.push(node)\n    return () => {\n      const idx = links.indexOf(node)\n      if (idx !== -1) links.splice(idx, 1)\n      clearNode(node)\n    }\n  } else {\n    const node = createNode({\n      node: seq,\n      parent: [store],\n      family: {owners: store},\n    })\n    return () => {\n      clearNode(node)\n    }\n  }\n}\n","import {Store, is, step, scopeBind, Scope, Unit, Event} from 'effector'\nimport React from 'react'\nimport {useSyncExternalStore} from 'use-sync-external-store/shim'\nimport {useSyncExternalStoreWithSelector} from 'use-sync-external-store/shim/with-selector'\nimport {throwError} from './throw'\nimport {createWatch} from './createWatch'\nimport {withDisplayName} from './withDisplayName'\nimport {useIsomorphicLayoutEffect} from './useIsomorphicLayoutEffect'\nimport {Gate} from './index.h'\n\nconst stateReader = <T>(store: Store<T>, scope?: Scope) =>\n  scope ? scope.getState(store) : store.getState()\nconst basicUpdateFilter = <T>(upd: T, oldValue: T) => upd !== oldValue\nconst keysEqual = (a?: readonly any[], b?: readonly any[]) => {\n  if (!a || !b || a.length !== b.length) return false\n\n  let isEqual = true\n\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      isEqual = false\n      break\n    }\n  }\n\n  return isEqual\n}\n\nexport function useStoreBase<State>(store: Store<State>, scope?: Scope) {\n  if (!is.store(store)) throwError('expect useStore argument to be a store')\n\n  const subscribe = React.useCallback(\n    (cb: () => void) => createWatch(store, cb, scope),\n    [store, scope],\n  )\n  const read = React.useCallback(\n    () => stateReader(store, scope),\n    [store, scope],\n  )\n  const currentValue = useSyncExternalStore(subscribe, read, read)\n\n  return currentValue\n}\n\nexport function useUnitBase<Shape extends {[key: string]: Unit<any>}>(\n  shape: Shape | {'@@unitShape': () => Shape},\n  scope?: Scope,\n) {\n  const isSingleUnit = is.unit(shape)\n  let normShape: {[key: string]: Unit<any>} = {}\n  if (isSingleUnit) {\n    normShape = {unit: shape}\n  } else if ('@@unitShape' in shape) {\n    if (typeof shape['@@unitShape'] === 'function') {\n      normShape = shape['@@unitShape']()\n    } else {\n      throwError('expect @@unitShape to be a function')\n    }\n  } else {\n    normShape = shape\n  }\n  const isList = Array.isArray(normShape)\n  const flagsRef = React.useRef({\n    stale: true,\n    justSubscribed: false,\n    scope,\n  })\n  const [eventsShape, storeKeys, storeValues, eventKeys, eventValues] =\n    React.useMemo(() => {\n      flagsRef.current.stale = true\n      const shape = Array.isArray(normShape) ? [] : ({} as any)\n      const storeKeys: string[] = []\n      const storeValues: Array<Store<any>> = []\n      const eventKeys: string[] = []\n      const eventValues: Array<Unit<any>> = []\n      for (const key in normShape) {\n        const unit = normShape[key]\n        if (!is.unit(unit)) throwError('expect useUnit argument to be a unit')\n        if (is.event(unit) || is.effect(unit)) {\n          shape[key] = scope ? scopeBind(unit as Event<any>, {scope}) : unit\n          eventKeys.push(key)\n          eventValues.push(unit)\n        } else {\n          shape[key] = null\n          storeKeys.push(key)\n          storeValues.push(unit as Store<any>)\n        }\n      }\n      return [shape, storeKeys, storeValues, eventKeys, eventValues]\n    }, [\n      flagsRef,\n      scope,\n      ...Object.keys(normShape),\n      ...Object.values(normShape),\n    ])\n  const stateRef = React.useRef({\n    value: eventsShape,\n    storeKeys,\n    eventKeys,\n    eventValues,\n  })\n  const subscribe = React.useCallback(\n    (cb: () => void) => {\n      const flags = flagsRef.current\n      flags.justSubscribed = true\n      const cbCaller = () => {\n        if (!flags.stale) {\n          flags.stale = true\n          cb()\n        }\n      }\n      const batchStep = step.compute({priority: 'sampler', batch: true})\n      const subs = storeValues.map(store =>\n        createWatch(store, cbCaller, scope, batchStep),\n      )\n      return () => {\n        subs.forEach(fn => fn())\n      }\n    },\n    [storeValues, scope, stateRef, flagsRef],\n  )\n  const read = React.useCallback(() => {\n    const state = stateRef.current\n    const flags = flagsRef.current\n    let resultValue\n    let changed = false\n    const oldVal = state.value\n    const oldStoreKeys = state.storeKeys\n    const oldEventKeys = state.eventKeys\n    const oldEventValues = state.eventValues\n    const scopeChanged = scope !== flags.scope\n    if (flags.stale || flags.justSubscribed || scopeChanged) {\n      changed = !flags.justSubscribed || scopeChanged\n      resultValue = isList ? [...eventsShape] : {...eventsShape}\n      if (\n        oldStoreKeys.length !== storeKeys.length ||\n        oldEventKeys.length !== eventKeys.length\n      ) {\n        changed = true\n      }\n      for (let i = 0; i < storeKeys.length; i++) {\n        const updatedValue = stateReader(storeValues[i], scope)\n        const key = storeKeys[i]\n        if (!changed) {\n          if (!oldStoreKeys.includes(key)) {\n            changed = true\n          } else {\n            changed = oldVal[key] !== updatedValue\n          }\n        }\n        resultValue[key] = updatedValue\n      }\n      for (let i = 0; i < eventKeys.length; i++) {\n        const updatedValue = eventValues[i]\n        const key = eventKeys[i]\n        if (!changed) {\n          if (!oldEventKeys.includes(key)) {\n            changed = true\n          } else {\n            changed = oldEventValues[oldEventKeys.indexOf(key)] !== updatedValue\n          }\n        }\n      }\n    }\n    if (changed) {\n      state.value = resultValue\n    }\n    state.storeKeys = storeKeys\n    state.eventKeys = eventKeys\n    state.eventValues = eventValues\n    flags.stale = false\n    flags.justSubscribed = !changed\n    flags.scope = scope\n    return isSingleUnit ? state.value.unit : state.value\n  }, [subscribe, storeValues, eventValues, scope, stateRef, flagsRef])\n  return useSyncExternalStore(subscribe, read, read)\n}\n\nexport function useStoreMapBase<State, Result, Keys extends ReadonlyArray<any>>(\n  [configOrStore, separateFn]: [\n    configOrStore:\n      | {\n          store: Store<State>\n          keys: Keys\n          fn(state: State, keys: Keys): Result\n          updateFilter?: (update: Result, current: Result) => boolean\n          defaultValue?: Result\n        }\n      | Store<State>,\n    separateFn?: (state: State, keys: Keys) => Result,\n  ],\n  scope?: Scope,\n): Result {\n  let fn: (state: State, keys: Keys) => Result\n  let updateFilter: (update: Result, current: Result) => boolean =\n    basicUpdateFilter\n  let defaultValue: Result | undefined\n  let store: Store<State>\n  let keys: Keys\n  if (separateFn) {\n    fn = separateFn\n    store = configOrStore as Store<State>\n    keys = [] as unknown as Keys\n  } else {\n    ;({\n      fn,\n      store,\n      keys,\n      defaultValue,\n      updateFilter = basicUpdateFilter,\n    } = configOrStore as any)\n  }\n  if (!is.store(store)) throwError('useStoreMap expects a store')\n  if (!Array.isArray(keys)) throwError('useStoreMap expects an array as keys')\n  if (typeof fn !== 'function') throwError('useStoreMap expects a function')\n\n  const subscribe = React.useCallback(\n    (cb: () => void) => createWatch(store, cb, scope),\n    [store, scope],\n  )\n  const read = React.useCallback(\n    () => stateReader(store, scope),\n    [store, scope],\n  )\n\n  const stateRef = React.useRef<State>()\n  const valueRef = React.useRef<Result>()\n  const keysRef = React.useRef(keys)\n\n  const value = useSyncExternalStoreWithSelector(\n    subscribe,\n    read,\n    read,\n    state => {\n      if (stateRef.current !== state || !keysEqual(keysRef.current, keys)) {\n        let result = fn(state, keys)\n        if (result === undefined && defaultValue !== undefined) {\n          result = defaultValue\n        }\n        stateRef.current = state\n        keysRef.current = keys\n\n        /**\n         * skip update, if undefined\n         * just like original store or previous implementation\n         */\n        if (result !== undefined) {\n          valueRef.current = result\n        }\n      }\n\n      return valueRef.current as Result\n    },\n    (current, update) => !updateFilter(update, current),\n  )\n\n  return value\n}\nexport function useListBase<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n        placeholder?: React.ReactNode\n      }\n    | ((item: T, index: number) => React.ReactNode),\n  scope?: Scope,\n): React.ReactNode {\n  let keys = [] as any[]\n  let fn\n  let getKey: ((item: T) => string) | void\n  let placeholder: React.ReactNode | void\n  if (typeof renderItem === 'object' && renderItem !== null) {\n    if (renderItem.keys) keys = renderItem.keys\n    ;({fn, getKey, placeholder} = renderItem)\n  } else {\n    fn = renderItem\n  }\n  if (!is.store(list)) throwError('expect useList first argument to be a store')\n  if (typeof fn !== 'function')\n    throwError(\"expect useList's renderItem to be a function\")\n  if (!Array.isArray(keys)) throwError(\"expect useList's keys to be an array\")\n  const Item = React.useMemo(() => {\n    const Item = withDisplayName(\n      `${list.shortName || 'Unknown'}.Item`,\n      (\n        props:\n          | {index: number; keys: any[]; keyVal: never; value: never}\n          | {index: never; keys: any[]; keyVal: string; value: T},\n      ) => {\n        const {index, keys, keyVal, value} = props\n        const isKeyed = !!fnRef.current[1]\n        if (isKeyed) {\n          return fnRef.current[0](value, keyVal as any)\n        }\n        const item = useStoreMapBase(\n          [\n            {\n              store: list,\n              keys: [index, ...keys],\n              fn: (list, keys) => list[keys[0]],\n            },\n          ],\n          scope,\n        )\n        return fnRef.current[0](item, index)\n      },\n    )\n    return React.memo(Item)\n  }, [list, scope, !!getKey!])\n  const fnRef = React.useRef([fn, getKey!] as const)\n  fnRef.current = [fn, getKey!]\n  const keysSelfMemo = React.useMemo(() => keys, keys)\n  if (getKey!) {\n    const listItems = useStoreBase(list, scope)\n    if (listItems.length === 0 && placeholder) return placeholder\n    return listItems.map(value => {\n      const key = fnRef.current[1](value)\n      return React.createElement(Item, {\n        keyVal: key,\n        key,\n        keys: keysSelfMemo,\n        value,\n      })\n    })\n  } else {\n    const length = useStoreMapBase(\n      [\n        {\n          store: list,\n          keys: [list],\n          fn: list => list.length,\n        },\n      ],\n      scope,\n    )\n    if (length === 0 && placeholder) return placeholder\n    return Array.from({length}, (_, i) =>\n      React.createElement(Item, {\n        index: i,\n        key: i,\n        keys: keysSelfMemo,\n      }),\n    )\n  }\n}\n\nexport function useEventBase(eventObject: any, scope?: Scope) {\n  if (!scope) {\n    return eventObject\n  }\n  const isShape = !is.unit(eventObject) && typeof eventObject === 'object'\n  const events = isShape ? eventObject : {event: eventObject}\n\n  return React.useMemo(() => {\n    if (is.unit(eventObject)) {\n      //@ts-expect-error\n      return scopeBind(eventObject, {scope})\n    }\n    const shape = Array.isArray(eventObject) ? [] : ({} as any)\n    for (const key in eventObject) {\n      shape[key] = scopeBind(eventObject[key], {scope})\n    }\n    return shape\n  }, [scope, ...Object.keys(events), ...Object.values(events)])\n}\n\nexport function useGateBase<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n  scope?: Scope,\n) {\n  const {open, close, set} = useUnitBase(\n    {\n      open: GateComponent.open,\n      close: GateComponent.close,\n      set: GateComponent.set,\n    },\n    scope,\n  )\n  const ForkedGate = React.useMemo(\n    () =>\n      ({\n        open,\n        close,\n        set,\n      } as Gate<Props>),\n    [GateComponent, open],\n  )\n\n  const propsRef = React.useRef<{value: any; count: number}>({\n    value: null,\n    count: 0,\n  })\n  useIsomorphicLayoutEffect(() => {\n    ForkedGate.open(propsRef.current.value)\n    return () => ForkedGate.close(propsRef.current.value) as any\n  }, [ForkedGate])\n  if (!shallowCompare(propsRef.current.value, props)) {\n    propsRef.current.value = props\n    propsRef.current.count += 1\n  }\n  useIsomorphicLayoutEffect(() => {\n    ForkedGate.set(propsRef.current.value)\n  }, [propsRef.current.count])\n}\n\nfunction shallowCompare(a: any, b: any) {\n  if (a === b) return true\n  if (\n    typeof a === 'object' &&\n    a !== null &&\n    typeof b === 'object' &&\n    b !== null\n  ) {\n    const aKeys = Object.keys(a)\n    const bKeys = Object.keys(b)\n    if (aKeys.length !== bKeys.length) return false\n    for (let i = 0; i < aKeys.length; i++) {\n      const key = aKeys[i]\n      if (a[key] !== b[key]) return false\n    }\n    return true\n  }\n  return false\n}\n","import React from 'react'\nimport {Scope} from 'effector'\nimport {throwError} from './throw'\n\nconst ScopeContext = React.createContext(null as Scope | null)\nexport const {Provider} = ScopeContext\nexport function getScope(forceScope?: boolean) {\n  const scope = React.useContext(ScopeContext)\n  if (forceScope && !scope)\n    throwError('No scope found, consider adding <Provider> to app root')\n  return scope as Scope\n}\n","import {Event, Store} from 'effector'\nimport {\n  useStoreBase,\n  useStoreMapBase,\n  useListBase,\n  useUnitBase,\n  useEventBase,\n  useGateBase,\n} from './apiBase'\nimport {getScope} from './scope'\nimport type {Gate} from './index.h'\n\n/**\nbind event to scope\n\nworks like React.useCallback, but for scopes\n*/\nexport function useEvent<T>(\n  event: Event<T>,\n  opts?: {forceScope?: boolean},\n): (payload: T) => T {\n  const scope = getScope(opts?.forceScope)\n\n  return useEventBase(event, scope)\n}\n\nexport function useStore<State>(\n  store: Store<State>,\n  opts?: {forceScope?: boolean},\n): State {\n  return useStoreBase(store, getScope(opts?.forceScope))\n}\n\nexport function useUnit(shape, opts?: {forceScope?: boolean}) {\n  return useUnitBase(shape, getScope(opts?.forceScope))\n}\n\nexport function useStoreMap<State, Result, Keys extends ReadonlyArray<any>>(\n  configOrStore:\n    | {\n        store: Store<State>\n        keys: Keys\n        fn(state: State, keys: Keys): Result\n        updateFilter?: (update: Result, current: Result) => boolean\n        defaultValue?: Result\n        forceScope?: boolean\n      }\n    | Store<State>,\n  separateFn?: (state: State, keys: Keys) => Result,\n): Result {\n  return useStoreMapBase(\n    [configOrStore, separateFn],\n    getScope(configOrStore?.forceScope),\n  )\n}\n\nexport function useList<T>(\n  list: Store<T[]>,\n  renderItem:\n    | {\n        keys?: any[]\n        fn(item: T, index: number): React.ReactNode\n        getKey?: (item: T) => string\n        placeholder?: React.ReactNode\n      }\n    | ((item: T, index: number) => React.ReactNode),\n  opts?: {forceScope?: boolean},\n): React.ReactNode {\n  return useListBase(list, renderItem, getScope(opts?.forceScope))\n}\n\nexport function useGate<Props>(\n  GateComponent: Gate<Props>,\n  props: Props = {} as any,\n  opts?: {forceScope?: boolean},\n) {\n  return useGateBase(GateComponent, props, getScope(opts?.forceScope))\n}\n","export const throwError = (message: string) => {\n  throw Error(message)\n}\n","import React from 'react'\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n","export function forIn<T, Key extends string = string>(\n  obj: Record<Key, T>,\n  cb: (value: T, key: Key) => void,\n) {\n  for (const key in obj) {\n    cb(obj[key], key)\n  }\n}\n\nexport const includes = <T>(list: T[], item: T) => list.includes(item)\n\nexport const removeItem = <T>(list: T[], item: T) => {\n  const pos = list.indexOf(item)\n  if (pos !== -1) {\n    list.splice(pos, 1)\n  }\n}\n\nexport const add = <T>(list: T[], item: T) => list.push(item)\n\nexport function forEach<T>(\n  list: T[],\n  fn: (item: T, index: number, list: T[]) => void,\n): void\nexport function forEach<K, T>(\n  list: Map<K, T>,\n  fn: (item: T, key: K) => void,\n): void\nexport function forEach<T>(list: Set<T>, fn: (item: T) => void): void\nexport function forEach(list: any, fn: Function) {\n  list.forEach(fn)\n}\n","export function assert(condition: unknown, message: string): asserts condition {\n  if (!condition) throw Error(message)\n}\n\nexport const deprecate = (\n  condition: unknown,\n  subject: string,\n  suggestion?: string,\n) =>\n  !condition &&\n  console.error(\n    `${subject} is deprecated${\n      suggestion ? `, use ${suggestion} instead` : ''\n    }`,\n  )\n","import type {Node, NodeUnit, Cmd} from './index.h'\nimport {getGraph, getOwners, getLinks, getValue} from './getter'\nimport {nextNodeID} from './id'\nimport {CROSSLINK} from './tag'\nimport {regionStack} from './region'\nimport {own} from './own'\nimport {add, forEach} from './collection'\n\nexport const arrifyNodes = (\n  list: NodeUnit | Array<NodeUnit | NodeUnit[]> = [],\n): Node[] => (Array.isArray(list) ? list : [list]).flat().map(getGraph)\n\nexport function createNode({\n  node = [],\n  from,\n  source,\n  parent = from || source,\n  to,\n  target,\n  child = to || target,\n  scope = {},\n  meta = {},\n  family: familyRaw = {type: 'regular'},\n  regional,\n}: {\n  node?: Array<Cmd | false | void | null>\n  from?: NodeUnit | NodeUnit[]\n  source?: NodeUnit | NodeUnit[]\n  parent?: NodeUnit | NodeUnit[]\n  to?: NodeUnit | NodeUnit[]\n  target?: NodeUnit | NodeUnit[]\n  child?: NodeUnit | NodeUnit[]\n  scope?: {[name: string]: any}\n  meta?: {[name: string]: any}\n  family?: {\n    type?: 'regular' | 'crosslink' | 'domain'\n    links?: NodeUnit | NodeUnit[]\n    owners?: NodeUnit | Array<NodeUnit | NodeUnit[]>\n  }\n  regional?: boolean\n} = {}): Node {\n  const sources = arrifyNodes(parent)\n  const links = arrifyNodes(familyRaw.links)\n  const owners = arrifyNodes(familyRaw.owners)\n  const seq: Cmd[] = []\n  forEach(node, item => item && add(seq, item))\n  const result: Node = {\n    id: nextNodeID(),\n    seq,\n    next: arrifyNodes(child),\n    meta,\n    scope,\n    family: {\n      type: familyRaw.type || CROSSLINK,\n      links,\n      owners,\n    },\n  }\n  forEach(links, link => add(getOwners(link), result))\n  forEach(owners, owner => add(getLinks(owner), result))\n  forEach(sources, source => add(source.next, result))\n  if (regional && regionStack) {\n    own(getValue(regionStack), [result])\n  }\n  return result\n}\n","export const STORE = 'store'\nexport const EVENT = 'event'\nexport const EFFECT = 'effect'\nexport const DOMAIN = 'domain'\nexport const SCOPE = 'scope'\nexport const SAMPLER = 'sampler'\nexport const CROSSLINK = 'crosslink'\nexport const MAP = 'map'\nexport const STACK = 'stack'\nexport const BARRIER = 'barrier'\nexport const VALUE = 'value'\nexport const SAMPLE = 'sample'\nexport const FILTER = 'filter'\nexport const REG_A = 'a'\n","import type {Leaf} from '../forest/index.h'\n\nimport type {Node, NodeUnit, StateRef, Stack} from './index.h'\nimport {readRef} from './stateRef'\nimport {getForkPage, getGraph, getMeta, getParent, getValue} from './getter'\nimport {STORE, EFFECT, SAMPLER, STACK, BARRIER, VALUE, REG_A, MAP} from './tag'\nimport type {Scope} from './unit.h'\nimport {add, forEach} from './collection'\n\n/** Names of priority groups */\ntype PriorityTag = 'child' | 'pure' | 'read' | 'barrier' | 'sampler' | 'effect'\n\nexport type BarrierPriorityTag = 'read' | 'barrier' | 'sampler' | 'effect'\n\n/**\n * Position in the current branch,\n * including call stack, priority type\n * and index of next step in the executed Node\n */\ntype Layer = {\n  idx: number\n  stack: Stack\n  type: PriorityTag\n  id: number\n}\n\n/** Queue as linked list or skew heap */\ntype QueueItem = {\n  /** node value */\n  v: Layer\n  /** left node. always null in queue but used in skew heap */\n  l: QueueItem | null\n  /** right node */\n  r: QueueItem | null\n}\ntype QueueBucket = {\n  first: QueueItem | null\n  last: QueueItem | null\n  size: number\n}\n\n/** Dedicated local metadata */\ntype Local = {\n  fail: boolean\n  failReason?: unknown\n  scope: {[key: string]: any}\n}\n\nlet heap: QueueItem | null = null\n\nconst merge = (a: QueueItem | null, b: QueueItem | null): QueueItem | null => {\n  if (!a) return b\n  if (!b) return a\n\n  let ret\n  if (\n    /**\n     * if both nodes has the same PriorityType\n     * and first node is created after second one\n     */\n    (a.v.type === b.v.type && a.v.id > b.v.id) ||\n    /**\n     * greater priority mean bucket of first node is executed later\n     * e.g  a: \"sampler\", b: \"barrier\"\n     */\n    getPriority(a.v.type) > getPriority(b.v.type)\n  ) {\n    ret = a\n    a = b\n    b = ret\n  }\n  ret = merge(a.r, b)\n  a.r = a.l\n  a.l = ret\n\n  return a\n}\n\n/** queue buckets for each PriorityType */\nconst queue: QueueBucket[] = []\nlet ix = 0\nwhile (ix < 6) {\n  /**\n   * although \"sampler\" and \"barrier\" are using heap instead of linked list,\n   * their buckets are still useful: they maintains size of heap queue\n   */\n  add(queue, {first: null, last: null, size: 0})\n  ix += 1\n}\n\nconst deleteMin = () => {\n  for (let i = 0; i < 6; i++) {\n    const list = queue[i]\n    if (list.size > 0) {\n      /**\n       * bucket 3 is for \"barrier\" PriorityType (used in combine)\n       * bucket 4 is for \"sampler\" PriorityType (used in sample and guard)\n       */\n      if (i === 3 || i === 4) {\n        list.size -= 1\n        const value = heap!.v\n        heap = merge(heap!.l, heap!.r)\n        return value\n      }\n      if (list.size === 1) {\n        list.last = null\n      }\n      const item = list.first\n      list.first = item!.r\n      list.size -= 1\n      return item!.v\n    }\n  }\n}\nconst pushFirstHeapItem = (\n  type: PriorityTag,\n  page: Leaf | null,\n  node: Node,\n  parent: Stack | null,\n  value: any,\n  scope?: Scope | null | void,\n  meta?: Record<string, any> | void,\n) =>\n  pushHeap(\n    0,\n    {\n      a: null,\n      b: null,\n      node,\n      parent,\n      value,\n      page,\n      scope,\n      meta,\n    },\n    type,\n  )\nconst pushHeap = (\n  idx: number,\n  stack: Stack,\n  type: PriorityTag,\n  id: number = 0,\n) => {\n  const priority = getPriority(type)\n  const bucket: QueueBucket = queue[priority]\n  const item: QueueItem = {\n    v: {\n      idx,\n      stack,\n      type,\n      id,\n    },\n    l: null,\n    r: null,\n  }\n  /**\n   * bucket 3 is for \"barrier\" PriorityType (used in combine)\n   * bucket 4 is for \"sampler\" PriorityType (used in sample and guard)\n   */\n  if (priority === 3 || priority === 4) {\n    heap = merge(heap, item)\n  } else {\n    if (bucket.size === 0) {\n      bucket.first = item\n    } else {\n      bucket.last!.r = item\n    }\n    bucket.last = item\n  }\n  bucket.size += 1\n}\n\nconst getPriority = (t: PriorityTag) => {\n  switch (t) {\n    case 'child':\n      return 0\n    case 'pure':\n      return 1\n    case 'read':\n      return 2\n    case BARRIER:\n      return 3\n    case SAMPLER:\n      return 4\n    case EFFECT:\n      return 5\n    default:\n      return -1\n  }\n}\n\nconst barriers = new Set<string | number>()\n\nlet isRoot = true\nexport let isWatch = false\nexport let isPure = false\nexport let currentPage: Leaf | null = null\nexport let forkPage: Scope | void | null\nexport const setForkPage = (newForkPage: Scope | void | null) => {\n  forkPage = newForkPage\n}\nexport const setCurrentPage = (newPage: Leaf | null) => {\n  currentPage = newPage\n}\n\nconst getPageForRef = (page: Leaf | null, id: string) => {\n  if (page) {\n    while (page && !page.reg[id]) {\n      page = getParent(page)\n    }\n    if (page) return page\n  }\n  return null\n}\nexport const getPageRef = (\n  page: Leaf | null,\n  forkPage: Scope | null | void,\n  node: Node | null,\n  ref: StateRef,\n  isGetState?: boolean,\n) => {\n  const pageForRef = getPageForRef(page, ref.id)\n  if (pageForRef) return pageForRef.reg[ref.id]\n  if (forkPage) {\n    initRefInScope(forkPage!, ref, isGetState)\n    return forkPage.reg[ref.id]\n  }\n  return ref\n}\n\n/** Introspection api internals */\ntype Inspector = (stack: Stack, local: Local) => void\nlet inspector: Inspector\nexport const setInspector = (newInspector: Inspector) => {\n  inspector = newInspector\n}\n\nexport function launch(config: {\n  target: NodeUnit | NodeUnit[]\n  params?: any\n  defer?: boolean\n  page?: Leaf | void | null\n  scope?: Scope | void | null\n  stack?: Stack | void\n  meta?: Record<string, any> | void\n}): void\nexport function launch(unit: NodeUnit, payload?: any, upsert?: boolean): void\nexport function launch(unit: any, payload?: any, upsert?: boolean) {\n  let pageForLaunch = currentPage\n  let stackForLaunch = null\n  let forkPageForLaunch = forkPage\n  let meta: Record<string, any> | void\n  if (unit.target) {\n    payload = unit.params\n    upsert = unit.defer\n    meta = unit.meta\n    pageForLaunch = 'page' in unit ? unit.page : pageForLaunch\n    if (unit[STACK]) stackForLaunch = unit[STACK]\n    forkPageForLaunch = getForkPage(unit) || forkPageForLaunch\n    unit = unit.target\n  }\n  if (forkPageForLaunch && forkPage && forkPageForLaunch !== forkPage) {\n    forkPage = null\n  }\n  if (Array.isArray(unit)) {\n    for (let i = 0; i < unit.length; i++) {\n      pushFirstHeapItem(\n        'pure',\n        pageForLaunch,\n        getGraph(unit[i]),\n        stackForLaunch,\n        payload[i],\n        forkPageForLaunch,\n        meta,\n      )\n    }\n  } else {\n    pushFirstHeapItem(\n      'pure',\n      pageForLaunch,\n      getGraph(unit),\n      stackForLaunch,\n      payload,\n      forkPageForLaunch,\n      meta,\n    )\n  }\n  if (upsert && !isRoot) return\n  /** main execution code */\n  const lastStartedState = {\n    isRoot,\n    currentPage,\n    scope: forkPage,\n    isWatch,\n    isPure,\n  }\n  isRoot = false\n  let stop: boolean\n  let skip: boolean\n  let node: Node\n  let value: Layer | undefined\n  let page: Leaf | null\n  let reg: Record<string, StateRef> | void\n  kernelLoop: while ((value = deleteMin())) {\n    const {idx, stack, type} = value\n    node = stack.node\n    currentPage = page = stack.page\n    forkPage = getForkPage(stack)\n    if (page) reg = page.reg\n    else if (forkPage) reg = forkPage.reg\n    // reg = (page ? page : forkPage ? forkPage : node).reg\n    const hasPageReg = !!page\n    const hasScopeReg = !!forkPage\n    const local: Local = {\n      fail: false,\n      scope: node.scope,\n    }\n    stop = skip = false\n    for (let stepn = idx; stepn < node.seq.length && !stop; stepn++) {\n      const step = node.seq[stepn]\n      if (step.order) {\n        const {priority, barrierID} = step.order\n        const id = barrierID\n          ? page\n            ? `${page.fullID}_${barrierID}`\n            : barrierID\n          : 0\n        if (stepn !== idx || type !== priority) {\n          if (barrierID) {\n            if (!barriers.has(id)) {\n              barriers.add(id)\n              pushHeap(stepn, stack, priority, barrierID)\n            }\n          } else {\n            pushHeap(stepn, stack, priority)\n          }\n          continue kernelLoop\n        }\n        barrierID && barriers.delete(id)\n      }\n      switch (step.type) {\n        case 'mov': {\n          const data = step.data\n          let value\n          //prettier-ignore\n          switch (data.from) {\n            case STACK: value = getValue(stack); break\n            case REG_A: /** fall-through case */\n            case 'b':\n              value = stack[data.from]\n              break\n            case VALUE: value = data.store; break\n            case STORE:\n              if (reg && !reg[data.store.id]) {\n                // if (!page.parent) {\n                if (hasPageReg) {\n                  const pageForRef = getPageForRef(page, data.store.id)\n                  stack.page = page = pageForRef\n                  if (pageForRef) {\n                    reg = pageForRef.reg\n                  } else if (hasScopeReg) {\n                    initRefInScope(forkPage!, data.store, false, true, data.softRead)\n                    reg = forkPage!.reg\n                  } else {\n                    reg = undefined //node.reg\n                  }\n                } else if (hasScopeReg) {\n                  /** StateRef in Scope.reg created only when needed */\n                  initRefInScope(forkPage!, data.store, false, true, data.softRead)\n                } else {\n                  // console.error('should not happen')\n                  /** StateRef should exists at least in Node itself, but it is not found */\n                }\n                // }\n              }\n              // value = getPageRef(page, forkPage, node, data.store.id).current\n              value = readRef(reg ? reg[data.store.id] || data.store : data.store)\n              break\n          }\n          //prettier-ignore\n          switch (data.to) {\n            case STACK: stack.value = value; break\n            case REG_A: /** fall-through case */\n            case 'b':\n              stack[data.to] = value\n              break\n            case STORE:\n              getPageRef(page, forkPage, node, data.target).current = value\n              break\n          }\n          break\n        }\n        case 'compute':\n          const data = step.data\n          if (data.fn) {\n            isWatch = getMeta(node, 'op') === 'watch'\n            isPure = data.pure\n            const computationResult = data.safe\n              ? (0 as any, data.fn)(getValue(stack), local.scope, stack)\n              : tryRun(local, data.fn, stack)\n            if (data.filter) {\n              /**\n               * handled edge case: if step.fn will throw,\n               * tryRun will return null\n               * thereby forcing that branch to stop\n               */\n              skip = !computationResult\n            } else {\n              stack.value = computationResult\n            }\n            isWatch = lastStartedState.isWatch\n            isPure = lastStartedState.isPure\n          }\n          break\n      }\n      stop = local.fail || skip\n    }\n    if (inspector) {\n      inspector(stack, local)\n    }\n    if (!stop) {\n      const finalValue = getValue(stack)\n      const forkPage = getForkPage(stack)\n      forEach(node.next, nextNode => {\n        pushFirstHeapItem('child', page, nextNode, stack, finalValue, forkPage)\n      })\n      if (forkPage) {\n        if (getMeta(node, 'needFxCounter'))\n          pushFirstHeapItem(\n            'child',\n            page,\n            forkPage.fxCount,\n            stack,\n            finalValue,\n            forkPage,\n          )\n        if (getMeta(node, 'storeChange'))\n          pushFirstHeapItem(\n            'child',\n            page,\n            forkPage.storeChange,\n            stack,\n            finalValue,\n            forkPage,\n          )\n        if (getMeta(node, 'warnSerialize'))\n          pushFirstHeapItem(\n            'child',\n            page,\n            forkPage.warnSerializeNode,\n            stack,\n            finalValue,\n            forkPage,\n          )\n        const additionalLinks = forkPage.additionalLinks[node.id]\n        if (additionalLinks) {\n          forEach(additionalLinks, nextNode => {\n            pushFirstHeapItem(\n              'child',\n              page,\n              nextNode,\n              stack,\n              finalValue,\n              forkPage,\n            )\n          })\n        }\n      }\n    }\n  }\n  isRoot = lastStartedState.isRoot\n  currentPage = lastStartedState.currentPage\n  forkPage = getForkPage(lastStartedState)\n}\n\nconst noopParser = (x: any) => x\n\nexport const initRefInScope = (\n  scope: Scope,\n  sourceRef: StateRef,\n  isGetState?: boolean,\n  isKernelCall?: boolean,\n  softRead?: boolean,\n) => {\n  const refsMap = scope.reg\n  if (refsMap[sourceRef.id]) return\n  const sid = sourceRef.sid\n  const serialize = sourceRef?.meta?.serialize\n  const parser =\n    scope.fromSerialize && serialize !== 'ignore'\n      ? serialize?.read || noopParser\n      : noopParser\n  const ref: StateRef = {\n    id: sourceRef.id,\n    current: sourceRef.current,\n    meta: sourceRef.meta,\n  }\n\n  if (ref.id in scope.values.idMap) {\n    ref.current = scope.values.idMap[ref.id]\n  } else if (sid && sid in scope.values.sidMap && !(sid in scope.sidIdMap)) {\n    ref.current = parser(scope.values.sidMap[sid])\n  } else {\n    if (sourceRef.before && !softRead) {\n      let isFresh = false\n      const needToAssign = isGetState || !sourceRef.noInit || isKernelCall\n      forEach(sourceRef.before, cmd => {\n        switch (cmd.type) {\n          case MAP: {\n            const from = cmd.from\n            if (from || cmd.fn) {\n              if (from) initRefInScope(scope, from, isGetState, isKernelCall)\n              const value = from && refsMap[from.id].current\n              if (needToAssign) {\n                ref.current = cmd.fn ? cmd.fn(value) : value\n              }\n            }\n            break\n          }\n          case 'field': {\n            if (!isFresh) {\n              isFresh = true\n              if (Array.isArray(ref.current)) {\n                ref.current = [...ref.current]\n              } else {\n                ref.current = {...ref.current}\n              }\n            }\n            initRefInScope(scope, cmd.from, isGetState, isKernelCall)\n            if (needToAssign) {\n              const from = refsMap[cmd.from.id]\n              ref.current[cmd.field] = refsMap[from.id].current\n            }\n            break\n          }\n          // case 'closure':\n          //   break\n        }\n      })\n    }\n  }\n  if (sid) scope.sidIdMap[sid] = sourceRef.id\n  refsMap[sourceRef.id] = ref\n}\n\n/** try catch for external functions */\nconst tryRun = (local: Local, fn: Function, stack: Stack) => {\n  try {\n    return fn(getValue(stack), local.scope, stack)\n  } catch (err) {\n    console.error(err)\n    local.fail = true\n    local.failReason = err\n  }\n}\n","import type {Store, CommonUnit, Domain} from './unit.h'\nimport {is} from './is'\nimport {getParent, getCompositeName} from './getter'\nimport {forIn} from './collection'\n\nexport function unitObjectName(objOrArr: any, method: string = 'combine') {\n  let name = method + '('\n  let comma = ''\n  let i = 0\n  forIn(objOrArr, unit => {\n    /* inlined max object names constant */\n    if (i < 25) {\n      if (unit != null) {\n        name += comma\n        name += is.unit(unit)\n          ? getCompositeName(unit as CommonUnit | Domain).fullName\n          : (unit as any).toString()\n      }\n      i += 1\n      comma = ', '\n    }\n  })\n  return name + ')'\n}\n\nexport function setStoreName<State>(store: Store<State>, rawName: string) {\n  store.shortName = rawName\n  Object.assign(getCompositeName(store), createName(rawName, getParent(store)))\n}\n\nexport type CompositeName = {\n  shortName: string\n  fullName: string\n  path: string[]\n}\n\nexport function createName(name: string, parent?: Domain): CompositeName {\n  let path: string[]\n  let fullName\n  const shortName = name\n  if (!parent) {\n    path = name.length === 0 ? [] : [name]\n    fullName = name\n  } else {\n    const composite = getCompositeName(parent)\n    if (name.length === 0) {\n      path = composite.path\n      fullName = composite.fullName\n    } else {\n      path = composite.path.concat([name])\n      fullName =\n        composite.fullName.length === 0\n          ? name\n          : '' + composite.fullName + '/' + name\n    }\n  }\n  return {shortName, fullName, path}\n}\n","import {forIn} from './collection'\nimport {assertObject, isObject, isVoid} from './is'\n\nexport function processArgsToConfig(\n  arg: any,\n  singleArgument: true,\n): [any, any | void]\nexport function processArgsToConfig(args: any[]): [any[], any | void]\nexport function processArgsToConfig(\n  args: any[],\n  singleArgument?: boolean,\n): [any[], any | void] {\n  const rawConfig = singleArgument ? args : args[0]\n  assertObject(rawConfig)\n  let metadata = rawConfig.or\n  const childConfig = rawConfig.and\n  if (childConfig) {\n    const unwrappedNestedValue = singleArgument ? childConfig : childConfig[0]\n    /**\n     * if there is no \"and\" field then we reached the leaf of the tree\n     * and this is an original user-defined argument\n     *\n     * note that in this case we're returning all arguments, not the only one been unwrapped\n     **/\n    if (!isObject(unwrappedNestedValue) || !('and' in unwrappedNestedValue)) {\n      args = childConfig\n    } else {\n      //@ts-expect-error\n      const nested = processArgsToConfig(childConfig, singleArgument)\n\n      args = nested[0]\n      metadata = {...metadata, ...nested[1]}\n    }\n  }\n  return [args, metadata]\n}\n\n/**\nprocessed fields:\n\n'name',\n'sid',\n'loc',\n'handler',\n'updateFilter',\n'parent',\n'serialize',\n'named',\n'derived',\n*/\nexport const flattenConfig = (part: any, config: Record<string, any> = {}) => {\n  if (isObject(part)) {\n    flattenConfig(part.or, config)\n    forIn(part, (value, field) => {\n      if (!isVoid(value) && field !== 'or' && field !== 'and') {\n        config[field] = value\n      }\n    })\n    flattenConfig(part.and, config)\n  }\n  return config\n}\n","import {readTemplate} from './region'\nimport type {Template, TemplateHandlers} from '../forest/index.h'\n\nexport function applyTemplate<K extends keyof TemplateHandlers>(\n  method: K,\n  ...args: Parameters<TemplateHandlers[K]> extends [Template, ...infer Args]\n    ? Args\n    : never\n): ReturnType<TemplateHandlers[K]> | void {\n  const template = readTemplate()\n  if (template) {\n    const fn = template.handlers[method]\n    // @ts-expect-error\n    if (fn) return fn(template, ...args)\n  }\n}\n","import type {Template} from '../forest/index.h'\nimport type {Store, Event, CommonUnit, Effect, Domain} from './unit.h'\nimport type {Subscriber, Config, Cmd, Kind} from './index.h'\n\nimport {observableSymbol} from './observable'\n\nimport {\n  is,\n  isObject,\n  isFunction,\n  assertObject,\n  assertNodeSet,\n  isVoid,\n} from './is'\nimport {calc, mov, read, userFnCall} from './step'\nimport {createStateRef, readRef, addRefOp} from './stateRef'\nimport {nextUnitID} from './id'\nimport {callStackAReg, callARegStack, callStack} from './caller'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {\n  launch,\n  currentPage,\n  forkPage,\n  setCurrentPage,\n  initRefInScope,\n  isPure,\n} from './kernel'\n\nimport {createName} from './naming'\nimport {createLinkNode} from './forward'\nimport {watchUnit} from './watch'\nimport {createSubscription} from './subscription'\nimport {readTemplate, readSidRoot, reportDeclaration} from './region'\nimport {\n  getSubscribers,\n  getStoreState,\n  getGraph,\n  getParent,\n  setMeta,\n  getMeta,\n} from './getter'\nimport {assert, deprecate} from './throw'\nimport {DOMAIN, STORE, EVENT, MAP, FILTER, STACK, REG_A} from './tag'\nimport {applyTemplate} from './template'\nimport {forEach} from './collection'\nimport {flattenConfig} from './config'\n\nexport const applyParentHook = (\n  source: CommonUnit,\n  target: CommonUnit,\n  hookType: 'event' | 'effect' = EVENT,\n) => {\n  if (getParent(source)) getParent(source).hooks[hookType](target)\n}\n\nexport const initUnit = (kind: Kind, unit: any, rawConfig: any) => {\n  const config = flattenConfig(rawConfig)\n  const isDomain = kind === DOMAIN\n  const id = nextUnitID()\n  const {sid = null, named = null, domain = null, parent = domain} = config\n  const name = named ? named : config.name || (isDomain ? '' : id)\n  const compositeName = createName(name, parent)\n  const meta: Record<string, any> = {\n    op: (unit.kind = kind),\n    name: (unit.shortName = name),\n    sid: (unit.sid = readSidRoot(sid)),\n    named,\n    unitId: (unit.id = id),\n    serialize: config.serialize,\n    derived: config.derived,\n    config,\n  }\n  unit.parent = parent\n  unit.compositeName = compositeName\n  unit.defaultConfig = config\n  unit.thru = (fn: Function) => {\n    deprecate(false, 'thru', 'js pipe')\n    return fn(unit)\n  }\n  unit.getType = () => compositeName.fullName\n  if (!isDomain) {\n    unit.subscribe = (observer: Subscriber<any>) => {\n      assertObject(observer)\n      return unit.watch(\n        isFunction(observer)\n          ? observer\n          : (upd: any) => observer.next && observer.next(upd),\n      )\n    }\n    unit[observableSymbol] = () => unit\n    const template = readTemplate()\n    if (template) meta.nativeTemplate = template\n  }\n  return meta\n}\nexport const createNamedEvent = (named: string) => createEvent({named})\n\nconst deriveEvent = (\n  event: Event<any>,\n  op: 'map' | 'filterMap' | 'filter',\n  fn: Function,\n  node: Cmd[],\n) => {\n  let config\n  if (isObject(fn)) {\n    config = fn\n    fn = (fn as unknown as {fn: Function}).fn\n  }\n  const mapped = createEvent({\n    name: `${event.shortName} → *`,\n    derived: true,\n    and: config,\n  })\n  createLinkNode(event, mapped, node, op, fn)\n  return mapped\n}\n\nfunction callCreate<T>(\n  unit: Event<T> | Effect<T, any, any>,\n  template: Template | null,\n  payload: T,\n  args: any[],\n) {\n  const oldPage = currentPage\n  let page = null\n  if (template) {\n    page = currentPage\n    while (page && page.template !== template) {\n      page = getParent(page)\n    }\n  }\n  setCurrentPage(page)\n  const result = unit.create(payload, args)\n  setCurrentPage(oldPage)\n  return result\n}\n\nexport function createEvent<Payload = any>(\n  nameOrConfig?: any,\n  maybeConfig?: any,\n): Event<Payload> {\n  const config = flattenConfig({\n    or: maybeConfig,\n    and: typeof nameOrConfig === 'string' ? {name: nameOrConfig} : nameOrConfig,\n  }) as any\n  const event = ((payload: Payload, ...args: unknown[]) => {\n    deprecate(\n      !getMeta(event, 'derived'),\n      'call of derived event',\n      'createEvent',\n    )\n    deprecate(!isPure, 'unit call from pure function', 'operators like sample')\n    if (currentPage) {\n      return callCreate(event, template, payload, args)\n    }\n    return event.create(payload, args)\n  }) as Event<Payload>\n  const template = readTemplate()\n  const finalEvent = Object.assign(event, {\n    graphite: createNode({\n      meta: initUnit(config.actualOp || EVENT, event, config),\n      regional: true,\n    }),\n    create(params: Payload, _: any[]) {\n      launch({target: event, params, scope: forkPage!})\n      return params\n    },\n    watch: (fn: (payload: Payload) => any) => watchUnit(event, fn),\n    map: (fn: Function) => deriveEvent(event, MAP, fn, [userFnCall()]),\n    filter: (fn: {fn: Function}) =>\n      //@ts-expect-error\n      deriveEvent(event, FILTER, fn.fn ? fn : fn.fn, [\n        userFnCall(callStack, true),\n      ]),\n    filterMap: (fn: Function) =>\n      deriveEvent(event, 'filterMap', fn, [\n        userFnCall(),\n        calc(value => !isVoid(value), true),\n      ]),\n    prepend(fn: Function) {\n      const contramapped: Event<any> = createEvent('* → ' + event.shortName, {\n        parent: getParent(event),\n      })\n      applyTemplate('eventPrepend', getGraph(contramapped))\n      createLinkNode(contramapped, event, [userFnCall()], 'prepend', fn)\n      applyParentHook(event, contramapped)\n      return contramapped\n    },\n  })\n  if (config?.domain) {\n    config.domain.hooks.event(finalEvent)\n  }\n  setMeta(finalEvent, 'id', finalEvent.graphite.id)\n  reportDeclaration(finalEvent.graphite)\n  return finalEvent\n}\nfunction on<State>(\n  store: Store<State>,\n  methodName: string,\n  nodeSet: CommonUnit | CommonUnit[],\n  fn: Function,\n) {\n  assertNodeSet(nodeSet, methodName, 'first argument')\n  assert(isFunction(fn), 'second argument should be a function')\n  deprecate(\n    !getMeta(store, 'derived'),\n    `${methodName} in derived store`,\n    `${methodName} in store created via createStore`,\n  )\n  forEach(Array.isArray(nodeSet) ? nodeSet : [nodeSet], trigger => {\n    store.off(trigger)\n    getSubscribers(store).set(\n      trigger,\n      createSubscription(updateStore(trigger, store, 'on', callARegStack, fn)),\n    )\n  })\n  return store\n}\nexport function createStore<State>(\n  defaultState: State,\n  props?: Config,\n): Store<State> {\n  const config = flattenConfig(props)\n  const plainState = createStateRef(defaultState)\n  const updates = createEvent({named: 'updates', derived: true})\n  applyTemplate('storeBase', plainState)\n  const plainStateId = plainState.id\n  const store = {\n    subscribers: new Map(),\n    updates,\n    defaultState,\n    stateRef: plainState,\n    getState() {\n      let targetRef = plainState\n      let reachedPage\n      if (currentPage) {\n        let page = currentPage\n        while (page && !page.reg[plainStateId]) {\n          page = getParent(page)\n        }\n        if (page) reachedPage = page\n      }\n      if (!reachedPage && forkPage) {\n        initRefInScope(forkPage, plainState, true)\n        reachedPage = forkPage\n      }\n      if (reachedPage) targetRef = reachedPage.reg[plainStateId]\n      return readRef(targetRef)\n    },\n    setState: (state: State) =>\n      launch({\n        target: store,\n        params: state,\n        defer: true,\n        scope: forkPage!,\n      }),\n    reset(...units: CommonUnit[]) {\n      forEach(units, unit =>\n        on(store, '.reset', unit, () => store.defaultState),\n      )\n      return store\n    },\n    on(nodeSet: CommonUnit | CommonUnit[], fn: Function) {\n      return on(store, '.on', nodeSet, fn)\n    },\n    off(unit: CommonUnit) {\n      const currentSubscription = getSubscribers(store).get(unit)\n      if (currentSubscription) {\n        currentSubscription()\n        getSubscribers(store).delete(unit)\n      }\n      return store\n    },\n    map(fn: (value: any, prevArg?: any) => any, firstState?: any) {\n      let config\n      if (isObject(fn)) {\n        config = fn\n        fn = (fn as unknown as {fn: (value: any) => any}).fn\n      }\n      deprecate(\n        isVoid(firstState),\n        'second argument of store.map',\n        'updateFilter',\n      )\n      let lastResult\n      const storeState = store.getState()\n      const template = readTemplate()\n      if (template) {\n        lastResult = null\n      } else if (!isVoid(storeState)) {\n        lastResult = fn(storeState, firstState)\n      }\n\n      const innerStore: Store<any> = createStore(lastResult, {\n        name: `${store.shortName} → *`,\n        derived: true,\n        // @ts-expect-error some mismatch in config types\n        and: config,\n      })\n      const linkNode = updateStore(store, innerStore, MAP, callStackAReg, fn)\n      addRefOp(getStoreState(innerStore), {\n        type: MAP,\n        fn,\n        from: plainState,\n      })\n      getStoreState(innerStore).noInit = true\n      applyTemplate('storeMap', plainState, linkNode)\n      return innerStore\n    },\n    watch(eventOrFn: any, fn?: Function) {\n      if (!fn || !is.unit(eventOrFn)) {\n        const subscription = watchUnit(store, eventOrFn)\n        if (!applyTemplate('storeWatch', plainState, eventOrFn)) {\n          eventOrFn(store.getState())\n        }\n        return subscription\n      }\n      assert(isFunction(fn), 'second argument should be a function')\n      return (eventOrFn as CommonUnit).watch((payload: any) =>\n        fn(store.getState(), payload),\n      )\n    },\n  } as unknown as Store<State>\n  const meta = initUnit(STORE, store, config)\n  const updateFilter = store.defaultConfig.updateFilter\n  store.graphite = createNode({\n    scope: {state: plainState, fn: updateFilter},\n    node: [\n      calc((upd, _, stack) => {\n        if (stack.scope && !stack.scope.reg[plainState.id]) {\n          stack.b = true\n        }\n        return upd\n      }),\n      read(plainState),\n      calc((upd, _, {a, b}) => !isVoid(upd) && (upd !== a || b), true),\n      updateFilter && userFnCall(callStackAReg, true),\n      mov({from: STACK, target: plainState}),\n    ],\n    child: updates,\n    meta: {\n      ...meta,\n      defaultState,\n    },\n    regional: true,\n  })\n  setMeta(store, 'id', store.graphite.id)\n  setMeta(store, 'rootStateRefId', plainStateId)\n  const serializeMeta = getMeta(store, 'serialize')\n  const derived = getMeta(store, 'derived')\n  const ignored = serializeMeta === 'ignore'\n  const sid: string | null = getMeta(store, 'sid')\n  if (sid) {\n    setMeta(store, 'storeChange', true)\n    plainState.sid = sid\n  }\n  if (!sid && !ignored && !derived) {\n    setMeta(store, 'warnSerialize', true)\n  }\n  assert(\n    derived || !isVoid(defaultState),\n    \"current state can't be undefined, use null instead\",\n  )\n  own(store, [updates])\n  if (config?.domain) {\n    config.domain.hooks.store(store)\n  }\n\n  if (!derived) {\n    store.reinit = createEvent<void>({\n      named: 'reinit',\n    })\n    store.reset(store.reinit)\n  }\n\n  plainState.meta = store.graphite.meta\n\n  reportDeclaration(store.graphite)\n\n  return store\n}\n\nconst updateStore = (\n  from: CommonUnit,\n  store: Store<any>,\n  op: string,\n  caller: typeof callStackAReg,\n  fn: Function,\n) => {\n  const storeRef = getStoreState(store)\n  const reader = mov({\n    store: storeRef,\n    to: REG_A,\n    priority: 'read',\n  })\n  if (op === MAP) reader.data.softRead = true\n  const node = [reader, userFnCall(caller)]\n  applyTemplate(\n    'storeOnMap',\n    storeRef,\n    node,\n    is.store(from) && getStoreState(from),\n  )\n  return createLinkNode(from, store, node, op, fn)\n}\n","import type {Store} from './unit.h'\nimport {createStore} from './createUnit'\nimport {createStateRef, addRefOp} from './stateRef'\nimport {mov, calc, read, userFnCall} from './step'\nimport {processArgsToConfig} from './config'\nimport {getStoreState, setMeta} from './getter'\nimport {is, isFunction, isObject, isVoid} from './is'\nimport {unitObjectName} from './naming'\nimport {createLinkNode} from './forward'\nimport {assert, deprecate} from './throw'\nimport {readTemplate} from './region'\nimport {forIn} from './collection'\nimport {BARRIER, MAP, REG_A, VALUE} from './tag'\nimport {applyTemplate} from './template'\nimport type {Config} from './index.h'\n\nexport function combine(...args: any[]): Store<any> {\n  let handler\n  let stores\n  let config\n  ;[args, config] = processArgsToConfig(args)\n  const rawHandler = args[args.length - 1]\n  if (isFunction(rawHandler)) {\n    stores = args.slice(0, -1)\n    handler = rawHandler\n  } else {\n    stores = args\n  }\n\n  let structStoreShape\n  let shapeReady\n  if (stores.length === 1) {\n    const obj = stores[0]\n    /*\n      without edge case combine(Color, (Color) => '~')\n      */\n    if (!is.store(obj)) {\n      /*\n      case combine([R,G,B], ([R,G,B]) => '~')\n      case combine({R,G,B}, ({R,G,B}) => '~')\n\n      edge case combine([Color], ([Color]) => '~')\n      edge case combine({Color}, ({Color}) => '~')\n\n      edge case combine([R,G,B])\n      edge case combine({R,G,B})\n\n      edge case combine([Color])\n      edge case combine({Color})\n      */\n      structStoreShape = obj\n      shapeReady = true\n    }\n  }\n  let noArraySpread: boolean | void\n  if (!shapeReady) {\n    /*\n    case combine(R,G,B, (R,G,B) => '~')\n    */\n    structStoreShape = stores\n    /*\n    without edge case combine(R,G,B)\n    without edge case combine(Color)\n    */\n    if (handler) {\n      noArraySpread = true\n      const fn = handler\n      handler = (list: any[]) => fn(...list)\n    }\n  }\n  assert(isObject(structStoreShape), 'shape should be an object')\n  return storeCombination(\n    Array.isArray(structStoreShape),\n    !noArraySpread,\n    structStoreShape,\n    config,\n    handler,\n  )\n}\n\nconst storeCombination = (\n  isArray: boolean,\n  needSpread: boolean,\n  obj: any,\n  config?: Config,\n  fn?: (upd: any) => any,\n) => {\n  const clone = isArray ? (list: any) => [...list] : (obj: any) => ({...obj})\n  const defaultState: Record<string, any> = isArray ? [] : {}\n\n  const stateNew = clone(defaultState)\n  const rawShape = createStateRef(stateNew)\n  const isFresh = createStateRef(true)\n  rawShape.type = isArray ? 'list' : 'shape'\n  rawShape.noInit = true\n  applyTemplate('combineBase', rawShape, isFresh)\n  const store = createStore(stateNew, {\n    name: unitObjectName(obj),\n    derived: true,\n    and: config,\n  })\n  const storeStateRef = getStoreState(store)\n  storeStateRef.noInit = true\n  setMeta(store, 'isCombine', true)\n  const rawShapeReader = read(rawShape)\n  /**\n   * usual ref reading has very high priority, which leads to data races\n   * ref reading for combine should have same \"barrier\" priority but without batching\n   * (thats why order has no \"barrierID\" field, which assume batching)\n   **/\n  rawShapeReader.order = {priority: 'barrier'}\n  /**\n   * Soft store reading is required for\n   * setting target store as inited in scope\n   * for preventing retriggering issues\n   **/\n  const softReader = mov({\n    store: storeStateRef,\n    to: 'b',\n    priority: 'read',\n  })\n  softReader.data.softRead = true\n  const node = [\n    calc((upd, _, stack) => {\n      if (stack.scope && !stack.scope.reg[rawShape.id]) {\n        stack.c = true\n      }\n      return upd\n    }),\n    rawShapeReader,\n    mov({store: isFresh, to: 'b'}),\n    calc((upd, {key}, reg) => {\n      if (reg.c || upd !== reg.a[key]) {\n        if (needSpread && reg.b) {\n          reg.a = clone(reg.a)\n        }\n        reg.a[key] = upd\n        return true\n      }\n    }, true),\n    mov({from: REG_A, target: rawShape}),\n    mov({from: VALUE, store: false, target: isFresh}),\n    mov({\n      from: VALUE,\n      store: true,\n      target: isFresh,\n      priority: BARRIER,\n      batch: true,\n    }),\n    read(rawShape, true),\n    fn && userFnCall(),\n    softReader,\n  ]\n  forIn(obj, (child: Store<any> | any, key) => {\n    if (!is.store(child)) {\n      assert(\n        !is.unit(child) && !isVoid(child),\n        `combine expects a store in a field ${key}`,\n      )\n      stateNew[key] = defaultState[key] = child\n      return\n    }\n    defaultState[key] = child.defaultState\n    stateNew[key] = child.getState()\n    const linkNode = createLinkNode(child, store, node, 'combine', fn)\n    linkNode.scope.key = key\n    const childRef = getStoreState(child)\n    addRefOp(rawShape, {type: 'field', field: key, from: childRef})\n    applyTemplate('combineField', childRef, linkNode)\n  })\n\n  store.defaultShape = obj\n  addRefOp(storeStateRef, {\n    type: MAP,\n    from: rawShape,\n    fn,\n  })\n  if (!readTemplate()) {\n    store.defaultState = fn\n      ? (storeStateRef.current = fn(stateNew))\n      : defaultState\n  }\n  return store\n}\n\nexport function createStoreObject(...args: any[]) {\n  deprecate(false, 'createStoreObject', 'combine')\n  return combine(...args)\n}\n","import type {Defer} from './unit.h'\n\nexport function createDefer(): Defer {\n  const result = {} as Defer\n  result.req = new Promise((rs, rj) => {\n    result.rs = rs\n    result.rj = rj\n  })\n  result.req.catch(() => {})\n  return result\n}\n","import type {Store, Event, Effect} from './unit.h'\nimport {createEvent} from './createUnit'\nimport {createLinkNode} from './forward'\nimport {unitObjectName} from './naming'\nimport {assertNodeSet} from './is'\n\nexport function merge<T>(\n  units: Array<Event<T> | Store<T> | Effect<T, any, any>>,\n  config?: object,\n): Event<T> {\n  assertNodeSet(units, 'merge', 'first argument')\n  const result = createEvent({\n    name: unitObjectName(units, 'merge'),\n    derived: true,\n    and: config,\n  })\n  createLinkNode(units, result, [], 'merge')\n  return result\n}\n","import type {Cmd, StateRef} from './index.h'\nimport type {CommonUnit, DataCarrier} from './unit.h'\nimport {combine} from './combine'\nimport {mov, userFnCall, read, calc} from './step'\nimport {createStateRef, readRef} from './stateRef'\nimport {callStackAReg} from './caller'\nimport {processArgsToConfig} from './config'\nimport {getStoreState, getGraph} from './getter'\nimport {\n  assertNodeSet,\n  assertTarget,\n  is,\n  isObject,\n  isVoid,\n  isFunction,\n} from './is'\nimport {createStore} from './createUnit'\nimport {createEvent} from './createUnit'\nimport {createNode} from './createNode'\nimport {assert} from './throw'\nimport {forEach} from './collection'\nimport {SAMPLE, STACK, VALUE} from './tag'\nimport {merge} from './merge'\nimport {applyTemplate} from './template'\nimport {own} from './own'\nimport {createLinkNode} from './forward'\n\nconst sampleConfigFields = ['source', 'clock', 'target']\n\nconst fieldErrorMessage = (method: string, field: string) =>\n  method + `: ${field} should be defined`\n\nexport function validateSampleConfig(config: any, method: string) {\n  let atLeastOneFieldExists = false\n  forEach(sampleConfigFields, field => {\n    if (field in config) {\n      assert(config[field] != null, fieldErrorMessage(method, field))\n      atLeastOneFieldExists = true\n    }\n  })\n  return atLeastOneFieldExists\n}\n\nexport function sample(...args: any[]) {\n  let target\n  let name\n  let [[source, clock, fn], metadata] = processArgsToConfig(args)\n  let sid\n  let batched = true\n  let filter\n  /** config case */\n  if (\n    isVoid(clock) &&\n    isObject(source) &&\n    validateSampleConfig(source, SAMPLE)\n  ) {\n    clock = source.clock\n    fn = source.fn\n    batched = !source.greedy\n    filter = source.filter\n    /** optional target & name accepted only from config */\n    target = source.target\n    name = source.name\n    sid = source.sid\n    source = source.source\n  }\n  return createSampling(\n    SAMPLE,\n    clock,\n    source,\n    filter,\n    target,\n    fn,\n    name,\n    metadata,\n    batched,\n    true,\n    false,\n    sid,\n  )\n}\n\nexport const createSampling = (\n  method: string,\n  clock: DataCarrier | DataCarrier[] | void,\n  source: DataCarrier | Array<Store<any>> | Record<string, Store<any>> | void,\n  filter: any,\n  target: DataCarrier | DataCarrier[] | void,\n  fn: any,\n  name: string | undefined,\n  metadata: object | void,\n  batched: boolean,\n  targetMayBeStore: boolean,\n  filterRequired: boolean,\n  sid?: string | undefined,\n) => {\n  const isUpward = !!target\n  assert(\n    !isVoid(source) || !isVoid(clock),\n    fieldErrorMessage(method, 'either source or clock'),\n  )\n  let sourceIsClock = false\n  if (isVoid(source)) {\n    sourceIsClock = true\n  } else if (!is.unit(source)) {\n    source = combine(source)\n  }\n  if (isVoid(clock)) {\n    /** still undefined! */\n    clock = source\n  } else {\n    assertNodeSet(clock, method, 'clock')\n    if (Array.isArray(clock)) {\n      clock = merge(clock as CommonUnit[])\n    }\n  }\n  if (sourceIsClock) {\n    source = clock\n  }\n  // @ts-expect-error\n  if (!metadata && !name) name = source.shortName\n  let filterType: 'none' | 'unit' | 'fn' = 'none'\n  if (filterRequired || filter) {\n    if (is.unit(filter)) {\n      filterType = 'unit'\n    } else {\n      assert(isFunction(filter), '`filter` should be function or unit')\n      filterType = 'fn'\n    }\n  }\n  if (target) {\n    assertNodeSet(target, method, 'target')\n    assertTarget(method, target)\n  } else {\n    if (\n      filterType === 'none' &&\n      targetMayBeStore &&\n      is.store(source) &&\n      is.store(clock)\n    ) {\n      const initialState = fn\n        ? fn(readRef(getStoreState(source)), readRef(getStoreState(clock)))\n        : readRef(getStoreState(source))\n      // @ts-expect-error\n      target = createStore(initialState, {name, sid, or: metadata})\n    } else {\n      target = createEvent({name, derived: true, or: metadata})\n      applyTemplate('sampleTarget', getGraph(target))\n    }\n  }\n  // const targetTemplate =\n  //   isUpward && is.unit(target) && getGraph(target).meta.nativeTemplate\n  const clockState = createStateRef()\n  let filterNodes: Cmd[] = []\n  if (filterType === 'unit') {\n    const [filterRef, hasFilter] = syncSourceState(\n      filter as DataCarrier,\n      target,\n      // @ts-expect-error\n      clock,\n      clockState,\n      method,\n    )\n    filterNodes = [...readAndFilter(hasFilter), ...readAndFilter(filterRef)]\n  }\n  const [sourceRef, hasSource] = syncSourceState(\n    // @ts-expect-error\n    source,\n    target,\n    clock,\n    clockState,\n    method,\n  )\n  const jointNode = createLinkNode(\n    // @ts-expect-error\n    clock,\n    target,\n    [\n      applyTemplate('sampleSourceLoader'),\n      mov({from: STACK, target: clockState}),\n      ...readAndFilter(hasSource),\n      read(sourceRef, true, batched),\n      ...filterNodes,\n      read(clockState),\n      filterType === 'fn' && userFnCall((src, _, {a}) => filter(src, a), true),\n      fn && userFnCall(callStackAReg),\n      applyTemplate('sampleSourceUpward', isUpward),\n    ],\n    method,\n    fn,\n  )\n  // @ts-expect-error\n  own(source, [jointNode])\n  Object.assign(jointNode.meta, metadata, {joint: true})\n  return target\n}\n\nconst readAndFilter = (state: StateRef) => [\n  read(state),\n  calc((upd, scope, {a}) => a, true),\n]\n\nconst syncSourceState = (\n  source: DataCarrier,\n  target: DataCarrier | DataCarrier[],\n  clock: DataCarrier | DataCarrier[],\n  clockState: StateRef,\n  method: string,\n) => {\n  const isSourceStore = is.store(source)\n  const sourceRef = isSourceStore ? getStoreState(source) : createStateRef()\n  const hasSource = createStateRef(isSourceStore)\n  if (!isSourceStore) {\n    createNode({\n      parent: source,\n      node: [\n        mov({from: STACK, target: sourceRef}),\n        mov({from: VALUE, store: true, target: hasSource}),\n      ],\n      family: {owners: [source, target, clock], links: target},\n      meta: {op: method},\n      regional: true,\n    })\n  }\n  applyTemplate('sampleSource', hasSource, sourceRef, clockState)\n  return [sourceRef, hasSource] as const\n}\n","import {createDefer} from '../defer'\nimport {is} from '../is'\nimport {assert} from '../throw'\nimport {launch, forkPage} from '../kernel'\nimport type {Scope} from '../unit.h'\nimport type {Unit} from '../index.h'\n\n/** bind event to scope */\nexport function scopeBind(\n  unit: Unit,\n  {scope, safe}: {scope?: Scope; safe?: true} = {},\n) {\n  assert(\n    scope || forkPage || safe,\n    'scopeBind cannot be called outside of forked .watch',\n  )\n  const savedForkPage = scope || forkPage!\n  return is.effect(unit)\n    ? (params: any) => {\n        const req = createDefer()\n        launch({\n          target: unit,\n          params: {\n            params,\n            req,\n          },\n          scope: savedForkPage,\n        })\n        return req.req\n      }\n    : (params: any) => {\n        launch({target: unit, params, scope: savedForkPage})\n        return params\n      }\n}\n","export const observableSymbol =\n  (typeof Symbol !== 'undefined' && Symbol.observable) || '@@observable'\n","import type {Node, StateRef, NodeUnit} from './index.h'\nimport type {Scope, Store, CommonUnit, Domain} from './unit.h'\n\nexport const getGraph = (graph: NodeUnit): Node =>\n  (graph as {graphite: Node}).graphite || graph\nexport const getOwners = (node: Node) => node.family.owners\nexport const getLinks = (node: Node) => node.family.links\nexport const getStoreState = (store: Store<any>): StateRef => store.stateRef\nexport const getValue = (stack: any) => stack.value\nexport const getSubscribers = (store: Store<any>) => store.subscribers\nexport const getParent = (unit: any) => unit.parent\nexport const getForkPage = (val: any): Scope | void => val.scope\nexport const getMeta = (unit: NodeUnit, field: string) =>\n  getGraph(unit).meta[field]\nexport const setMeta = (unit: NodeUnit, field: string, value: unknown) =>\n  (getGraph(unit).meta[field] = value)\nexport const getCompositeName = (unit: CommonUnit | Domain) =>\n  unit.compositeName\n","import type {Kind, Unit} from './index.h'\nimport type {Domain, Effect, Event, Scope, Store} from './unit.h'\nimport {DOMAIN, STORE, EVENT, EFFECT, SCOPE} from './tag'\nimport {isObject, isFunction} from './is'\nimport {getMeta} from './getter'\n\nexport const unit = (obj: unknown): obj is Unit<any> =>\n  (isFunction(obj) || isObject(obj)) && 'kind' in obj\n\nconst is = (type: Kind) => (obj: unknown) => unit(obj) && obj.kind === type\n\nexport const store = is(STORE) as (value: unknown) => value is Store<unknown>\nexport const event = is(EVENT) as (value: unknown) => value is Event<unknown>\nexport const effect = is(EFFECT) as (\n  value: unknown,\n) => value is Effect<unknown, unknown, unknown>\nexport const domain = is(DOMAIN) as (value: unknown) => value is Domain\nexport const scope = is(SCOPE) as (value: unknown) => value is Scope\nexport const attached = (unit: unknown) =>\n  effect(unit) && getMeta(unit, 'attached') === true\n","const idCount = () => {\n  let id = 0\n  return () => `${++id}`\n}\n\nexport const nextUnitID = idCount()\nexport const nextStepID = idCount()\nexport const nextNodeID = idCount()\nexport const nextEffectID = idCount()\n","import type {Template} from '../forest/index.h'\nimport type {NodeUnit, Node, ID} from './index.h'\nimport {getParent, getGraph} from './getter'\nimport {createNode} from './createNode'\n\ntype DeclarationSourceReporter = (\n  node: Node | 'region',\n  regionStack: RegionStack | null,\n) => void\n\nlet reporter: DeclarationSourceReporter\n\nexport const setGraphInspector = (fn: DeclarationSourceReporter) => {\n  reporter = fn\n}\n\ntype RegionStack = {\n  id: ID\n  parent: RegionStack | null\n  value: any\n  template: Template | null\n  sidRoot?: string\n  meta:\n    | Record<string, unknown>\n    | {\n        type: 'factory'\n        sid?: string\n        name?: string\n        loc: unknown\n        method?: string\n      }\n}\n\nexport let regionStack: RegionStack | null = null\n\nexport const reportDeclaration = (node: Node | 'region') => {\n  if (reporter) {\n    reporter(node, regionStack)\n  }\n}\n\nexport const readTemplate = (): Template | null =>\n  regionStack && regionStack.template\nexport const readSidRoot = (sid?: string | null) => {\n  if (sid && regionStack && regionStack.sidRoot)\n    sid = `${regionStack.sidRoot}|${sid}`\n  return sid\n}\n\nexport function withRegion<T = void>(unit: NodeUnit, cb: () => T): T {\n  const meta = getGraph(unit).meta || {}\n\n  regionStack = {\n    id: getGraph(unit).id,\n    parent: regionStack,\n    value: unit,\n    template: meta.template || readTemplate(),\n    sidRoot: meta.sidRoot || (regionStack && regionStack.sidRoot),\n    meta: meta,\n  }\n  try {\n    return cb()\n  } finally {\n    reportDeclaration('region')\n    regionStack = getParent(regionStack)\n  }\n}\n\nexport const withFactory = ({\n  sid,\n  name,\n  loc,\n  method,\n  fn,\n}: {\n  sid: string\n  name?: string\n  loc?: any\n  method?: string\n  fn: () => any\n}) => {\n  const factoryRootNode = createNode({\n    meta: {sidRoot: readSidRoot(sid), sid, name, loc, method, type: 'factory'},\n  })\n\n  return withRegion(factoryRootNode, fn)\n}\n","import type {NodeUnit} from './index.h'\nimport {getGraph, getOwners, getLinks} from './getter'\nimport {DOMAIN, CROSSLINK} from './tag'\nimport {add, forEach} from './collection'\n\nexport const own = (ownerUnit: NodeUnit, links: NodeUnit[]) => {\n  const owner = getGraph(ownerUnit)\n  forEach(links, _link => {\n    const link = getGraph(_link)\n    if (owner.family.type !== DOMAIN) link.family.type = CROSSLINK\n    add(getOwners(link), owner)\n    add(getLinks(owner), link)\n  })\n}\n","export * as is from './validate'\nimport {forEach} from './collection'\nimport {assert, deprecate} from './throw'\nimport {arrifyNodes} from './createNode'\nimport type {NodeUnit} from './index.h'\nimport type {DataCarrier} from './unit.h'\nimport {getMeta} from './getter'\n\nexport const isObject = (value: unknown): value is Record<any, any> =>\n  typeof value === 'object' && value !== null\nexport const isFunction = (value: unknown): value is Function =>\n  typeof value === 'function'\n\nexport const isVoid = (value: unknown): value is void => value === undefined\n\nexport const assertObject = (value: unknown) =>\n  assert(\n    isObject(value) || isFunction(value),\n    'expect first argument be an object',\n  ) // or function\n\nconst assertNodeSetItem = (\n  value: unknown,\n  method: string,\n  valueName: string,\n  reason: string,\n): asserts value is DataCarrier =>\n  assert(\n    !(\n      (!isObject(value) && !isFunction(value)) ||\n      (!('family' in value) && !('graphite' in value))\n    ),\n    `${method}: expect ${valueName} to be a unit (store, event or effect)${reason}`,\n  )\n\nexport const assertNodeSet = (\n  value: unknown,\n  method: string,\n  valueName: string,\n) => {\n  if (Array.isArray(value)) {\n    forEach(value, (item, i) =>\n      assertNodeSetItem(item, method, `${i} item of ${valueName}`, ''),\n    )\n  } else {\n    //@ts-expect-error some ts assertion edge case\n    assertNodeSetItem(value, method, valueName, ' or array of units')\n  }\n}\n\nexport const assertTarget = (\n  method: string,\n  target: NodeUnit | NodeUnit[],\n  targetField: string = 'target',\n) =>\n  forEach(arrifyNodes(target), item =>\n    deprecate(\n      !getMeta(item, 'derived'),\n      `${method}: derived unit in \"${targetField}\"`,\n      `createEvent/createStore`,\n    ),\n  )\n","import type {Stack} from './index.h'\n\nexport const callStackAReg = (\n  stack: any,\n  {fn}: {[key: string]: any},\n  {a}: Stack,\n) => fn(stack, a)\nexport const callARegStack = (\n  stack: any,\n  {fn}: {[key: string]: any},\n  {a}: Stack,\n) => fn(a, stack)\nexport const callStack = (stack: any, {fn}: {[key: string]: any}, _: Stack) =>\n  fn(stack)\n","import type {\n  StateRef,\n  Compute,\n  MovValueToRegister,\n  MovValueToStore,\n  MovStoreToRegister,\n  MovStoreToStore,\n  MovRegisterToStore,\n  Stack,\n} from './index.h'\nimport {nextStepID} from './id'\nimport {EFFECT, REG_A, SAMPLER, STACK, STORE} from './tag'\nimport type {BarrierPriorityTag} from './kernel'\nimport {callStack} from './caller'\n\nconst cmd = <Type extends 'compute' | 'mov'>(\n  type: Type,\n  data: any,\n  priority?: BarrierPriorityTag | false,\n  batch?: boolean,\n) => {\n  const result: {\n    id: string\n    type: Type\n    data: any\n    order?: {\n      priority: BarrierPriorityTag\n      barrierID?: number\n    }\n  } = {\n    id: nextStepID(),\n    type,\n    data,\n  }\n  if (priority) {\n    result.order = {priority}\n    if (batch) result.order.barrierID = ++nextBarrierID\n  }\n  return result\n}\n\nlet nextBarrierID = 0\n\nexport const mov: {\n  <T>(data: {\n    from: 'value'\n    store: T\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovValueToStore<T>\n  <T>(data: {\n    from: 'value'\n    to: 'stack' | 'a' | 'b'\n    store: T\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovValueToRegister<T>\n  (data: {\n    from: 'a' | 'b' | 'stack'\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovRegisterToStore\n  (data: {\n    from: 'a' | 'b' | 'stack'\n    to: 'a' | 'b' | 'stack'\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovRegisterToStore\n  (data: {\n    store: StateRef\n    target: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag\n  }): MovStoreToStore\n  (data: {\n    store: StateRef\n    to: 'stack' | 'a' | 'b'\n    batch?: boolean\n    priority?: BarrierPriorityTag | false\n  }): MovStoreToRegister\n  (data: {\n    store: StateRef\n    batch?: boolean\n    priority?: BarrierPriorityTag | false\n  }): MovStoreToRegister\n  // (data: {\n  //   from?: 'value' | 'store' | 'stack' | 'a' | 'b'\n  //   to?: 'stack' | 'a' | 'b' | 'store'\n  //   store?: StateRef\n  //   target?: StateRef\n  // }): Mov\n} = ({\n  from = STORE,\n  store,\n  target,\n  to = target ? STORE : STACK,\n  batch,\n  priority,\n}: {\n  from?: 'value' | 'store' | 'stack' | 'a' | 'b'\n  to?: 'stack' | 'a' | 'b' | 'store'\n  store?: StateRef\n  target?: StateRef\n  batch?: boolean\n  priority?: BarrierPriorityTag | false\n}) => cmd('mov', {from, store, to, target}, priority, batch)\n\nexport const compute = <\n  LocalValues extends {[key: string]: any} = {[key: string]: any},\n>({\n  fn,\n  batch,\n  priority,\n  safe = false,\n  filter = false,\n  pure = false,\n}: {\n  fn?: (data: any, scope: LocalValues, stack: Stack) => any\n  batch?: boolean\n  priority?: BarrierPriorityTag | false\n  safe?: boolean\n  filter?: boolean\n  pure?: boolean\n}): Compute => cmd('compute', {fn, safe, filter, pure}, priority, batch)\n\nexport const filter = ({\n  fn,\n  pure,\n}: {\n  fn(data: any, scope: {[key: string]: any}, stack: Stack): any\n  pure?: boolean\n}) => compute({fn, filter: true, pure})\n\nexport const run = ({\n  fn,\n}: {\n  fn(data: any, scope: {[key: string]: any}, stack: Stack): any\n}) => compute({fn, priority: EFFECT})\n\nexport const calc = <\n  LocalValues extends {[key: string]: any} = {[key: string]: any},\n>(\n  fn: (data: any, scope: LocalValues, stack: Stack) => any,\n  filter?: boolean,\n  isEffect?: boolean,\n) => compute({fn, safe: true, filter, priority: isEffect && EFFECT})\n\n/**\n * `read(ref, true, true)`: **reg.stack** with **sampler** batch\n *\n * `read(ref, true, false)`: **reg.stack** without batch\n *\n * `read(ref, false, true)`: **reg.a** with **sampler** batch\n *\n * `read(ref, false, false)`: **reg.a** without batch\n *\n */\nexport const read = (\n  store: StateRef,\n  toStack?: boolean,\n  samplerPriority?: boolean,\n) =>\n  mov({\n    store,\n    to: toStack ? STACK : REG_A,\n    priority: samplerPriority && SAMPLER,\n    batch: true,\n  })\n\nexport const userFnCall = (\n  fn: (data: any, scope: {[key: string]: any}, stack: Stack) => any = callStack,\n  isFilter?: boolean,\n) => compute({fn, pure: true, filter: isFilter})\n\nexport const step = {mov, compute, filter, run}\n","import type {StateRef, StateRefOp} from './index.h'\nimport {nextStepID} from './id'\nimport {add} from './collection'\n\nexport const createStateRef = (current?: any): StateRef => ({\n  id: nextStepID(),\n  current,\n})\nexport const readRef = ({current}: StateRef | {current: any}) => current\n\nexport const addRefOp = (ref: StateRef, op: StateRefOp) => {\n  if (!ref.before) ref.before = []\n  add(ref.before!, op as any)\n}\n","import {Node, NodeUnit} from './index.h'\nimport {getGraph, getOwners, getLinks, getSubscribers, getMeta} from './getter'\nimport {is} from './is'\nimport {removeItem} from './collection'\nimport {CROSSLINK} from './tag'\n\nconst removeFromNode = (currentNode: Node, targetNode: Node) => {\n  removeItem(currentNode.next, targetNode)\n  removeItem(getOwners(currentNode), targetNode)\n  removeItem(getLinks(currentNode), targetNode)\n}\nconst clearNodeNormalized = (\n  targetNode: Node,\n  deep: boolean,\n  isDomainUnit: boolean,\n) => {\n  targetNode.next.length = 0\n  targetNode.seq.length = 0\n  //@ts-expect-error\n  targetNode.scope = null\n  let currentNode\n  let list = getLinks(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (\n      deep ||\n      (isDomainUnit && getMeta(targetNode, 'op') !== 'sample') ||\n      currentNode.family.type === CROSSLINK\n    ) {\n      clearNodeNormalized(\n        currentNode,\n        deep,\n        getMeta(currentNode, 'op') !== 'on' && isDomainUnit,\n      )\n    }\n  }\n  list = getOwners(targetNode)\n  while ((currentNode = list.pop())) {\n    removeFromNode(currentNode, targetNode)\n    if (isDomainUnit && currentNode.family.type === CROSSLINK) {\n      clearNodeNormalized(\n        currentNode,\n        deep,\n        getMeta(currentNode, 'op') !== 'on' && isDomainUnit,\n      )\n    }\n  }\n}\nconst clearMap = (map: Map<any, any> | Set<any>) => map.clear()\nexport const clearNode = (\n  graphite: NodeUnit,\n  {\n    deep,\n  }: {\n    deep?: boolean\n  } = {},\n) => {\n  let isDomainUnit = false\n  //@ts-expect-error\n  if (graphite.ownerSet) graphite.ownerSet.delete(graphite)\n  if (is.store(graphite)) {\n    clearMap(getSubscribers(graphite))\n  } else if (is.domain(graphite)) {\n    isDomainUnit = true\n    const history = graphite.history\n    clearMap(history.events)\n    clearMap(history.effects)\n    clearMap(history.stores)\n    clearMap(history.domains)\n  }\n  clearNodeNormalized(getGraph(graphite), !!deep, isDomainUnit)\n}\n","import type {Subscription, NodeUnit} from './index.h'\nimport {clearNode} from './clearNode'\n\nexport const createSubscription = (node: NodeUnit): Subscription => {\n  const result = () => clearNode(node)\n  result.unsubscribe = result\n  return result\n}\n","import {processArgsToConfig} from './config'\nimport {createNode} from './createNode'\nimport type {Subscription, NodeUnit, Cmd} from './index.h'\nimport {createSubscription} from './subscription'\nimport {assertNodeSet, assertTarget} from './is'\n\nexport const createLinkNode = (\n  parent: NodeUnit | NodeUnit[],\n  child: NodeUnit | NodeUnit[],\n  node?: Array<Cmd | false | void | null>,\n  op?: string,\n  scopeFn?: Function,\n) =>\n  createNode({\n    node,\n    parent,\n    child,\n    scope: {fn: scopeFn},\n    meta: {op},\n    family: {owners: [parent, child], links: child},\n    regional: true,\n  })\nexport const forward = (opts: {\n  from: NodeUnit | NodeUnit[]\n  to: NodeUnit | NodeUnit[]\n  meta?: Record<string, any>\n}): Subscription => {\n  const method = 'forward'\n  const [{from, to}, config] = processArgsToConfig(opts, true)\n  assertNodeSet(from, method, '\"from\"')\n  assertNodeSet(to, method, '\"to\"')\n  assertTarget(method, to, 'to')\n  return createSubscription(\n    createNode({\n      parent: from,\n      child: to,\n      meta: {op: method, config},\n      family: {},\n      regional: true,\n    }),\n  )\n}\n","import {run} from './step'\nimport {callStack} from './caller'\nimport {createNode} from './createNode'\nimport {Subscription, NodeUnit} from './index.h'\nimport {createSubscription} from './subscription'\nimport {assert} from './throw'\nimport {isFunction} from './is'\n\nexport const watchUnit = (\n  unit: NodeUnit,\n  handler: (payload: any) => any,\n): Subscription => {\n  assert(isFunction(handler), '.watch argument should be a function')\n  return createSubscription(\n    createNode({\n      scope: {fn: handler},\n      node: [run({fn: callStack})],\n      parent: unit,\n      meta: {op: 'watch'},\n      family: {owners: unit},\n      regional: true,\n    }),\n  )\n}\n","import type {Unit, Stack} from './index.h'\nimport type {Effect, Scope} from './unit.h'\nimport {calc, run} from './step'\nimport {getForkPage, getGraph, getMeta, getParent, setMeta} from './getter'\nimport {own} from './own'\nimport {createNode} from './createNode'\nimport {launch, setForkPage, forkPage, isWatch} from './kernel'\nimport {createStore, createEvent} from './createUnit'\nimport {createDefer} from './defer'\nimport {isObject, isFunction} from './is'\nimport {assert} from './throw'\nimport {EFFECT} from './tag'\nimport {add, removeItem} from './collection'\nimport {flattenConfig} from './config'\nimport {nextEffectID} from './id'\n\ntype RunnerData<Params, Done, Fail> = {\n  params: Params\n  req: {\n    rs(data: Done): void\n    rj(data: Fail): void\n  }\n  args?: [params: Params, computedParams: any] | [params: Params]\n  handler?: Function\n}\n\nexport function createEffect<Params, Done, Fail = Error>(\n  nameOrConfig: any,\n  maybeConfig: any = {},\n): Effect<Params, Done, Fail> {\n  const config = flattenConfig(\n    isFunction(nameOrConfig) ? {handler: nameOrConfig} : nameOrConfig,\n    maybeConfig,\n  )\n  const instance = createEvent(\n    isFunction(nameOrConfig) ? {handler: nameOrConfig} : nameOrConfig,\n    {...maybeConfig, actualOp: EFFECT},\n  ) as unknown as Effect<Params, Done, Fail>\n  const node = getGraph(instance)\n  setMeta(node, 'op', (instance.kind = EFFECT))\n  //@ts-expect-error\n  instance.use = (fn: Function) => {\n    assert(isFunction(fn), '.use argument should be a function')\n    runner.scope.handler = fn\n    return instance\n  }\n  instance.use.getCurrent = () => runner.scope.handler\n  const anyway = (instance.finally = createEvent({\n    named: 'finally',\n    derived: true,\n  }))\n  const done = (instance.done = (anyway as any).filterMap({\n    named: 'done',\n    fn({\n      status,\n      params,\n      result,\n    }: {\n      status: 'done' | 'fail'\n      params: Params\n      result: Done\n      error: Fail\n    }) {\n      if (status === 'done') return {params, result}\n    },\n  }))\n  const fail = (instance.fail = (anyway as any).filterMap({\n    named: 'fail',\n    fn({\n      status,\n      params,\n      error,\n    }: {\n      status: 'done' | 'fail'\n      params: Params\n      result: Done\n      error: Fail\n    }) {\n      if (status === 'fail') return {params, error}\n    },\n  }))\n  const doneData = (instance.doneData = done.map({\n    named: 'doneData',\n    fn: ({result}: {result: Done}) => result,\n  }))\n  const failData = (instance.failData = fail.map({\n    named: 'failData',\n    fn: ({error}: {error: Fail}) => error,\n  }))\n\n  const runner = createNode({\n    scope: {\n      handler:\n        instance.defaultConfig.handler ||\n        (() => assert(false, `no handler used in ${instance.getType()}`)),\n    },\n    node: [\n      calc(\n        (upd: RunnerData<Params, Done, Fail>, scope_: any, stack) => {\n          let handler: Function = scope_.handler\n          const scope = getForkPage(stack)\n          if (scope) {\n            const scopeHandler =\n              scope.handlers.unitMap.get(instance) ||\n              scope.handlers.sidMap[instance.sid!]\n            if (scopeHandler) handler = scopeHandler\n          }\n          upd.handler = handler\n          return upd\n        },\n        false,\n        true,\n      ),\n      calc(\n        (\n          {\n            params,\n            req,\n            handler,\n            args = [params],\n          }: RunnerData<Params, Done, Fail> & {handler: Function},\n          _,\n          stack,\n        ) => {\n          const scopeRef = createScopeRef(stack)\n          const onResolve = onSettled(\n            params,\n            req,\n            true,\n            anyway,\n            stack,\n            scopeRef,\n          )\n          const onReject = onSettled(\n            params,\n            req,\n            false,\n            anyway,\n            stack,\n            scopeRef,\n          )\n          const [ok, result] = runFn(handler, onReject, args)\n          if (ok) {\n            if (isObject(result) && isFunction(result.then)) {\n              result.then(onResolve, onReject)\n            } else {\n              onResolve(result)\n            }\n          }\n        },\n        false,\n        true,\n      ),\n    ],\n    meta: {op: 'fx', fx: 'runner'},\n  })\n  node.scope.runner = runner\n  add(\n    node.seq,\n    calc(\n      (params, {runner}, stack) => {\n        const upd: RunnerData<Params, Done, Fail> = getParent(stack)\n          ? {params, req: {rs(data: Done) {}, rj(data: Fail) {}}}\n          : /** empty stack means that this node was launched directly */\n            params\n        if (!stack.meta) {\n          stack.meta = {fxID: nextEffectID()}\n        }\n        launch({\n          target: runner,\n          params: upd,\n          defer: true,\n          scope: getForkPage(stack),\n          meta: stack.meta,\n        })\n        return upd.params\n      },\n      false,\n      true,\n    ),\n  )\n  //@ts-expect-error\n  instance.create = (params: Params) => {\n    const req = createDefer()\n    const payload = {params, req}\n    if (forkPage) {\n      if (!isWatch) {\n        const savedFork = forkPage\n        req.req\n          .finally(() => {\n            setForkPage(savedFork)\n          })\n          .catch(() => {})\n      }\n    }\n    launch({\n      target: instance,\n      params: payload,\n      scope: forkPage,\n    })\n    return req.req\n  }\n\n  const inFlight = (instance.inFlight = createStore(0, {\n    serialize: 'ignore',\n    named: (getMeta(instance, 'name') || instance.graphite.id) + '.inFlight',\n  })\n    .on(instance, x => x + 1)\n    .on(anyway, x => x - 1)\n    .map({\n      // @ts-expect-error\n      fn: x => x,\n      named: 'inFlight',\n    }))\n  setMeta(anyway, 'needFxCounter', 'dec')\n  setMeta(instance, 'needFxCounter', true)\n  const pending = (instance.pending = inFlight.map({\n    //@ts-expect-error\n    fn: amount => amount > 0,\n    named: 'pending',\n  }))\n\n  own(instance, [anyway, done, fail, doneData, failData, pending, inFlight])\n  if (config?.domain) {\n    config.domain.hooks.effect(instance)\n  }\n  return instance\n}\nexport const runFn = (\n  fn: Function,\n  onReject: (data: any) => void,\n  args: any[],\n): [boolean, any] => {\n  try {\n    return [true, fn(...args)]\n  } catch (err) {\n    onReject(err)\n    return [false, null]\n  }\n}\n\nexport const createScopeRef = (stack: Stack) => {\n  const scope = getForkPage(stack)\n  const scopeRef = {ref: scope}\n  if (scope) add(scope.activeEffects, scopeRef)\n  return scopeRef\n}\n\nexport const onSettled =\n  (\n    params: any,\n    req: {\n      rs(_: any): void\n      rj(_: any): void\n    },\n    ok: boolean,\n    anyway: Unit,\n    stack: Stack,\n    scopeRef: {ref: Scope | void},\n  ) =>\n  (data: any) => {\n    if (scopeRef.ref) removeItem(scopeRef.ref.activeEffects, scopeRef)\n    launch({\n      target: [anyway, sidechain],\n      params: [\n        ok\n          ? {status: 'done', params, result: data}\n          : {status: 'fail', params, error: data},\n        {value: data, fn: ok ? req.rs : req.rj},\n      ],\n      defer: true,\n      // WARN! Will broke forest pages as they arent moved to new scope\n      page: stack.page,\n      scope: scopeRef.ref,\n      meta: stack.meta,\n    })\n  }\nconst sidechain = createNode({\n  node: [run({fn: ({fn, value}) => fn(value)})],\n  meta: {op: 'fx', fx: 'sidechain'},\n})\n"],"names":["e","require","k","Object","is","a","b","l","useState","m","useEffect","n","useLayoutEffect","p","useDebugValue","r","getSnapshot","value","d","f","u","window","document","createElement","inst","c","g","exports","useSyncExternalStore","h","q","t","useRef","v","useMemo","w","useSyncExternalStoreWithSelector","current","hasValue","module","defaultProps","underline","Anchor","polymorphicFactory","props","ref","className","unstyled","others","useProps","React","Text","component","cx","classes","root","mod","__staticSelector","displayName","InlineInput","forwardRef","_ref","__stylesApiProps","classNames","styles","children","label","description","id","disabled","error","size","labelPosition","variant","style","vars","getStyles","useStyles","name","Box","__vars","getFontSize","getSize","htmlFor","Input","Description","__inheritStyles","Error","RadioGroupProvider","useRadioGroupContext","createOptionalContext","InputsGroupFieldset","role","ctx","useInputWrapperContext","labelId","describedBy","RadioGroup","factory","defaultValue","onChange","wrapperProps","_name","useId","_value","setValue","useUncontrolled","finalValue","event","currentTarget","Wrapper","labelElement","RadioIcon","xmlns","fill","viewBox","width","rem","height","cy","varsResolver","createVarsResolver","theme","radius","color","iconColor","autoContrast","parsedColor","parseThemeColor","primaryColor","outlineColor","isThemeColor","shade","getRadius","getThemeColor","getContrastColor","Radio","_props","_ctx$size","_rest$name","icon","Icon","rootRef","contextSize","componentSize","styleProps","rest","extractStyleProps","uuid","contextProps","checked","focusable","type","Group","TableProvider","useTableContext","createSafeContext","getDataAttributes","options","data","columnBorder","withColumnBorders","rowBorder","withRowBorders","striped","highlightOnHover","captionSide","stickyHeader","tableElement","element","charAt","toUpperCase","slice","Component","TableTh","TableTd","TableTr","TableThead","TableTbody","TableTfoot","TableCaption","TableDataRenderer","caption","head","map","item","index","key","body","row","rowIndex","foot","_","minWidth","scrollContainer","TableScrollContainer","rootSelector","ScrollArea","offsetScrollbars","verticalSpacing","layout","horizontalSpacing","borderColor","stripedColor","highlightOnHoverColor","stickyHeaderOffset","table","getSpacing","Table","withTableBorder","Td","Th","Tr","Thead","Tbody","Tfoot","Caption","ScrollContainer","DataRenderer","o","mov","store","stateRef","to","run","fn","unshift","node","meta","watchOp","graphite","additionalLinks","s","push","indexOf","splice","S","parent","family","owners","x","unit","N","Array","isArray","stale","justSubscribed","scope","i","effect","j","keys","values","storeKeys","eventKeys","eventValues","cbCaller","compute","priority","batch","forEach","y","length","V","includes","M","U","forceScope","R","K","E","stateReader","getState","Provider","B","from","source","target","child","regional","arguments","undefined","Se","links","le","pe","seq","next","T","he","we","H","nt","et","params","defer","page","stack","G","Qe","L","tt","isRoot","currentPage","isWatch","rt","isPure","at","Ke","idx","reg","fail","order","barrierID","fullID","Ze","has","add","Xe","delete","P","st","pt","softRead","We","dt","J","pure","safe","mt","filter","ft","fxCount","storeChange","warnSerializeNode","X","Q","fullName","toString","path","concat","shortName","ze","or","and","Me","be","handlers","_len","_key","gt","_len2","_key2","se","template","lt","create","assign","$t","actualOp","watch","Mt","zt","Le","qe","filterMap","_e","$e","prepend","wt","xt","domain","hooks","ye","Ce","xe","off","set","kt","jt","Oe","Be","named","derived","subscribers","Map","updates","defaultState","setState","reset","_len3","_key3","on","get","Ie","He","W","noInit","defaultConfig","updateFilter","state","Pe","Re","sid","reinit","_len4","_key4","Z","Ct","req","Promise","rs","rj","catch","Nt","Dt","_len6","_key6","clock","greedy","Rt","te","Symbol","observable","getMeta","setMeta","compositeName","Y","kind","ee","re","ae","ne","__proto__","attached","oe","removeItem","deprecate","console","fe","idCount","de","ue","ce","readTemplate","ve","sidRoot","own","flat","je","assertNodeSetItem","assertNodeSet","Ae","callStackAReg","_ref13","_ref14","callARegStack","_ref15","_ref16","callStack","_ref17","Ne","cmd","De","_ref18","Fe","_ref19","Ee","_ref20","calc","read","Te","_ref21","_ref22","addRefOp","before","Ue","Ve","merge","Ye","Ge","Je","first","last","deleteMin","pushFirstHeapItem","Set","getPageForRef","getPageRef","ct","initRefInScope","serialize","fromSerialize","idMap","sidMap","sidIdMap","field","tryRun","failReason","ht","removeFromNode","yt","clearNodeNormalized","pop","bt","clear","vt","deep","ownerSet","history","events","effects","stores","domains","result","unsubscribe","createLinkNode","op","watchUnit","initUnit","unitId","config","thru","getType","subscribe","nativeTemplate","deriveEvent","updateStore","storeCombination","_ref23","defaultShape","_ref24","fx","fieldErrorMessage","createSampling","Et","Ft","$","_ref25","joint","_ref26","syncSourceState"],"sourceRoot":""}