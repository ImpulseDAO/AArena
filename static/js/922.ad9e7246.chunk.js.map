{"version":3,"file":"static/js/922.ad9e7246.chunk.js","mappings":"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","sources":["app/api/battleLogs.ts","../node_modules/@tabler/icons-react/src/defaultAttributes.js","../node_modules/@tabler/icons-react/src/icons/IconSearch.js","../node_modules/@tabler/icons-react/src/createReactComponent.js","pages/History/History.tsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@mantine/core/src/components/Table/Table.context.ts","../node_modules/@mantine/core/src/components/Table/Table.components.tsx","../node_modules/@mantine/core/src/components/Table/TableDataRenderer.tsx","../node_modules/@mantine/core/src/components/Table/TableScrollContainer.tsx","../node_modules/@mantine/core/src/components/Table/Table.tsx"],"sourcesContent":["import { queryClient } from \"app/providers/ReactQuery\";\nimport {\n  getGraphQLPrimaryKey,\n  useGraphQL,\n} from \"app/providers/ReactQuery/useGraphQL\";\nimport { graphql } from \"gql/gql\";\nimport { BattleLog } from \"gql/graphql\";\n\nexport const allbattleLogsQueryDocument = graphql(`\n  query BattleLogs {\n    battleLogs {\n      id\n      battleIndex\n      character1 {\n        winner\n        attributes\n        character\n        experience\n        rating\n        level\n      }\n      character2 {\n        winner\n        attributes\n        experience\n        character\n        level\n        rating\n      }\n      lobby {\n        id\n        tier\n        capacity\n        reservationsCount\n        characters {\n          id\n          character {\n            owner\n            name\n            level\n            experience\n            attributes\n            id\n          }\n        }\n      }\n      turns {\n        character1 {\n          energy\n          hp\n          position\n        }\n        logs {\n          action\n          character\n        }\n        character2 {\n          energy\n          position\n          hp\n        }\n      }\n    }\n  }\n`);\n\nexport const invalidateAllBattleLogs = () =>\n  queryClient.invalidateQueries({\n    queryKey: [getGraphQLPrimaryKey(allbattleLogsQueryDocument)],\n  });\n\nexport const useAllBattleLogs = () => {\n  // variables are not used, but we should pass undefined so that we can omit the second argument and pass the third argument\n  const queryResult = useGraphQL(allbattleLogsQueryDocument, undefined, {\n    select: (data) => data.battleLogs,\n  });\n\n  return queryResult;\n};\n\n/**\n *\n */\n\nconst battleLogByIdQueryDocument = graphql(/* GraphQL */ `\n  query BattleLogById($battleId: String!) {\n    battleLogById(id: $battleId) {\n      id\n      battleIndex\n      character1 {\n        winner\n        attributes\n        character\n        experience\n        rating\n        level\n      }\n      character2 {\n        winner\n        attributes\n        experience\n        character\n        level\n        rating\n      }\n      lobby {\n        id\n        tier\n        reservationsCount\n        capacity\n        characters {\n          id\n          character {\n            owner\n            name\n            level\n            experience\n            attributes\n            id\n          }\n        }\n      }\n      turns {\n        character1 {\n          energy\n          hp\n          position\n\n          chillingTouch\n          earthSkin\n          earthSmites\n          fireHaste\n          fireWall\n          waterBurst\n        }\n        logs {\n          action\n          character\n        }\n        character2 {\n          energy\n          position\n          hp\n\n          chillingTouch\n          earthSkin\n          earthSmites\n          fireHaste\n          fireWall\n          waterBurst\n        }\n      }\n    }\n  }\n`);\n\nexport const useBattleLogById = ({ battleId }: { battleId?: string }) => {\n  const query = useGraphQL(\n    battleLogByIdQueryDocument,\n    {\n      battleId: `${battleId}`,\n    },\n    {\n      enabled: battleId != null,\n      select: (data) => data.battleLogById,\n      placeholderData: (previousData) => previousData,\n    }\n  );\n  return query;\n};\n\n/**\n * Battle logs by lobby id\n */\n\nconst battleLogsByLobbyIdQueryDocument = graphql(/* GraphQL */ `\n  query BattleLogsByLobbyId($lobbyId: String!) {\n    battleLogs(where: { lobby: { id_eq: $lobbyId } }) {\n      id\n    }\n  }\n`);\n\nexport const useBattleLogsByLobbyId = ({ lobbyId }: { lobbyId?: string }) => {\n  const query = useGraphQL(\n    battleLogsByLobbyIdQueryDocument,\n    {\n      lobbyId: `${lobbyId}`,\n    },\n    {\n      enabled: lobbyId != null,\n      select: (data) => data.battleLogs,\n    }\n  );\n  return query;\n};\n\n/**\n * Utils\n */\n\nexport const getCharacterFromBattleLogById = (\n  battleLog: BattleLog,\n  characterId: string\n) => {\n  return battleLog.lobby.characters.find(\n    ({ character: { id } }) => id === characterId\n  )?.character;\n};\n","export default {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n};\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('search', 'IconSearch', [\n  ['path', { d: 'M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0', key: 'svg-0' }],\n  ['path', { d: 'M21 21l-6 -6', key: 'svg-1' }],\n]);\n","import { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes';\n\nexport default (iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(\n      ({ color = 'currentColor', size = 24, stroke = 2, children, ...rest }, ref) =>\n          createElement(\n              'svg',\n              {\n                ref,\n                ...defaultAttributes,\n                width: size,\n                height: size,\n                stroke: color,\n                strokeWidth: stroke,\n                className: `tabler-icon tabler-icon-${iconName}`,\n                ...rest,\n              },\n              [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(children || [])],\n          ),\n  );\n\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    stroke: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n","import './styles.scss';\nimport { debounce } from 'lodash';\nimport { getCharacterFromBattleLogById, useAllBattleLogs } from 'app/api/battleLogs';\nimport { Flex, Table, Text, TextInput, rem } from '@mantine/core';\nimport { IconSearch } from '@tabler/icons-react';\nimport { routes } from 'app/routes';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { BattleLog } from 'gql/graphql';\nimport React, { useEffect } from 'react';\nimport { useMyCharacters } from 'app/api/characters';\nimport { useMyAccountId } from 'hooks/hooks';\nimport { TheButton } from 'components/TheButton';\n\nexport const History = () => {\n  const navigate = useNavigate();\n  const myAccountId = useMyAccountId();\n  const [searchStr, setSearchStr] = React.useState('');\n\n  /**\n   *\n   */\n\n  const { data: myCharacters } = useMyCharacters({ owner_eq: myAccountId ?? '' });\n  const { data: battleLogsUnfilteredUnsorted } = useAllBattleLogs();\n\n  /**\n   * If true, only show battle logs where the player's characters are involved.\n   */\n  const [searchParams, setSearchParams] = useSearchParams();\n  const isFiltered = searchParams.get('filtered') === 'true';\n\n  useEffect(() => {\n    // set initial if not set\n    if (!searchParams.get('filtered')) {\n      setSearchParams('filtered=true');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const battleLogsUnfilteredSorted = React.useMemo(() => {\n    return battleLogsUnfilteredUnsorted?.sort((a, b) => parseInt(a.id) - parseInt(b.id));\n  }, [battleLogsUnfilteredUnsorted]);\n\n  /**\n   * Filter battle logs\n   */\n\n  const battleLogs = React.useMemo(() => {\n    if (!isFiltered) { return battleLogsUnfilteredSorted; }\n\n    const myCharactersIds = myCharacters?.characters.map((character) => character.id) ?? [];\n\n    return battleLogsUnfilteredSorted?.filter((battleLog: BattleLog) => {\n      return (myCharactersIds.includes(battleLog.character1.character)\n        || myCharactersIds.includes(battleLog.character2.character));\n    });\n  }, [battleLogsUnfilteredSorted, isFiltered, myCharacters?.characters]);\n\n  /**\n   * Apply search string\n   */\n\n  const battleLogsAfterSearch = React.useMemo(() => {\n    if (!searchStr) { return battleLogs; }\n\n    return battleLogs?.filter((battleLog: BattleLog) => {\n      if (battleLog.lobby.id.toLowerCase().includes(searchStr.toLowerCase())) { return true; }\n      if (battleLog.id.toLowerCase().includes(searchStr.toLowerCase())) { return true; }\n\n      const playersInBattle = getPlayersInBattle(battleLog);\n\n      return playersInBattle.some(character => {\n        return character?.name.toLowerCase().includes(searchStr.toLowerCase());\n      });\n    });\n  }, [battleLogs, searchStr]);\n\n  /**\n   * transform rows data\n   */\n\n  const inProgressRows = React.useMemo(() => {\n    return battleLogsAfterSearch?.toReversed().map((battleLog: BattleLog) => {\n      const { id } = battleLog;\n      const playersInBattle = getPlayersInBattle(battleLog);\n\n      const playersNames = playersInBattle.map((character) => character?.name ?? 'Player not found');\n      const playersOwners = playersInBattle.map((character) => character?.owner ?? 'Player not found');\n      const winner = battleLog.character1.winner ? playersInBattle[0] : battleLog.character2.winner ? playersInBattle[1] : { name: 'No winner', owner: '' };\n\n      const winnerName = winner?.name;\n      const winnerOwner = winner?.owner;\n\n      const includesMyCharacter = playersOwners.includes(myAccountId ?? '') || (winnerOwner && winnerOwner === myAccountId);\n\n      return ({\n        playersNames,\n        battleId: id,\n        lobbyId: battleLog.lobby.id,\n        tier: battleLog.lobby.tier,\n        winner: winnerName,\n        includesMyCharacter\n      });\n    }) ?? [];\n  }, [battleLogsAfterSearch, myAccountId]);\n\n\n  const BUTTON_WIDTH = '200px';\n\n  return (\n    <div className='logs'>\n      <div className='modal_leaderboard'>\n        <Flex\n          style={{ alignSelf: 'stretch' }}\n          mb=\"xs\"\n          justify={'space-between'}\n          w=\"100%\"\n        >\n          <TheButton\n            w={BUTTON_WIDTH}\n            size=\"sm\"\n            bg=\"black\"\n            onClick={() => setSearchParams(prev => {\n              const newParams = new URLSearchParams(prev);\n              newParams.set('filtered', isFiltered ? 'false' : 'true');\n              return newParams;\n            },)}\n          >{isFiltered ? \"Show all logs\" : \"Show my logs only\"}</TheButton>\n\n          <TextInput\n            w={BUTTON_WIDTH}\n            size=\"sm\"\n            placeholder=\"Search...\"\n            rightSectionWidth={42}\n            styles={{\n              input: {\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                border: '2px solid white',\n                color: 'white'\n              }\n            }}\n            c=\"white\"\n            leftSection={<IconSearch style={{ width: rem(18), height: rem(18) }} color=\"white\" stroke={2.5} />}\n            onChange={(event) => {\n              debounce(() => {\n                setSearchStr(event.target.value);\n              }, 300, { maxWait: 1000 })();\n            }}\n          />\n        </Flex>\n\n        <div className='header'>History</div>\n        <div className='modal_table'>\n          <Table horizontalSpacing=\"md\" verticalSpacing=\"md\" >\n            <Table.Thead>\n              <Table.Tr>\n                {[\n                  'Lobby ID',\n                  'Battle ID',\n                  'Tier',\n                  'Players',\n                  'Winner',\n                ].map((header, idx) => {\n                  return (\n                    <Table.Th\n                      key={header}\n                      w={CELL_WIDTH[idx]}\n                      ta={TEXT_ALIGN[idx]}\n                    >\n                      {header}\n                    </Table.Th>\n                  );\n                })}\n              </Table.Tr>\n            </Table.Thead>\n            <Table.Tbody>{inProgressRows.map((row) => {\n              return (\n                <Table.Tr\n                  onClick={() => {\n                    const [lobbyId, battleId] = row.battleId.split('-') as [string, string | undefined];\n                    navigate(routes.tournamentResult({ lobbyId, battleId }));\n                  }}\n                  className={['table_row', row.includesMyCharacter && !isFiltered ? 'table_row_highlighted' : ''].join(' ')}\n                  key={`${row.battleId}-${row.lobbyId}`}\n                >\n                  {[\n                    /* Lobby ID */\n                    <div className={'badge'} > {row.lobbyId}</div>,\n                    /* Battle ID */\n                    <div className={'badge'}>{row.battleId}</div>,\n                    /* Tier */\n                    <Text ta=\"center\" size='sm' fw=\"500\">{row.tier}</Text>,\n                    /* Players */\n                    row.playersNames.map(playerName => {\n                      return (\n                        <div key={playerName}>\n                          {playerName}\n                        </div>\n                      );\n                    }),\n                    /* Winner */\n                    row.winner,\n                  ].map((cellContent, idx) => {\n                    return (\n                      <Table.Td\n                        key={idx}\n                        w={CELL_WIDTH[idx]}\n                        ta={TEXT_ALIGN[idx]}\n                      >\n                        {cellContent}\n                      </Table.Td>\n                    );\n                  })}\n\n                </Table.Tr>);\n            })}</Table.Tbody>\n          </Table>\n\n        </div>\n      </div>\n    </div >\n  );\n};\n\nconst CELL_WIDTH = {\n  0: '100px',\n  1: '100px',\n  2: '40px'\n};\n\nconst TEXT_ALIGN = {\n  0: 'center',\n  1: 'center',\n  2: 'center'\n};\n\n/**\n * Utils\n */\n\nfunction getPlayersInBattle(battleLog: BattleLog) {\n  const char1Id = battleLog.character1.character;\n  const char2Id = battleLog.character2.character;\n  return [char1Id, char2Id].map((charId) => getCharacterFromBattleLogById(battleLog, charId));\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import { createSafeContext, GetStylesApi } from '../../core';\nimport type { TableFactory } from './Table';\n\nexport interface TableContextValue {\n  getStyles: GetStylesApi<TableFactory>;\n  stickyHeader: boolean | undefined;\n  striped: 'odd' | 'even' | undefined;\n  highlightOnHover: boolean | undefined;\n  withColumnBorders: boolean | undefined;\n  withRowBorders: boolean | undefined;\n  captionSide: 'top' | 'bottom';\n}\n\nexport const [TableProvider, useTableContext] = createSafeContext<TableContextValue>(\n  'Table component was not found in the tree'\n);\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  FactoryPayload,\n  useProps,\n} from '../../core';\nimport type { TableFactory } from './Table';\nimport { TableContextValue, useTableContext } from './Table.context';\nimport classes from './Table.module.css';\n\nexport interface TableElementProps<Selector extends string>\n  extends BoxProps,\n    CompoundStylesApiProps<Omit<TableFactory, 'stylesNames'> & { stylesNames: Selector }> {}\n\nexport interface TableThProps extends TableElementProps<'th'>, ElementProps<'th'> {}\nexport interface TableTdProps extends TableElementProps<'td'>, ElementProps<'td'> {}\nexport interface TableTrProps extends TableElementProps<'tr'>, ElementProps<'tr'> {}\nexport interface TableTheadProps extends TableElementProps<'thead'>, ElementProps<'thead'> {}\nexport interface TableTbodyProps extends TableElementProps<'tbody'>, ElementProps<'tbody'> {}\nexport interface TableTfootProps extends TableElementProps<'tfoot'>, ElementProps<'tfoot'> {}\nexport interface TableCaptionProps extends TableElementProps<'caption'>, ElementProps<'caption'> {}\n\nexport type TableThFactory = Factory<{\n  props: TableThProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'th';\n  compound: true;\n}>;\n\nexport type TableTdFactory = Factory<{\n  props: TableTdProps;\n  ref: HTMLTableCellElement;\n  stylesNames: 'td';\n  compound: true;\n}>;\n\nexport type TableTrFactory = Factory<{\n  props: TableTrProps;\n  ref: HTMLTableRowElement;\n  stylesNames: 'tr';\n  compound: true;\n}>;\n\nexport type TableTheadFactory = Factory<{\n  props: TableTheadProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'thead';\n  compound: true;\n}>;\n\nexport type TableTbodyFactory = Factory<{\n  props: TableTbodyProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tbody';\n  compound: true;\n}>;\n\nexport type TableTfootFactory = Factory<{\n  props: TableTfootProps;\n  ref: HTMLTableSectionElement;\n  stylesNames: 'tfoot';\n  compound: true;\n}>;\n\nexport type TableCaptionFactory = Factory<{\n  props: TableCaptionProps;\n  ref: HTMLTableCaptionElement;\n  stylesNames: 'caption';\n  compound: true;\n}>;\n\ninterface TableElementOptions {\n  columnBorder?: true;\n  rowBorder?: true;\n  striped?: true;\n  highlightOnHover?: true;\n  captionSide?: true;\n  stickyHeader?: true;\n}\n\nfunction getDataAttributes(ctx: TableContextValue, options?: TableElementOptions) {\n  if (!options) {\n    return undefined;\n  }\n\n  const data: Record<string, boolean | string> = {};\n\n  if (options.columnBorder && ctx.withColumnBorders) {\n    data['data-with-column-border'] = true;\n  }\n\n  if (options.rowBorder && ctx.withRowBorders) {\n    data['data-with-row-border'] = true;\n  }\n\n  if (options.striped && ctx.striped) {\n    data['data-striped'] = ctx.striped;\n  }\n\n  if (options.highlightOnHover && ctx.highlightOnHover) {\n    data['data-hover'] = true;\n  }\n\n  if (options.captionSide && ctx.captionSide) {\n    data['data-side'] = ctx.captionSide;\n  }\n\n  if (options.stickyHeader && ctx.stickyHeader) {\n    data['data-sticky'] = true;\n  }\n\n  return data;\n}\n\nexport function tableElement<Factory extends FactoryPayload>(\n  element: 'th' | 'td' | 'tr' | 'thead' | 'tbody' | 'tfoot' | 'caption',\n  options?: TableElementOptions\n) {\n  const name = `Table${element.charAt(0).toUpperCase()}${element.slice(1)}`;\n  const Component = factory<Factory>((_props, ref) => {\n    const props = useProps(name, {}, _props);\n    const { classNames, className, style, styles, ...others } = props;\n\n    const ctx = useTableContext();\n\n    return (\n      <Box\n        component={element}\n        ref={ref}\n        {...getDataAttributes(ctx, options)}\n        {...ctx.getStyles(element, { className, classNames, style, styles, props })}\n        {...others}\n      />\n    );\n  });\n\n  Component.displayName = `@mantine/core/${name}`;\n  Component.classes = classes;\n  return Component;\n}\n\nexport const TableTh = tableElement<TableThFactory>('th', { columnBorder: true });\nexport const TableTd = tableElement<TableTdFactory>('td', { columnBorder: true });\nexport const TableTr = tableElement<TableTrFactory>('tr', {\n  rowBorder: true,\n  striped: true,\n  highlightOnHover: true,\n});\nexport const TableThead = tableElement<TableTheadFactory>('thead', { stickyHeader: true });\nexport const TableTbody = tableElement<TableTbodyFactory>('tbody');\nexport const TableTfoot = tableElement<TableTfootFactory>('tfoot');\nexport const TableCaption = tableElement<TableCaptionFactory>('caption', { captionSide: true });\n","import React from 'react';\nimport type { TableData } from './Table';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\n\nexport interface TableDataRendererProps {\n  data: TableData;\n}\n\nexport function TableDataRenderer({ data }: TableDataRendererProps) {\n  return (\n    <>\n      {data.caption && <TableCaption>{data.caption}</TableCaption>}\n\n      {data.head && (\n        <TableThead>\n          <TableTr>\n            {data.head.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableThead>\n      )}\n\n      {data.body && (\n        <TableTbody>\n          {data.body.map((row, rowIndex) => (\n            <TableTr key={rowIndex}>\n              {row.map((item, index) => (\n                <TableTd key={index}>{item}</TableTd>\n              ))}\n            </TableTr>\n          ))}\n        </TableTbody>\n      )}\n\n      {data.foot && (\n        <TableTfoot>\n          <TableTr>\n            {data.foot.map((item, index) => (\n              <TableTh key={index}>{item}</TableTh>\n            ))}\n          </TableTr>\n        </TableTfoot>\n      )}\n    </>\n  );\n}\n\nTableDataRenderer.displayName = '@mantine/core/TableDataRenderer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ScrollArea } from '../ScrollArea';\nimport classes from './Table.module.css';\n\nexport type TableScrollContainerStylesNames = 'scrollContainer' | 'scrollContainerInner';\nexport type TableScrollContainerCssVariables = {\n  scrollContainer: '--table-min-width' | '--table-overflow';\n};\n\nexport interface TableScrollContainerProps\n  extends BoxProps,\n    StylesApiProps<TableScrollContainerFactory>,\n    ElementProps<'div'> {\n  /** `min-width` of the `Table` at which it should become scrollable */\n  minWidth: React.CSSProperties['minWidth'];\n\n  /** Type of the scroll container, `native` to use native scrollbars, `scrollarea` to use `ScrollArea` component, `scrollarea` by default */\n  type?: 'native' | 'scrollarea';\n}\n\nexport type TableScrollContainerFactory = Factory<{\n  props: TableScrollContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: TableScrollContainerStylesNames;\n  vars: TableScrollContainerCssVariables;\n}>;\n\nconst defaultProps: Partial<TableScrollContainerProps> = {\n  type: 'scrollarea',\n};\n\nconst varsResolver = createVarsResolver<TableScrollContainerFactory>((_, { minWidth, type }) => ({\n  scrollContainer: {\n    '--table-min-width': rem(minWidth),\n    '--table-overflow': type === 'native' ? 'auto' : undefined,\n  },\n}));\n\nexport const TableScrollContainer = factory<TableScrollContainerFactory>((_props, ref) => {\n  const props = useProps('TableScrollContainer', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    minWidth,\n    type,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableScrollContainerFactory>({\n    name: 'TableScrollContainer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver,\n    rootSelector: 'scrollContainer',\n  });\n\n  return (\n    <Box<any>\n      component={type === 'scrollarea' ? ScrollArea : 'div'}\n      {...(type === 'scrollarea' ? { offsetScrollbars: 'x' } : {})}\n      ref={ref}\n      {...getStyles('scrollContainer')}\n      {...others}\n    >\n      <div {...getStyles('scrollContainerInner')}>{children}</div>\n    </Box>\n  );\n});\n\nTableScrollContainer.classes = classes;\nTableScrollContainer.displayName = '@mantine/core/TableScrollContainer';\n","import React from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  getThemeColor,\n  MantineColor,\n  MantineSpacing,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport {\n  TableCaption,\n  TableTbody,\n  TableTd,\n  TableTfoot,\n  TableTh,\n  TableThead,\n  TableTr,\n} from './Table.components';\nimport { TableProvider } from './Table.context';\nimport { TableDataRenderer } from './TableDataRenderer';\nimport { TableScrollContainer } from './TableScrollContainer';\nimport classes from './Table.module.css';\n\nexport type TableStylesNames =\n  | 'table'\n  | 'thead'\n  | 'tbody'\n  | 'tfoot'\n  | 'tr'\n  | 'th'\n  | 'td'\n  | 'caption';\n\nexport type TableCssVariables = {\n  table:\n    | '--table-layout'\n    | '--table-border-color'\n    | '--table-caption-side'\n    | '--table-horizontal-spacing'\n    | '--table-vertical-spacing'\n    | '--table-striped-color'\n    | '--table-highlight-on-hover-color'\n    | '--table-sticky-header-offset';\n};\n\nexport interface TableData {\n  head?: React.ReactNode[];\n  body?: React.ReactNode[][];\n  foot?: React.ReactNode[];\n  caption?: string;\n}\n\nexport interface TableProps extends BoxProps, StylesApiProps<TableFactory>, ElementProps<'table'> {\n  /** Value of `table-layout` style, `auto` by default */\n  layout?: React.CSSProperties['tableLayout'];\n\n  /** Determines on which side `Table.Caption` is displayed, `bottom` by default */\n  captionSide?: 'top' | 'bottom';\n\n  /** Color of table borders, key of `theme.colors` or any valid CSS color */\n  borderColor?: MantineColor;\n\n  /** Determines whether the table should have outer border, `false` by default */\n  withTableBorder?: boolean;\n\n  /** Determines whether the table should have borders between columns, `false` by default */\n  withColumnBorders?: boolean;\n\n  /** Determines whether the table should have borders between rows, `true` by default */\n  withRowBorders?: boolean;\n\n  /** Horizontal cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  horizontalSpacing?: MantineSpacing;\n\n  /** Vertical cells spacing, key of `theme.spacing` or any valid CSS value for padding, numbers are converted to rem, default value is `xs` */\n  verticalSpacing?: MantineSpacing;\n\n  /** Determines whether every odd/even row background should be changed to `strippedColor`, if set to `true`, then `odd` value will be used, `false` by default  */\n  striped?: boolean | 'odd' | 'even';\n\n  /** Background color of striped rows, key of `theme.colors` or any valid CSS color */\n  stripedColor?: MantineColor;\n\n  /** Determines whether table rows background should change to `highlightOnHoverColor` when hovered, `false` by default */\n  highlightOnHover?: boolean;\n\n  /** Background color of table rows when hovered, key of `theme.colors` or any valid CSS color */\n  highlightOnHoverColor?: MantineColor;\n\n  /** Data that should be used to generate table, ignored if `children` prop is set */\n  data?: TableData;\n\n  /** Determines whether `Table.Thead` should be sticky, `false` by default */\n  stickyHeader?: boolean;\n\n  /** Offset from top at which `Table.Thead` should become sticky, `0` by default */\n  stickyHeaderOffset?: number | string;\n}\n\nexport type TableFactory = Factory<{\n  props: TableProps;\n  ref: HTMLTableElement;\n  stylesNames: TableStylesNames;\n  vars: TableCssVariables;\n  staticComponents: {\n    Thead: typeof TableThead;\n    Tbody: typeof TableTbody;\n    Tfoot: typeof TableTfoot;\n    Td: typeof TableTd;\n    Th: typeof TableTh;\n    Tr: typeof TableTr;\n    Caption: typeof TableCaption;\n    ScrollContainer: typeof TableScrollContainer;\n    DataRenderer: typeof TableDataRenderer;\n  };\n}>;\n\nconst defaultProps: Partial<TableProps> = {\n  withRowBorders: true,\n  verticalSpacing: 7,\n};\n\nconst varsResolver = createVarsResolver<TableFactory>(\n  (\n    theme,\n    {\n      layout,\n      captionSide,\n      horizontalSpacing,\n      verticalSpacing,\n      borderColor,\n      stripedColor,\n      highlightOnHoverColor,\n      striped,\n      highlightOnHover,\n      stickyHeaderOffset,\n      stickyHeader,\n    }\n  ) => ({\n    table: {\n      '--table-layout': layout,\n      '--table-caption-side': captionSide,\n      '--table-horizontal-spacing': getSpacing(horizontalSpacing),\n      '--table-vertical-spacing': getSpacing(verticalSpacing),\n      '--table-border-color': borderColor ? getThemeColor(borderColor, theme) : undefined,\n      '--table-striped-color':\n        striped && stripedColor ? getThemeColor(stripedColor, theme) : undefined,\n      '--table-highlight-on-hover-color':\n        highlightOnHover && highlightOnHoverColor\n          ? getThemeColor(highlightOnHoverColor, theme)\n          : undefined,\n      '--table-sticky-header-offset': stickyHeader ? rem(stickyHeaderOffset) : undefined,\n    },\n  })\n);\n\nexport const Table = factory<TableFactory>((_props, ref) => {\n  const props = useProps('Table', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    horizontalSpacing,\n    verticalSpacing,\n    captionSide,\n    stripedColor,\n    highlightOnHoverColor,\n    striped,\n    highlightOnHover,\n    withColumnBorders,\n    withRowBorders,\n    withTableBorder,\n    borderColor,\n    layout,\n    variant,\n    data,\n    children,\n    stickyHeader,\n    stickyHeaderOffset,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableFactory>({\n    name: 'Table',\n    props,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    rootSelector: 'table',\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TableProvider\n      value={{\n        getStyles,\n        stickyHeader,\n        striped: striped === true ? 'odd' : striped || undefined,\n        highlightOnHover,\n        withColumnBorders,\n        withRowBorders,\n        captionSide: captionSide || 'bottom',\n      }}\n    >\n      <Box\n        component=\"table\"\n        variant={variant}\n        ref={ref}\n        mod={{ 'data-with-table-border': withTableBorder }}\n        {...getStyles('table')}\n        {...others}\n      >\n        {children || (!!data && <TableDataRenderer data={data} />)}\n      </Box>\n    </TableProvider>\n  );\n});\n\nTable.classes = classes;\nTable.displayName = '@mantine/core/Table';\nTable.Td = TableTd;\nTable.Th = TableTh;\nTable.Tr = TableTr;\nTable.Thead = TableThead;\nTable.Tbody = TableTbody;\nTable.Tfoot = TableTfoot;\nTable.Caption = TableCaption;\nTable.ScrollContainer = TableScrollContainer;\nTable.DataRenderer = TableDataRenderer;\n"],"names":["allbattleLogsQueryDocument","graphql","useAllBattleLogs","useGraphQL","undefined","select","data","battleLogs","battleLogByIdQueryDocument","useBattleLogById","_ref","battleId","enabled","battleLogById","placeholderData","previousData","battleLogsByLobbyIdQueryDocument","useBattleLogsByLobbyId","_ref2","lobbyId","getCharacterFromBattleLogById","battleLog","characterId","_battleLog$lobby$char","lobby","characters","find","_ref3","character","id","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","IconSearch","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","_a","ref","_b","color","size","children","rest","__objRest","createElement","__spreadValues","className","map","tag","attrs","propTypes","PropTypes","displayName","d","key","History","navigate","useNavigate","myAccountId","useMyAccountId","searchStr","setSearchStr","React","myCharacters","useMyCharacters","owner_eq","battleLogsUnfilteredUnsorted","searchParams","setSearchParams","useSearchParams","isFiltered","get","useEffect","battleLogsUnfilteredSorted","sort","a","b","parseInt","_myCharacters$charact","myCharactersIds","filter","includes","character1","character2","battleLogsAfterSearch","toLowerCase","getPlayersInBattle","some","name","inProgressRows","_battleLogsAfterSearc","toReversed","playersInBattle","playersNames","_character$name","playersOwners","_character$owner","owner","winner","winnerName","winnerOwner","includesMyCharacter","tier","BUTTON_WIDTH","_jsx","_jsxs","Flex","style","alignSelf","mb","justify","w","TheButton","bg","onClick","prev","newParams","URLSearchParams","set","TextInput","placeholder","rightSectionWidth","styles","input","backgroundColor","border","c","leftSection","rem","onChange","event","debounce","target","value","maxWait","Table","horizontalSpacing","verticalSpacing","Thead","Tr","header","idx","Th","CELL_WIDTH","ta","TEXT_ALIGN","Tbody","row","split","routes","tournamentResult","join","Text","fw","playerName","cellContent","Td","charId","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","TableProvider","useTableContext","createSafeContext","getDataAttributes","ctx","options","columnBorder","withColumnBorders","rowBorder","withRowBorders","striped","highlightOnHover","captionSide","stickyHeader","tableElement","charAt","toUpperCase","slice","factory","_props","useProps","classNames","others","Box","component","getStyles","classes","TableTh","TableTd","TableTr","TableThead","TableTbody","TableTfoot","TableCaption","TableDataRenderer","caption","head","item","index","body","rowIndex","foot","defaultProps","type","varsResolver","createVarsResolver","_","minWidth","scrollContainer","TableScrollContainer","unstyled","vars","useStyles","rootSelector","ScrollArea","offsetScrollbars","theme","layout","borderColor","stripedColor","highlightOnHoverColor","stickyHeaderOffset","table","getSpacing","getThemeColor","withTableBorder","variant","mod","Tfoot","Caption","ScrollContainer","DataRenderer"],"sourceRoot":""}