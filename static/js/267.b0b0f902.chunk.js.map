{"version":3,"file":"static/js/267.b0b0f902.chunk.js","mappings":"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","sources":["assets/svg/step_back.svg","assets/svg/step_forward.svg","assets/svg/forward.svg","assets/svg/back.svg","pages/Battle/components/textMap.ts","pages/Battle/components/BattleUser.tsx","pages/Battle/Battle.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgStepBack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 14,\n    viewBox: \"0 0 24 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.631579 5.86298C-0.210526 6.36832 -0.210526 7.63168 0.631579 8.13702L10.1053 13.8221C10.9474 14.3275 12 13.6958 12 12.6851V7.00142C12.0005 7.44312 12.211 7.88462 12.6316 8.13702L22.1053 13.8221C22.9474 14.3275 24 13.6958 24 12.6851V1.31488C24 0.304193 22.9474 -0.327487 22.1053 0.177857L12.6316 5.86298C12.211 6.11538 12.0004 6.55688 12 6.99858V1.31488C12 0.304193 10.9474 -0.327487 10.1053 0.177857L0.631579 5.86298Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgStepBack);\nexport default __webpack_public_path__ + \"static/media/step_back.d8330a176ce7365419928293ce4e57d4.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgStepForward(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 14,\n    viewBox: \"0 0 24 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M23.3684 5.86298C24.2105 6.36832 24.2105 7.63168 23.3684 8.13702L13.8947 13.8221C13.0526 14.3275 12 13.6958 12 12.6851V7.00142C11.9995 7.44312 11.789 7.88462 11.3684 8.13702L1.89474 13.8221C1.05263 14.3275 0 13.6958 0 12.6851V1.31488C0 0.304193 1.05263 -0.327487 1.89474 0.177857L11.3684 5.86298C11.789 6.11538 11.9996 6.55688 12 6.99858V1.31488C12 0.304193 13.0526 -0.327487 13.8947 0.177857L23.3684 5.86298Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgStepForward);\nexport default __webpack_public_path__ + \"static/media/step_forward.1b98f31e2cd2e5a80d471fce537ae5c8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgForward(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 14,\n    viewBox: \"0 0 15 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M13.5 0C14.3284 0 15 0.671573 15 1.5V12.5C15 13.3284 14.3284 14 13.5 14C12.6716 14 12 13.3284 12 12.5V7.00065C11.9998 7.44261 11.7893 7.88448 11.3684 8.13702L1.89474 13.8221C1.05263 14.3275 -9.53674e-07 13.6958 -9.53674e-07 12.6851L0 1.31488C0 0.304194 1.05263 -0.327487 1.89474 0.177857L11.3684 5.86298C11.7893 6.11553 11.9998 6.55739 12 6.99935V1.5C12 0.671573 12.6716 0 13.5 0Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgForward);\nexport default __webpack_public_path__ + \"static/media/forward.b60cb2268c2eae20ebae79bbca831b1d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 14,\n    viewBox: \"0 0 15 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.5 0C0.671573 0 0 0.671573 0 1.5V12.5C0 13.3284 0.671573 14 1.5 14C2.32843 14 3 13.3284 3 12.5V7.00065C3.00021 7.44261 3.21073 7.88448 3.63158 8.13702L13.1053 13.8221C13.9474 14.3275 15 13.6958 15 12.6851L15 1.31488C15 0.304194 13.9474 -0.327487 13.1053 0.177857L3.63158 5.86298C3.21073 6.11553 3.00021 6.55739 3 6.99935V1.5C3 0.671573 2.32843 0 1.5 0Z\",\n    fill: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBack);\nexport default __webpack_public_path__ + \"static/media/back.8de93fbe4e80fb9e36206bd1063f6702.svg\";\nexport { ForwardRef as ReactComponent };","export const textMap = {\n  quickAttack: {\n    success: (name: string) =>\n      `${name} swiftly strikes the opponent with a quick attack, catching them off guard. The sound of steel meeting flesh echoes through the arena as the opponent staggers backward, momentarily disoriented`,\n    fail: (name: string) =>\n      `${name} swiftly lunges forward, aiming for a quick strike, but their opponent is as quick as a viper. With uncanny reflexes, the opponent anticipates the attack and gracefully evades it, leaving ${name} momentarily off balance. The crowd gasps in anticipation as the Gladiator readies themselves for the opponent's imminent counterattack`,\n  },\n  normalAttack: {\n    success: (name: string) =>\n      `With a calculated swing, ${name} delivers a solid blow with a normal attack. The clash of weapons reverberates in the air as the opponent grunts in pain`,\n    fail: (name: string) =>\n      `With determination, ${name} delivers a well-measured strike, but their opponent proves to be a formidable adversary. The opponent's defenses hold strong, deflecting the ${name}’s attack with impeccable skill. The clash of weapons echoes through the arena, drawing the attention of the crowd, who watches in anticipation as the ${name} quickly recovers, preparing for their next move`,\n  },\n  hardAttack: {\n    success: (name: string) =>\n      `Gathering all their strength, ${name} unleashes a powerful strike with a resounding impact. The force of the blow sends shockwaves through the arena, causing the opponent to stumble backward, clutching their wounds`,\n    fail: (name: string) =>\n      `Gathering every ounce of strength, ${name} unleashes a mighty swing, aiming to deliver a crushing blow. However, their opponent is no stranger to the art of combat. With an instinctual maneuver, the opponent expertly parries the ${name}’s attack, turning the forceful strike into a mere glancing blow. The arena rumbles with the sound of clashing steel, as the ${name} finds themselves momentarily exposed and on the defensive, forced to react swiftly to the opponent's ensuing assault`,\n  },\n  moveRight: (name: string) => `${name} steps to the right`,\n  moveLeft: (name: string) => `${name} steps to the left`,\n  rest: (name: string) =>\n    `Sensing the ebb and flow of battle, ${name} takes a moment to catch their breath, seeking respite in the midst of combat. Gladiator’s muscles tense and relax as they regain focus, rejuvenating their stamina for the challenges that lie ahead`,\n};\n","import { StatBar } from \"pages/@shared/StatBar\";\nimport LockSvg from \"../../../assets/svg/lock.svg\";\nimport CharSvg from \"../../../assets/svg/char.svg\";\n\nexport const BattleUser = ({\n  user,\n  userIndex,\n  health,\n  energy,\n}: {\n  user: any;\n  userIndex: 1 | 2;\n  health: number;\n  energy: number;\n}) => {\n  return (\n    <div className={`battle_user${userIndex}`}>\n      <div className=\"battle_data\">\n        <div className=\"battle_user\">\n          <div className=\"battle_name\">\n            <p>{user?.name}</p>\n            <p>\n              <span>Level</span>\n              <span>1</span>\n            </p>\n          </div>\n        </div>\n        <div className=\"battle_armour\">\n          <span>Armour</span>\n          <span>0</span>\n        </div>\n        <div className=\"battle_stats\">\n          <p>\n            <span>Strength</span>\n            <span>{user?.attributes.strength}</span>\n          </p>\n\n          <p>\n            <span>Agility</span>\n            <span>{user?.attributes.agility}</span>\n          </p>\n          <p>\n            <span>Vitality</span>\n            <span>{user?.attributes.vitality}</span>\n          </p>\n          <p>\n            <span>Stamina</span>\n            <span>{user?.attributes.stamina}</span>\n          </p>\n        </div>\n      </div>\n      <div className=\"battle_equip\">\n        <StatBar health={health} energy={energy} />\n        <div className={\"img_wrapper\"}>\n          {[\n            \"lock_img1\",\n            \"lock_img2\",\n            \"lock_img3\",\n            \"lock_img4\",\n            \"lock_img5\",\n            \"char_svg\",\n            \"lock_img6\",\n            \"lock_img7\",\n            \"lock_img8\",\n            \"lock_img9\",\n          ].map((className) => (\n            <img\n              className={className}\n              key={className}\n              src={className.startsWith(\"lock\") ? LockSvg : CharSvg}\n              alt={className}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { FC, useMemo, useState } from \"react\";\nimport \"./styles.scss\";\nimport StepBack from \"../../assets/svg/step_back.svg\";\nimport StepForward from \"../../assets/svg/step_forward.svg\";\nimport Forward from \"../../assets/svg/forward.svg\";\nimport Back from \"../../assets/svg/back.svg\";\nimport { Button } from \"components/Button\";\nimport { textMap } from \"./components/textMap\";\nimport { BattleUser } from \"./components/BattleUser\";\nimport { getTypeAttack } from \"./utils/getTypeAttack\";\nimport { getFullEnergy } from \"consts\";\n\nexport type BattleProps = {};\n\ntype TurnTypes = \"move\" | \"attack\" | \"miss\" | \"rest\";\ntype TurnGeneric<K extends TurnTypes, T> = { [key in K]: T };\ntype Turn =\n  | TurnGeneric<\"move\", { position: number; }>\n  | TurnGeneric<\"attack\", { damage: number; position: number; }>\n  | TurnGeneric<\"miss\", { position: number; }>\n  | TurnGeneric<\"rest\", { position: number; }>;\n\nexport type BattleLogs = {\n  logs: Array<{\n    c1: string;\n    c2: string;\n    turns: Turn[];\n    winner: string;\n  }>;\n  winner: string;\n};\n\nexport const Battle: FC<BattleProps> = () => {\n  const usersOnBattle = JSON.parse(localStorage.getItem(\"usersOnQueue\") ?? '[]') as [];\n  const battleLogs = JSON.parse(\n    localStorage.getItem(\"battleLog\") ?? '[]'\n  ) as BattleLogs;\n  const [curBattleIndex, setCurrentBattleIndex] = useState(0);\n  const [curTurnIndex, setCurTurnIndex] = useState(0);\n\n  const nextBattleLog = () => {\n    const count = battleLogs.logs.length;\n    setCurTurnIndex(0);\n    setCurrentBattleIndex((prev) => {\n      if (prev + 1 === count) {\n        return 0;\n      }\n      return prev + 1;\n    });\n  };\n\n  const prevBattleLog = () => {\n    const count = battleLogs.logs.length;\n    setCurTurnIndex(0);\n    setCurrentBattleIndex((prev) => {\n      if (prev === 0) {\n        return count - 1;\n      }\n      return prev - 1;\n    });\n  };\n\n  const currentBattleLog = useMemo(() => {\n    const curBattle = battleLogs.logs[curBattleIndex];\n    let plPos1 = 0,\n      plPos2 =\n        \"move\" in curBattle.turns[1] ? curBattle.turns[1].move.position : 0;\n    let pl1SumAttacked = 0,\n      pl2SumAttacked = 0;\n\n    // let pl1EnegryCost = 0,\n    //   pl2EnegryCost = 0;\n\n    const turns = curBattle.turns.map((turn, i) => {\n      const action = Object.keys(turn)[0] as TurnTypes;\n      const id = i % 2 === 0 ? curBattle.c1 : curBattle.c2;\n\n      if (\"move\" in turn) {\n        const { position } = turn.move;\n        if (i % 2 === 0) {\n          plPos1 = position;\n          // pl1EnegryCost += 3;\n        } else {\n          plPos2 = position;\n          // pl2EnegryCost += 3;\n        }\n      }\n\n      if (\"attack\" in turn) {\n        const { damage } = turn.attack;\n\n        if (i % 2 === 0) {\n          pl1SumAttacked += damage;\n          // pl1EnegryCost += getTypeAttack(\n          //   usersOnBattle[id].attributes.stamina,\n          //   damage\n          // ).costEnergy;\n        } else {\n          pl2SumAttacked += damage;\n          // pl2EnegryCost += getTypeAttack(\n          //   usersOnBattle[id].attributes.stamina,\n          //   damage\n          // ).costEnergy;\n        }\n      }\n\n      // if (\"rest\" in turn) {\n      //   if (i % 2 === 0) {\n      //     pl1SumAttacked += damage;\n      //     pl1EnegryCost += getTypeAttack(\n      //       usersOnBattle[id].attributes.stamina,\n      //       damage\n      //     ).costEnergy;\n      //   } else {\n      //     pl2SumAttacked += damage;\n      //     pl2EnegryCost += getTypeAttack(\n      //       usersOnBattle[id].attributes.stamina,\n      //       damage\n      //     ).costEnergy;\n      //   }\n      // }\n\n      return {\n        action,\n        pl1SumAttacked,\n        pl2SumAttacked,\n        pl2Pos:\n          action === \"move\" && i % 2 !== 0\n            ? Object.values(turn)[0].position\n            : plPos2,\n        pl1Pos:\n          action === \"move\" && i % 2 === 0\n            ? Object.values(turn)[0].position\n            : plPos1,\n        isPl1Turn: i % 2 === 0,\n        isAttack: action === \"attack\",\n        isMiss: action === \"miss\",\n        isMove: action === \"move\",\n        isRest: action === \"rest\",\n        value: Object.values(turn)[0],\n        // pl2EnegryCost,\n        // pl1EnegryCost,\n        id,\n      };\n    });\n\n    return {\n      plId1: curBattle.c1,\n      plId2: curBattle.c2,\n      battleWinner: curBattle.winner,\n      turns,\n    };\n  }, [battleLogs, curBattleIndex]);\n\n  const [user1, user2] = useMemo(() => {\n    const curBattle = battleLogs.logs[curBattleIndex];\n    if (usersOnBattle && curBattle) {\n      return [usersOnBattle[curBattle.c1], usersOnBattle[curBattle.c2]];\n    }\n    return [];\n  }, [battleLogs.logs, curBattleIndex, usersOnBattle]);\n\n  const nextBattleTurn = () => {\n    setCurTurnIndex((prev) => {\n      if (prev + 1 === currentBattleLog.turns.length) {\n        return prev;\n      }\n      return prev + 1;\n    });\n  };\n\n  const prevBattleTurn = () => {\n    setCurTurnIndex((prev) => {\n      if (prev === 0) {\n        return prev;\n      }\n      return prev - 1;\n    });\n  };\n\n  const pl1Health =\n    usersOnBattle[currentBattleLog.plId1].attributes.vitality * 30 +\n      10 -\n      currentBattleLog.turns[curTurnIndex].pl2SumAttacked >\n      0\n      ? usersOnBattle[currentBattleLog.plId1].attributes.vitality * 30 +\n      10 -\n      currentBattleLog.turns[curTurnIndex].pl2SumAttacked\n      : 0;\n\n  const pl2Health =\n    usersOnBattle[currentBattleLog.plId2].attributes.vitality * 30 +\n      10 -\n      currentBattleLog.turns[curTurnIndex].pl1SumAttacked >\n      0\n      ? usersOnBattle[currentBattleLog.plId2].attributes.vitality * 30 +\n      10 -\n      currentBattleLog.turns[curTurnIndex].pl1SumAttacked\n      : 0;\n\n  return (\n    <div className=\"battle\">\n      <h2 className=\"battle_winner_info\">\n        №{curBattleIndex + 1}{\" \"}\n        {currentBattleLog.battleWinner === currentBattleLog.plId1\n          ? user1?.name\n          : user2?.name}{\" \"}\n        won\n      </h2>\n\n      <div className=\"battle_users\">\n        <BattleUser\n          user={user1}\n          userIndex={1}\n          health={pl1Health}\n          energy={getFullEnergy(user1.attributes.stamina)}\n        />\n        <BattleUser\n          user={user2}\n          userIndex={2}\n          health={pl2Health}\n          energy={getFullEnergy(user2.attributes.stamina)}\n        />\n      </div>\n      <div className=\"battle_actions\">\n        <Button\n          disabled={battleLogs.logs.length <= 1}\n          className={\"battle_button prev\"}\n          onClick={prevBattleLog}\n        >\n          <img src={Back} alt=\" Previous battle\" /> Previous battle\n        </Button>\n        <Button className={\"battle_button step_left\"} onClick={prevBattleTurn}>\n          <img src={StepBack} alt=\"Step back\" />\n        </Button>\n        <Button disabled className={\"battle_button play\"} onClick={() => { }}>\n          Play battle\n        </Button>\n        <Button className={\"battle_button step_right\"} onClick={nextBattleTurn}>\n          <img src={StepForward} alt=\"Step forward\" />\n        </Button>\n        <Button\n          disabled={battleLogs.logs.length <= 1}\n          className={\"battle_button next\"}\n          onClick={nextBattleLog}\n        >\n          Next battle\n          <img src={Forward} alt=\"Next battle\" />\n        </Button>\n      </div>\n      <div className=\"battle_logs\">\n        <div className=\"battle_line\">\n          <div className=\"battle_area\">\n            <div\n              className=\"battle_line_user1\"\n              style={{\n                left: `${currentBattleLog.turns[curTurnIndex].pl1Pos * 5 + 1}%`,\n              }}\n            />\n            <div\n              className=\"battle_line_user2\"\n              style={{\n                left: `${currentBattleLog.turns[curTurnIndex].pl2Pos * 5 + 1}%`,\n              }}\n            />\n            <div className=\"battle_axis\" />\n          </div>\n        </div>\n        <table className=\"battle_logs_content\">\n          {(currentBattleLog.turns ?? []).map((currentTurn, i, arr) => {\n            const {\n              isPl1Turn,\n              isMove,\n              isAttack,\n              isMiss,\n              isRest,\n              value,\n            } = currentTurn;\n\n            const name = usersOnBattle[currentTurn.id].name;\n\n            return (\n              <tr\n                className={`battle_log ${i === curTurnIndex ? \"active\" : \"\"}`}\n              >\n                {/* Turn number */}\n                <td>\n                  <center>{i + 1}</center>\n                </td>\n\n                {/* Player Name */}\n                <td className={\"battle_player_name\"}>{` ${name}`}</td>\n\n                {/* Type */}\n                <td className={\"battle_turn_type\"}>\n                  <center>\n                    {isMove\n                      ? \"Move\"\n                      : isAttack\n                        ? \"Attack\"\n                        : isMiss\n                          ? \"Miss\"\n                          : \"\"}\n                  </center>\n                </td>\n\n                {/* Description */}\n                {isMove ? (\n                  <td>{textMap[isPl1Turn ? \"moveRight\" : \"moveLeft\"](name)}</td>\n                ) : isAttack ? (\n                  <td>\n                    {textMap.normalAttack.success(name)}\n                    <br />\n                    Damage: {\"damage\" in value ? (value.damage as number) : 0}\n                  </td>\n                ) : isMiss ? (\n                  <td>{textMap.normalAttack.fail(name)}</td>\n                ) : isRest ? (\n                  <td>{textMap.rest(name)}</td>\n                ) : (\n                  <td></td>\n                )}\n              </tr>\n            );\n          })}\n        </table>\n      </div>\n    </div>\n  );\n};\n"],"names":["textMap","quickAttack","success","name","fail","normalAttack","hardAttack","moveRight","moveLeft","rest","BattleUser","_ref","user","userIndex","health","energy","_jsxs","className","children","_jsx","attributes","strength","agility","vitality","stamina","StatBar","map","src","startsWith","LockSvg","CharSvg","alt","Battle","_localStorage$getItem","_localStorage$getItem2","_currentBattleLog$tur","usersOnBattle","JSON","parse","localStorage","getItem","battleLogs","curBattleIndex","setCurrentBattleIndex","useState","curTurnIndex","setCurTurnIndex","currentBattleLog","useMemo","curBattle","logs","plPos1","plPos2","turns","move","position","pl1SumAttacked","pl2SumAttacked","turn","i","action","Object","keys","id","c1","c2","damage","attack","pl2Pos","values","pl1Pos","isPl1Turn","isAttack","isMiss","isMove","isRest","value","plId1","plId2","battleWinner","winner","user1","user2","pl1Health","pl2Health","getFullEnergy","Button","disabled","length","onClick","prevBattleLog","count","prev","Back","prevBattleTurn","StepBack","nextBattleTurn","StepForward","nextBattleLog","Forward","style","left","currentTurn","arr"],"sourceRoot":""}